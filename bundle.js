/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e={927:(e,t,i)=>{"use strict";var n;function a(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function r(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?a(Object(i),!0).forEach((function(t){u(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function l(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function c(e,t,i){return t&&l(e.prototype,t),i&&l(e,i),e}function u(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function h(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&f(e,t)}function d(e){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function f(e,t){return(f=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function p(e,t){if(t&&("object"==typeof t||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function g(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var i,n=d(e);if(t){var a=d(this).constructor;i=Reflect.construct(n,arguments,a)}else i=n.apply(this,arguments);return p(this,i)}}function m(e){return function(e){if(Array.isArray(e))return v(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return v(e,t);var i=Object.prototype.toString.call(e).slice(8,-1);return"Object"===i&&e.constructor&&(i=e.constructor.name),"Map"===i||"Set"===i?Array.from(e):"Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)?v(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function v(e,t){(null==t||t>e.length)&&(t=e.length);for(var i=0,n=new Array(t);i<t;i++)n[i]=e[i];return n}var x=function(){function e(){o(this,e)}return c(e,[{key:"shadeRGBColor",value:function(e,t){var i=t.split(","),n=e<0?0:255,a=e<0?-1*e:e,r=parseInt(i[0].slice(4),10),s=parseInt(i[1],10),o=parseInt(i[2],10);return"rgb("+(Math.round((n-r)*a)+r)+","+(Math.round((n-s)*a)+s)+","+(Math.round((n-o)*a)+o)+")"}},{key:"shadeHexColor",value:function(e,t){var i=parseInt(t.slice(1),16),n=e<0?0:255,a=e<0?-1*e:e,r=i>>16,s=i>>8&255,o=255&i;return"#"+(16777216+65536*(Math.round((n-r)*a)+r)+256*(Math.round((n-s)*a)+s)+(Math.round((n-o)*a)+o)).toString(16).slice(1)}},{key:"shadeColor",value:function(t,i){return e.isColorHex(i)?this.shadeHexColor(t,i):this.shadeRGBColor(t,i)}}],[{key:"bind",value:function(e,t){return function(){return e.apply(t,arguments)}}},{key:"isObject",value:function(e){return e&&"object"===s(e)&&!Array.isArray(e)&&null!=e}},{key:"is",value:function(e,t){return Object.prototype.toString.call(t)==="[object "+e+"]"}},{key:"listToArray",value:function(e){var t,i=[];for(t=0;t<e.length;t++)i[t]=e[t];return i}},{key:"extend",value:function(e,t){var i=this;"function"!=typeof Object.assign&&(Object.assign=function(e){if(null==e)throw new TypeError("Cannot convert undefined or null to object");for(var t=Object(e),i=1;i<arguments.length;i++){var n=arguments[i];if(null!=n)for(var a in n)n.hasOwnProperty(a)&&(t[a]=n[a])}return t});var n=Object.assign({},e);return this.isObject(e)&&this.isObject(t)&&Object.keys(t).forEach((function(a){i.isObject(t[a])&&a in e?n[a]=i.extend(e[a],t[a]):Object.assign(n,u({},a,t[a]))})),n}},{key:"extendArray",value:function(t,i){var n=[];return t.map((function(t){n.push(e.extend(i,t))})),n}},{key:"monthMod",value:function(e){return e%12}},{key:"clone",value:function(t){if(e.is("Array",t)){for(var i=[],n=0;n<t.length;n++)i[n]=this.clone(t[n]);return i}if(e.is("Null",t))return null;if(e.is("Date",t))return t;if("object"===s(t)){var a={};for(var r in t)t.hasOwnProperty(r)&&(a[r]=this.clone(t[r]));return a}return t}},{key:"log10",value:function(e){return Math.log(e)/Math.LN10}},{key:"roundToBase10",value:function(e){return Math.pow(10,Math.floor(Math.log10(e)))}},{key:"roundToBase",value:function(e,t){return Math.pow(t,Math.floor(Math.log(e)/Math.log(t)))}},{key:"parseNumber",value:function(e){return null===e?e:parseFloat(e)}},{key:"randomId",value:function(){return(Math.random()+1).toString(36).substring(4)}},{key:"noExponents",value:function(e){var t=String(e).split(/[eE]/);if(1===t.length)return t[0];var i="",n=e<0?"-":"",a=t[0].replace(".",""),r=Number(t[1])+1;if(r<0){for(i=n+"0.";r++;)i+="0";return i+a.replace(/^-/,"")}for(r-=a.length;r--;)i+="0";return a+i}},{key:"getDimensions",value:function(e){var t=getComputedStyle(e,null),i=e.clientHeight,n=e.clientWidth;return i-=parseFloat(t.paddingTop)+parseFloat(t.paddingBottom),[n-=parseFloat(t.paddingLeft)+parseFloat(t.paddingRight),i]}},{key:"getBoundingClientRect",value:function(e){var t=e.getBoundingClientRect();return{top:t.top,right:t.right,bottom:t.bottom,left:t.left,width:e.clientWidth,height:e.clientHeight,x:t.left,y:t.top}}},{key:"getLargestStringFromArr",value:function(e){return e.reduce((function(e,t){return Array.isArray(t)&&(t=t.reduce((function(e,t){return e.length>t.length?e:t}))),e.length>t.length?e:t}),0)}},{key:"hexToRgba",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"#999999",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.6;"#"!==e.substring(0,1)&&(e="#999999");var i=e.replace("#","");i=i.match(new RegExp("(.{"+i.length/3+"})","g"));for(var n=0;n<i.length;n++)i[n]=parseInt(1===i[n].length?i[n]+i[n]:i[n],16);return void 0!==t&&i.push(t),"rgba("+i.join(",")+")"}},{key:"getOpacityFromRGBA",value:function(e){return parseFloat(e.replace(/^.*,(.+)\)/,"$1"))}},{key:"rgb2hex",value:function(e){return(e=e.match(/^rgba?[\s+]?\([\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?/i))&&4===e.length?"#"+("0"+parseInt(e[1],10).toString(16)).slice(-2)+("0"+parseInt(e[2],10).toString(16)).slice(-2)+("0"+parseInt(e[3],10).toString(16)).slice(-2):""}},{key:"isColorHex",value:function(e){return/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)|(^#[0-9A-F]{8}$)/i.test(e)}},{key:"getPolygonPos",value:function(e,t){for(var i=[],n=2*Math.PI/t,a=0;a<t;a++){var r={};r.x=e*Math.sin(a*n),r.y=-e*Math.cos(a*n),i.push(r)}return i}},{key:"polarToCartesian",value:function(e,t,i,n){var a=(n-90)*Math.PI/180;return{x:e+i*Math.cos(a),y:t+i*Math.sin(a)}}},{key:"escapeString",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"x",i=e.toString().slice();return i.replace(/[` ~!@#$%^&*()_|+\-=?;:'",.<>{}[\]\\/]/gi,t)}},{key:"negToZero",value:function(e){return e<0?0:e}},{key:"moveIndexInArray",value:function(e,t,i){if(i>=e.length)for(var n=i-e.length+1;n--;)e.push(void 0);return e.splice(i,0,e.splice(t,1)[0]),e}},{key:"extractNumber",value:function(e){return parseFloat(e.replace(/[^\d.]*/g,""))}},{key:"findAncestor",value:function(e,t){for(;(e=e.parentElement)&&!e.classList.contains(t););return e}},{key:"setELstyles",value:function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e.style.key=t[i])}},{key:"isNumber",value:function(e){return!isNaN(e)&&parseFloat(Number(e))===e&&!isNaN(parseInt(e,10))}},{key:"isFloat",value:function(e){return Number(e)===e&&e%1!=0}},{key:"isSafari",value:function(){return/^((?!chrome|android).)*safari/i.test(navigator.userAgent)}},{key:"isFirefox",value:function(){return navigator.userAgent.toLowerCase().indexOf("firefox")>-1}},{key:"isIE11",value:function(){if(-1!==window.navigator.userAgent.indexOf("MSIE")||window.navigator.appVersion.indexOf("Trident/")>-1)return!0}},{key:"isIE",value:function(){var e=window.navigator.userAgent,t=e.indexOf("MSIE ");if(t>0)return parseInt(e.substring(t+5,e.indexOf(".",t)),10);if(e.indexOf("Trident/")>0){var i=e.indexOf("rv:");return parseInt(e.substring(i+3,e.indexOf(".",i)),10)}var n=e.indexOf("Edge/");return n>0&&parseInt(e.substring(n+5,e.indexOf(".",n)),10)}}]),e}(),b=function(){function e(t){o(this,e),this.ctx=t,this.w=t.w,this.setEasingFunctions()}return c(e,[{key:"setEasingFunctions",value:function(){var e;if(!this.w.globals.easing){switch(this.w.config.chart.animations.easing){case"linear":e="-";break;case"easein":e="<";break;case"easeout":e=">";break;case"easeinout":default:e="<>";break;case"swing":e=function(e){var t=1.70158;return(e-=1)*e*((t+1)*e+t)+1};break;case"bounce":e=function(e){return e<1/2.75?7.5625*e*e:e<2/2.75?7.5625*(e-=1.5/2.75)*e+.75:e<2.5/2.75?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375};break;case"elastic":e=function(e){return e===!!e?e:Math.pow(2,-10*e)*Math.sin((e-.075)*(2*Math.PI)/.3)+1}}this.w.globals.easing=e}}},{key:"animateLine",value:function(e,t,i,n){e.attr(t).animate(n).attr(i)}},{key:"animateMarker",value:function(e,t,i,n,a,r){t||(t=0),e.attr({r:t,width:t,height:t}).animate(n,a).attr({r:i,width:i.width,height:i.height}).afterAll((function(){r()}))}},{key:"animateCircle",value:function(e,t,i,n,a){e.attr({r:t.r,cx:t.cx,cy:t.cy}).animate(n,a).attr({r:i.r,cx:i.cx,cy:i.cy})}},{key:"animateRect",value:function(e,t,i,n,a){e.attr(t).animate(n).attr(i).afterAll((function(){return a()}))}},{key:"animatePathsGradually",value:function(e){var t=e.el,i=e.realIndex,n=e.j,a=e.fill,r=e.pathFrom,s=e.pathTo,o=e.speed,l=e.delay,c=this.w,u=0;c.config.chart.animations.animateGradually.enabled&&(u=c.config.chart.animations.animateGradually.delay),c.config.chart.animations.dynamicAnimation.enabled&&c.globals.dataChanged&&"bar"!==c.config.chart.type&&(u=0),this.morphSVG(t,i,n,"line"!==c.config.chart.type||c.globals.comboCharts?a:"stroke",r,s,o,l*u)}},{key:"showDelayedElements",value:function(){this.w.globals.delayedElements.forEach((function(e){e.el.classList.remove("apexcharts-element-hidden")}))}},{key:"animationCompleted",value:function(e){var t=this.w;t.globals.animationEnded||(t.globals.animationEnded=!0,this.showDelayedElements(),"function"==typeof t.config.chart.events.animationEnd&&t.config.chart.events.animationEnd(this.ctx,{el:e,w:t}))}},{key:"morphSVG",value:function(e,t,i,n,a,r,s,o){var l=this,c=this.w;a||(a=e.attr("pathFrom")),r||(r=e.attr("pathTo"));var u=function(e){return"radar"===c.config.chart.type&&(s=1),"M 0 ".concat(c.globals.gridHeight)};(!a||a.indexOf("undefined")>-1||a.indexOf("NaN")>-1)&&(a=u()),(!r||r.indexOf("undefined")>-1||r.indexOf("NaN")>-1)&&(r=u()),c.globals.shouldAnimate||(s=1),e.plot(a).animate(1,c.globals.easing,o).plot(a).animate(s,c.globals.easing,o).plot(r).afterAll((function(){x.isNumber(i)?i===c.globals.series[c.globals.maxValsInArrayIndex].length-2&&c.globals.shouldAnimate&&l.animationCompleted(e):"none"!==n&&c.globals.shouldAnimate&&(!c.globals.comboCharts&&t===c.globals.series.length-1||c.globals.comboCharts)&&l.animationCompleted(e),l.showDelayedElements()}))}}]),e}(),y=function(){function e(t){o(this,e),this.ctx=t,this.w=t.w}return c(e,[{key:"getDefaultFilter",value:function(e,t){var i=this.w;e.unfilter(!0),(new window.SVG.Filter).size("120%","180%","-5%","-40%"),"none"!==i.config.states.normal.filter?this.applyFilter(e,t,i.config.states.normal.filter.type,i.config.states.normal.filter.value):i.config.chart.dropShadow.enabled&&this.dropShadow(e,i.config.chart.dropShadow,t)}},{key:"addNormalFilter",value:function(e,t){var i=this.w;i.config.chart.dropShadow.enabled&&!e.node.classList.contains("apexcharts-marker")&&this.dropShadow(e,i.config.chart.dropShadow,t)}},{key:"addLightenFilter",value:function(e,t,i){var n=this,a=this.w,r=i.intensity;e.unfilter(!0),new window.SVG.Filter,e.filter((function(e){var i=a.config.chart.dropShadow;(i.enabled?n.addShadow(e,t,i):e).componentTransfer({rgb:{type:"linear",slope:1.5,intercept:r}})})),e.filterer.node.setAttribute("filterUnits","userSpaceOnUse"),this._scaleFilterSize(e.filterer.node)}},{key:"addDarkenFilter",value:function(e,t,i){var n=this,a=this.w,r=i.intensity;e.unfilter(!0),new window.SVG.Filter,e.filter((function(e){var i=a.config.chart.dropShadow;(i.enabled?n.addShadow(e,t,i):e).componentTransfer({rgb:{type:"linear",slope:r}})})),e.filterer.node.setAttribute("filterUnits","userSpaceOnUse"),this._scaleFilterSize(e.filterer.node)}},{key:"applyFilter",value:function(e,t,i){var n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;switch(i){case"none":this.addNormalFilter(e,t);break;case"lighten":this.addLightenFilter(e,t,{intensity:n});break;case"darken":this.addDarkenFilter(e,t,{intensity:n})}}},{key:"addShadow",value:function(e,t,i){var n=i.blur,a=i.top,r=i.left,s=i.color,o=i.opacity,l=e.flood(Array.isArray(s)?s[t]:s,o).composite(e.sourceAlpha,"in").offset(r,a).gaussianBlur(n).merge(e.source);return e.blend(e.source,l)}},{key:"dropShadow",value:function(e,t){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,n=t.top,a=t.left,r=t.blur,s=t.color,o=t.opacity,l=t.noUserSpaceOnUse,c=this.w;return e.unfilter(!0),x.isIE()&&"radialBar"===c.config.chart.type||(s=Array.isArray(s)?s[i]:s,e.filter((function(e){var t;t=x.isSafari()||x.isFirefox()||x.isIE()?e.flood(s,o).composite(e.sourceAlpha,"in").offset(a,n).gaussianBlur(r):e.flood(s,o).composite(e.sourceAlpha,"in").offset(a,n).gaussianBlur(r).merge(e.source),e.blend(e.source,t)})),l||e.filterer.node.setAttribute("filterUnits","userSpaceOnUse"),this._scaleFilterSize(e.filterer.node)),e}},{key:"setSelectionFilter",value:function(e,t,i){var n=this.w;if(void 0!==n.globals.selectedDataPoints[t]&&n.globals.selectedDataPoints[t].indexOf(i)>-1){e.node.setAttribute("selected",!0);var a=n.config.states.active.filter;"none"!==a&&this.applyFilter(e,t,a.type,a.value)}}},{key:"_scaleFilterSize",value:function(e){!function(t){for(var i in t)t.hasOwnProperty(i)&&e.setAttribute(i,t[i])}({width:"200%",height:"200%",x:"-50%",y:"-50%"})}}]),e}(),w=function(){function e(t){o(this,e),this.ctx=t,this.w=t.w}return c(e,[{key:"drawLine",value:function(e,t,i,n){var a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"#a8a8a8",r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"butt",l=this.w,c=l.globals.dom.Paper.line().attr({x1:e,y1:t,x2:i,y2:n,stroke:a,"stroke-dasharray":r,"stroke-width":s,"stroke-linecap":o});return c}},{key:"drawRect",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"#fefefe",s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1,o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,l=arguments.length>8&&void 0!==arguments[8]?arguments[8]:null,c=arguments.length>9&&void 0!==arguments[9]?arguments[9]:0,u=this.w,h=u.globals.dom.Paper.rect();return h.attr({x:e,y:t,width:i>0?i:0,height:n>0?n:0,rx:a,ry:a,opacity:s,"stroke-width":null!==o?o:0,stroke:null!==l?l:"none","stroke-dasharray":c}),h.node.setAttribute("fill",r),h}},{key:"drawPolygon",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"#e1e1e1",i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"none",a=this.w,r=a.globals.dom.Paper.polygon(e).attr({fill:n,stroke:t,"stroke-width":i});return r}},{key:"drawCircle",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,i=this.w;e<0&&(e=0);var n=i.globals.dom.Paper.circle(2*e);return null!==t&&n.attr(t),n}},{key:"drawPath",value:function(e){var t=e.d,i=void 0===t?"":t,n=e.stroke,a=void 0===n?"#a8a8a8":n,r=e.strokeWidth,s=void 0===r?1:r,o=e.fill,l=e.fillOpacity,c=void 0===l?1:l,u=e.strokeOpacity,h=void 0===u?1:u,d=e.classes,f=e.strokeLinecap,p=void 0===f?null:f,g=e.strokeDashArray,m=void 0===g?0:g,v=this.w;return null===p&&(p=v.config.stroke.lineCap),(i.indexOf("undefined")>-1||i.indexOf("NaN")>-1)&&(i="M 0 ".concat(v.globals.gridHeight)),v.globals.dom.Paper.path(i).attr({fill:o,"fill-opacity":c,stroke:a,"stroke-opacity":h,"stroke-linecap":p,"stroke-width":s,"stroke-dasharray":m,class:d})}},{key:"group",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=this.w,i=t.globals.dom.Paper.group();return null!==e&&i.attr(e),i}},{key:"move",value:function(e,t){return["M",e,t].join(" ")}},{key:"line",value:function(e,t){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,n=null;return null===i?n=["L",e,t].join(" "):"H"===i?n=["H",e].join(" "):"V"===i&&(n=["V",t].join(" ")),n}},{key:"curve",value:function(e,t,i,n,a,r){return["C",e,t,i,n,a,r].join(" ")}},{key:"quadraticCurve",value:function(e,t,i,n){return["Q",e,t,i,n].join(" ")}},{key:"arc",value:function(e,t,i,n,a,r,s){var o=arguments.length>7&&void 0!==arguments[7]&&arguments[7],l="A";o&&(l="a");var c=[l,e,t,i,n,a,r,s].join(" ");return c}},{key:"renderPaths",value:function(e){var t,i=e.j,n=e.realIndex,a=e.pathFrom,s=e.pathTo,o=e.stroke,l=e.strokeWidth,c=e.strokeLinecap,u=e.fill,h=e.animationDelay,d=e.initialSpeed,f=e.dataChangeSpeed,p=e.className,g=e.shouldClipToGrid,m=void 0===g||g,v=e.bindEventsOnPaths,x=void 0===v||v,w=e.drawShadow,k=void 0===w||w,S=this.w,A=new y(this.ctx),C=new b(this.ctx),E=this.w.config.chart.animations.enabled,P=E&&this.w.config.chart.animations.dynamicAnimation.enabled,T=!!(E&&!S.globals.resized||P&&S.globals.dataChanged&&S.globals.shouldAnimate);T?t=a:(t=s,S.globals.animationEnded=!0);var L,I=S.config.stroke.dashArray;L=Array.isArray(I)?I[n]:S.config.stroke.dashArray;var M=this.drawPath({d:t,stroke:o,strokeWidth:l,fill:u,fillOpacity:1,classes:p,strokeLinecap:c,strokeDashArray:L});if(M.attr("index",n),m&&M.attr({"clip-path":"url(#gridRectMask".concat(S.globals.cuid,")")}),"none"!==S.config.states.normal.filter.type)A.getDefaultFilter(M,n);else if(S.config.chart.dropShadow.enabled&&k&&(!S.config.chart.dropShadow.enabledOnSeries||S.config.chart.dropShadow.enabledOnSeries&&-1!==S.config.chart.dropShadow.enabledOnSeries.indexOf(n))){var O=S.config.chart.dropShadow;A.dropShadow(M,O,n)}x&&(M.node.addEventListener("mouseenter",this.pathMouseEnter.bind(this,M)),M.node.addEventListener("mouseleave",this.pathMouseLeave.bind(this,M)),M.node.addEventListener("mousedown",this.pathMouseDown.bind(this,M))),M.attr({pathTo:s,pathFrom:a});var z={el:M,j:i,realIndex:n,pathFrom:a,pathTo:s,fill:u,strokeWidth:l,delay:h};return!E||S.globals.resized||S.globals.dataChanged?!S.globals.resized&&S.globals.dataChanged||C.showDelayedElements():C.animatePathsGradually(r(r({},z),{},{speed:d})),S.globals.dataChanged&&P&&T&&C.animatePathsGradually(r(r({},z),{},{speed:f})),M}},{key:"drawPattern",value:function(e,t,i){var n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"#a8a8a8",a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,r=this.w,s=r.globals.dom.Paper.pattern(t,i,(function(r){"horizontalLines"===e?r.line(0,0,i,0).stroke({color:n,width:a+1}):"verticalLines"===e?r.line(0,0,0,t).stroke({color:n,width:a+1}):"slantedLines"===e?r.line(0,0,t,i).stroke({color:n,width:a}):"squares"===e?r.rect(t,i).fill("none").stroke({color:n,width:a}):"circles"===e&&r.circle(t).fill("none").stroke({color:n,width:a})}));return s}},{key:"drawGradient",value:function(e,t,i,n,a){var r,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,l=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null,c=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0,u=this.w;t.length<9&&0===t.indexOf("#")&&(t=x.hexToRgba(t,n)),i.length<9&&0===i.indexOf("#")&&(i=x.hexToRgba(i,a));var h=0,d=1,f=1,p=null;null!==o&&(h=void 0!==o[0]?o[0]/100:0,d=void 0!==o[1]?o[1]/100:1,f=void 0!==o[2]?o[2]/100:1,p=void 0!==o[3]?o[3]/100:null);var g=!("donut"!==u.config.chart.type&&"pie"!==u.config.chart.type&&"polarArea"!==u.config.chart.type&&"bubble"!==u.config.chart.type);if(r=null===l||0===l.length?u.globals.dom.Paper.gradient(g?"radial":"linear",(function(e){e.at(h,t,n),e.at(d,i,a),e.at(f,i,a),null!==p&&e.at(p,t,n)})):u.globals.dom.Paper.gradient(g?"radial":"linear",(function(e){(Array.isArray(l[c])?l[c]:l).forEach((function(t){e.at(t.offset/100,t.color,t.opacity)}))})),g){var m=u.globals.gridWidth/2,v=u.globals.gridHeight/2;"bubble"!==u.config.chart.type?r.attr({gradientUnits:"userSpaceOnUse",cx:m,cy:v,r:s}):r.attr({cx:.5,cy:.5,r:.8,fx:.2,fy:.2})}else"vertical"===e?r.from(0,0).to(0,1):"diagonal"===e?r.from(0,0).to(1,1):"horizontal"===e?r.from(0,1).to(1,1):"diagonal2"===e&&r.from(1,0).to(0,1);return r}},{key:"drawText",value:function(e){var t,i=e.x,n=e.y,a=e.text,r=e.textAnchor,s=e.fontSize,o=e.fontFamily,l=e.fontWeight,c=e.foreColor,u=e.opacity,h=e.cssClass,d=void 0===h?"":h,f=e.isPlainText,p=void 0===f||f,g=this.w;return void 0===a&&(a=""),r||(r="start"),c&&c.length||(c=g.config.chart.foreColor),o=o||g.config.chart.fontFamily,l=l||"regular",(t=Array.isArray(a)?g.globals.dom.Paper.text((function(e){for(var t=0;t<a.length;t++)0===t?e.tspan(a[t]):e.tspan(a[t]).newLine()})):p?g.globals.dom.Paper.plain(a):g.globals.dom.Paper.text((function(e){return e.tspan(a)}))).attr({x:i,y:n,"text-anchor":r,"dominant-baseline":"auto","font-size":s,"font-family":o,"font-weight":l,fill:c,class:"apexcharts-text "+d}),t.node.style.fontFamily=o,t.node.style.opacity=u,t}},{key:"drawMarker",value:function(e,t,i){e=e||0;var n=i.pSize||0,a=null;if("square"===i.shape||"rect"===i.shape){var r=void 0===i.pRadius?n/2:i.pRadius;null!==t&&n||(n=0,r=0);var s=1.2*n+r,o=this.drawRect(s,s,s,s,r);o.attr({x:e-s/2,y:t-s/2,cx:e,cy:t,class:i.class?i.class:"",fill:i.pointFillColor,"fill-opacity":i.pointFillOpacity?i.pointFillOpacity:1,stroke:i.pointStrokeColor,"stroke-width":i.pointStrokeWidth?i.pointStrokeWidth:0,"stroke-opacity":i.pointStrokeOpacity?i.pointStrokeOpacity:1}),a=o}else"circle"!==i.shape&&i.shape||(x.isNumber(t)||(n=0,t=0),a=this.drawCircle(n,{cx:e,cy:t,class:i.class?i.class:"",stroke:i.pointStrokeColor,fill:i.pointFillColor,"fill-opacity":i.pointFillOpacity?i.pointFillOpacity:1,"stroke-width":i.pointStrokeWidth?i.pointStrokeWidth:0,"stroke-opacity":i.pointStrokeOpacity?i.pointStrokeOpacity:1}));return a}},{key:"pathMouseEnter",value:function(e,t){var i=this.w,n=new y(this.ctx),a=parseInt(e.node.getAttribute("index"),10),r=parseInt(e.node.getAttribute("j"),10);if("function"==typeof i.config.chart.events.dataPointMouseEnter&&i.config.chart.events.dataPointMouseEnter(t,this.ctx,{seriesIndex:a,dataPointIndex:r,w:i}),this.ctx.events.fireEvent("dataPointMouseEnter",[t,this.ctx,{seriesIndex:a,dataPointIndex:r,w:i}]),("none"===i.config.states.active.filter.type||"true"!==e.node.getAttribute("selected"))&&"none"!==i.config.states.hover.filter.type&&!i.globals.isTouchDevice){var s=i.config.states.hover.filter;n.applyFilter(e,a,s.type,s.value)}}},{key:"pathMouseLeave",value:function(e,t){var i=this.w,n=new y(this.ctx),a=parseInt(e.node.getAttribute("index"),10),r=parseInt(e.node.getAttribute("j"),10);"function"==typeof i.config.chart.events.dataPointMouseLeave&&i.config.chart.events.dataPointMouseLeave(t,this.ctx,{seriesIndex:a,dataPointIndex:r,w:i}),this.ctx.events.fireEvent("dataPointMouseLeave",[t,this.ctx,{seriesIndex:a,dataPointIndex:r,w:i}]),"none"!==i.config.states.active.filter.type&&"true"===e.node.getAttribute("selected")||"none"!==i.config.states.hover.filter.type&&n.getDefaultFilter(e,a)}},{key:"pathMouseDown",value:function(e,t){var i=this.w,n=new y(this.ctx),a=parseInt(e.node.getAttribute("index"),10),r=parseInt(e.node.getAttribute("j"),10),s="false";if("true"===e.node.getAttribute("selected")){if(e.node.setAttribute("selected","false"),i.globals.selectedDataPoints[a].indexOf(r)>-1){var o=i.globals.selectedDataPoints[a].indexOf(r);i.globals.selectedDataPoints[a].splice(o,1)}}else{if(!i.config.states.active.allowMultipleDataPointsSelection&&i.globals.selectedDataPoints.length>0){i.globals.selectedDataPoints=[];var l=i.globals.dom.Paper.select(".apexcharts-series path").members,c=i.globals.dom.Paper.select(".apexcharts-series circle, .apexcharts-series rect").members,u=function(e){Array.prototype.forEach.call(e,(function(e){e.node.setAttribute("selected","false"),n.getDefaultFilter(e,a)}))};u(l),u(c)}e.node.setAttribute("selected","true"),s="true",void 0===i.globals.selectedDataPoints[a]&&(i.globals.selectedDataPoints[a]=[]),i.globals.selectedDataPoints[a].push(r)}if("true"===s){var h=i.config.states.active.filter;"none"!==h&&n.applyFilter(e,a,h.type,h.value)}else"none"!==i.config.states.active.filter.type&&n.getDefaultFilter(e,a);"function"==typeof i.config.chart.events.dataPointSelection&&i.config.chart.events.dataPointSelection(t,this.ctx,{selectedDataPoints:i.globals.selectedDataPoints,seriesIndex:a,dataPointIndex:r,w:i}),t&&this.ctx.events.fireEvent("dataPointSelection",[t,this.ctx,{selectedDataPoints:i.globals.selectedDataPoints,seriesIndex:a,dataPointIndex:r,w:i}])}},{key:"rotateAroundCenter",value:function(e){var t={};return e&&"function"==typeof e.getBBox&&(t=e.getBBox()),{x:t.x+t.width/2,y:t.y+t.height/2}}},{key:"getTextRects",value:function(e,t,i,n){var a=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],r=this.w,s=this.drawText({x:-200,y:-200,text:e,textAnchor:"start",fontSize:t,fontFamily:i,foreColor:"#fff",opacity:0});n&&s.attr("transform",n),r.globals.dom.Paper.add(s);var o=s.bbox();return a||(o=s.node.getBoundingClientRect()),s.remove(),{width:o.width,height:o.height}}},{key:"placeTextWithEllipsis",value:function(e,t,i){if("function"==typeof e.getComputedTextLength&&(e.textContent=t,t.length>0&&e.getComputedTextLength()>=i/1.1)){for(var n=t.length-3;n>0;n-=3)if(e.getSubStringLength(0,n)<=i/1.1)return void(e.textContent=t.substring(0,n)+"...");e.textContent="."}}}],[{key:"setAttrs",value:function(e,t){for(var i in t)t.hasOwnProperty(i)&&e.setAttribute(i,t[i])}}]),e}(),k=function(){function e(t){o(this,e),this.w=t.w,this.annoCtx=t}return c(e,[{key:"setOrientations",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,i=this.w;if("vertical"===e.label.orientation){var n=null!==t?t:0,a=i.globals.dom.baseEl.querySelector(".apexcharts-xaxis-annotations .apexcharts-xaxis-annotation-label[rel='".concat(n,"']"));if(null!==a){var r=a.getBoundingClientRect();a.setAttribute("x",parseFloat(a.getAttribute("x"))-r.height+4),"top"===e.label.position?a.setAttribute("y",parseFloat(a.getAttribute("y"))+r.width):a.setAttribute("y",parseFloat(a.getAttribute("y"))-r.width);var s=this.annoCtx.graphics.rotateAroundCenter(a),o=s.x,l=s.y;a.setAttribute("transform","rotate(-90 ".concat(o," ").concat(l,")"))}}}},{key:"addBackgroundToAnno",value:function(e,t){var i=this.w;if(!e||void 0===t.label.text||void 0!==t.label.text&&!String(t.label.text).trim())return null;var n=i.globals.dom.baseEl.querySelector(".apexcharts-grid").getBoundingClientRect(),a=e.getBoundingClientRect(),r=t.label.style.padding.left,s=t.label.style.padding.right,o=t.label.style.padding.top,l=t.label.style.padding.bottom;"vertical"===t.label.orientation&&(o=t.label.style.padding.left,l=t.label.style.padding.right,r=t.label.style.padding.top,s=t.label.style.padding.bottom);var c=a.left-n.left-r,u=a.top-n.top-o,h=this.annoCtx.graphics.drawRect(c-i.globals.barPadForNumericAxis,u,a.width+r+s,a.height+o+l,t.label.borderRadius,t.label.style.background,1,t.label.borderWidth,t.label.borderColor,0);return t.id&&h.node.classList.add(x.escapeString(t.id)),h}},{key:"annotationsBackground",value:function(){var e=this,t=this.w,i=function(i,n,a){var r=t.globals.dom.baseEl.querySelector(".apexcharts-".concat(a,"-annotations .apexcharts-").concat(a,"-annotation-label[rel='").concat(n,"']"));if(r){var s=r.parentNode,o=e.addBackgroundToAnno(r,i);o&&(s.insertBefore(o.node,r),i.label.mouseEnter&&o.node.addEventListener("mouseenter",i.label.mouseEnter.bind(e,i)),i.label.mouseLeave&&o.node.addEventListener("mouseleave",i.label.mouseLeave.bind(e,i)))}};t.config.annotations.xaxis.map((function(e,t){i(e,t,"xaxis")})),t.config.annotations.yaxis.map((function(e,t){i(e,t,"yaxis")})),t.config.annotations.points.map((function(e,t){i(e,t,"point")}))}},{key:"getStringX",value:function(e){var t=this.w,i=e;t.config.xaxis.convertedCatToNumeric&&t.globals.categoryLabels.length&&(e=t.globals.categoryLabels.indexOf(e)+1);var n=t.globals.labels.indexOf(e),a=t.globals.dom.baseEl.querySelector(".apexcharts-xaxis-texts-g text:nth-child("+(n+1)+")");return a&&(i=parseFloat(a.getAttribute("x"))),i}}]),e}(),S=function(){function e(t){o(this,e),this.w=t.w,this.annoCtx=t,this.invertAxis=this.annoCtx.invertAxis}return c(e,[{key:"addXaxisAnnotation",value:function(e,t,i){var n=this.w,a=this.invertAxis?n.globals.minY:n.globals.minX,r=this.invertAxis?n.globals.maxY:n.globals.maxX,s=this.invertAxis?n.globals.yRange[0]:n.globals.xRange,o=(e.x-a)/(s/n.globals.gridWidth);this.annoCtx.inversedReversedAxis&&(o=(r-e.x)/(s/n.globals.gridWidth));var l=e.label.text;"category"!==n.config.xaxis.type&&!n.config.xaxis.convertedCatToNumeric||this.invertAxis||n.globals.dataFormatXNumeric||(o=this.annoCtx.helpers.getStringX(e.x));var c=e.strokeDashArray;if(x.isNumber(o)){if(null===e.x2||void 0===e.x2){var u=this.annoCtx.graphics.drawLine(o+e.offsetX,0+e.offsetY,o+e.offsetX,n.globals.gridHeight+e.offsetY,e.borderColor,c,e.borderWidth);t.appendChild(u.node),e.id&&u.node.classList.add(e.id)}else{var h=(e.x2-a)/(s/n.globals.gridWidth);if(this.annoCtx.inversedReversedAxis&&(h=(r-e.x2)/(s/n.globals.gridWidth)),"category"!==n.config.xaxis.type&&!n.config.xaxis.convertedCatToNumeric||this.invertAxis||n.globals.dataFormatXNumeric||(h=this.annoCtx.helpers.getStringX(e.x2)),h<o){var d=o;o=h,h=d}var f=this.annoCtx.graphics.drawRect(o+e.offsetX,0+e.offsetY,h-o,n.globals.gridHeight+e.offsetY,0,e.fillColor,e.opacity,1,e.borderColor,c);f.node.classList.add("apexcharts-annotation-rect"),f.attr("clip-path","url(#gridRectMask".concat(n.globals.cuid,")")),t.appendChild(f.node),e.id&&f.node.classList.add(e.id)}var p="top"===e.label.position?4:n.globals.gridHeight,g=this.annoCtx.graphics.getTextRects(l,parseFloat(e.label.style.fontSize)),m=this.annoCtx.graphics.drawText({x:o+e.label.offsetX,y:p+e.label.offsetY-("vertical"===e.label.orientation?"top"===e.label.position?g.width/2-12:-g.width/2:0),text:l,textAnchor:e.label.textAnchor,fontSize:e.label.style.fontSize,fontFamily:e.label.style.fontFamily,fontWeight:e.label.style.fontWeight,foreColor:e.label.style.color,cssClass:"apexcharts-xaxis-annotation-label ".concat(e.label.style.cssClass," ").concat(e.id?e.id:"")});m.attr({rel:i}),t.appendChild(m.node),this.annoCtx.helpers.setOrientations(e,i)}}},{key:"drawXAxisAnnotations",value:function(){var e=this,t=this.w,i=this.annoCtx.graphics.group({class:"apexcharts-xaxis-annotations"});return t.config.annotations.xaxis.map((function(t,n){e.addXaxisAnnotation(t,i.node,n)})),i}}]),e}(),A=function(){function e(t){o(this,e),this.ctx=t,this.w=t.w}return c(e,[{key:"getStackedSeriesTotals",value:function(){var e=this.w,t=[];if(0===e.globals.series.length)return t;for(var i=0;i<e.globals.series[e.globals.maxValsInArrayIndex].length;i++){for(var n=0,a=0;a<e.globals.series.length;a++)void 0!==e.globals.series[a][i]&&(n+=e.globals.series[a][i]);t.push(n)}return e.globals.stackedSeriesTotals=t,t}},{key:"getSeriesTotalByIndex",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;return null===e?this.w.config.series.reduce((function(e,t){return e+t}),0):this.w.globals.series[e].reduce((function(e,t){return e+t}),0)}},{key:"isSeriesNull",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;return 0===(null===e?this.w.config.series.filter((function(e){return null!==e})):this.w.config.series[e].data.filter((function(e){return null!==e}))).length}},{key:"seriesHaveSameValues",value:function(e){return this.w.globals.series[e].every((function(e,t,i){return e===i[0]}))}},{key:"getCategoryLabels",value:function(e){var t=this.w,i=e.slice();return t.config.xaxis.convertedCatToNumeric&&(i=e.map((function(e,i){return t.config.xaxis.labels.formatter(e-t.globals.minX+1)}))),i}},{key:"getLargestSeries",value:function(){var e=this.w;e.globals.maxValsInArrayIndex=e.globals.series.map((function(e){return e.length})).indexOf(Math.max.apply(Math,e.globals.series.map((function(e){return e.length}))))}},{key:"getLargestMarkerSize",value:function(){var e=this.w,t=0;return e.globals.markers.size.forEach((function(e){t=Math.max(t,e)})),e.globals.markers.largestSize=t,t}},{key:"getSeriesTotals",value:function(){var e=this.w;e.globals.seriesTotals=e.globals.series.map((function(e,t){var i=0;if(Array.isArray(e))for(var n=0;n<e.length;n++)i+=e[n];else i+=e;return i}))}},{key:"getSeriesTotalsXRange",value:function(e,t){var i=this.w;return i.globals.series.map((function(n,a){for(var r=0,s=0;s<n.length;s++)i.globals.seriesX[a][s]>e&&i.globals.seriesX[a][s]<t&&(r+=n[s]);return r}))}},{key:"getPercentSeries",value:function(){var e=this.w;e.globals.seriesPercent=e.globals.series.map((function(t,i){var n=[];if(Array.isArray(t))for(var a=0;a<t.length;a++){var r=e.globals.stackedSeriesTotals[a],s=0;r&&(s=100*t[a]/r),n.push(s)}else{var o=100*t/e.globals.seriesTotals.reduce((function(e,t){return e+t}),0);n.push(o)}return n}))}},{key:"getCalculatedRatios",value:function(){var e,t,i,n,a=this.w.globals,r=[],s=0,o=[],l=.1,c=0;if(a.yRange=[],a.isMultipleYAxis)for(var u=0;u<a.minYArr.length;u++)a.yRange.push(Math.abs(a.minYArr[u]-a.maxYArr[u])),o.push(0);else a.yRange.push(Math.abs(a.minY-a.maxY));a.xRange=Math.abs(a.maxX-a.minX),a.zRange=Math.abs(a.maxZ-a.minZ);for(var h=0;h<a.yRange.length;h++)r.push(a.yRange[h]/a.gridHeight);if(t=a.xRange/a.gridWidth,i=Math.abs(a.initialMaxX-a.initialMinX)/a.gridWidth,e=a.yRange/a.gridWidth,n=a.xRange/a.gridHeight,(s=a.zRange/a.gridHeight*16)||(s=1),a.minY!==Number.MIN_VALUE&&0!==Math.abs(a.minY)&&(a.hasNegs=!0),a.isMultipleYAxis){o=[];for(var d=0;d<r.length;d++)o.push(-a.minYArr[d]/r[d])}else o.push(-a.minY/r[0]),a.minY!==Number.MIN_VALUE&&0!==Math.abs(a.minY)&&(l=-a.minY/e,c=a.minX/t);return{yRatio:r,invertedYRatio:e,zRatio:s,xRatio:t,initialXRatio:i,invertedXRatio:n,baseLineInvertedY:l,baseLineY:o,baseLineX:c}}},{key:"getLogSeries",value:function(e){var t=this,i=this.w;return i.globals.seriesLog=e.map((function(e,n){return i.config.yaxis[n]&&i.config.yaxis[n].logarithmic?e.map((function(e){return null===e?null:t.getLogVal(e,n)})):e})),i.globals.invalidLogScale?e:i.globals.seriesLog}},{key:"getLogVal",value:function(e,t){var i=this.w,n=(Math.log(e)-Math.log(i.globals.minYArr[t]))/(Math.log(i.globals.maxYArr[t])-Math.log(i.globals.minYArr[t]));return isNaN(n)?e:n}},{key:"getLogYRatios",value:function(e){var t=this,i=this.w,n=this.w.globals;return n.yLogRatio=e.slice(),n.logYRange=n.yRange.map((function(e,a){if(i.config.yaxis[a]&&t.w.config.yaxis[a].logarithmic){var r,s=-Number.MAX_VALUE,o=Number.MIN_VALUE;return n.seriesLog.forEach((function(e,t){e.forEach((function(e){i.config.yaxis[t]&&i.config.yaxis[t].logarithmic&&(s=Math.max(e,s),o=Math.min(e,o))}))})),r=Math.pow(n.yRange[a],Math.abs(o-s)/n.yRange[a]),n.yLogRatio[a]=r/n.gridHeight,r}})),n.invalidLogScale?e.slice():n.yLogRatio}}],[{key:"checkComboSeries",value:function(e){var t=!1,i=0,n=0;return e.length&&void 0!==e[0].type&&e.forEach((function(e){"bar"!==e.type&&"column"!==e.type&&"candlestick"!==e.type&&"boxPlot"!==e.type||i++,void 0!==e.type&&n++})),n>0&&(t=!0),{comboBarCount:i,comboCharts:t}}},{key:"extendArrayProps",value:function(e,t,i){return t.yaxis&&(t=e.extendYAxis(t,i)),t.annotations&&(t.annotations.yaxis&&(t=e.extendYAxisAnnotations(t)),t.annotations.xaxis&&(t=e.extendXAxisAnnotations(t)),t.annotations.points&&(t=e.extendPointAnnotations(t))),t}}]),e}(),C=function(){function e(t){o(this,e),this.w=t.w,this.annoCtx=t}return c(e,[{key:"addYaxisAnnotation",value:function(e,t,i){var n,a=this.w,r=e.strokeDashArray,s=this._getY1Y2("y1",e),o=e.label.text;if(null===e.y2||void 0===e.y2){var l=this.annoCtx.graphics.drawLine(0+e.offsetX,s+e.offsetY,this._getYAxisAnnotationWidth(e),s+e.offsetY,e.borderColor,r,e.borderWidth);t.appendChild(l.node),e.id&&l.node.classList.add(e.id)}else{if((n=this._getY1Y2("y2",e))>s){var c=s;s=n,n=c}var u=this.annoCtx.graphics.drawRect(0+e.offsetX,n+e.offsetY,this._getYAxisAnnotationWidth(e),s-n,0,e.fillColor,e.opacity,1,e.borderColor,r);u.node.classList.add("apexcharts-annotation-rect"),u.attr("clip-path","url(#gridRectMask".concat(a.globals.cuid,")")),t.appendChild(u.node),e.id&&u.node.classList.add(e.id)}var h="right"===e.label.position?a.globals.gridWidth:0,d=this.annoCtx.graphics.drawText({x:h+e.label.offsetX,y:(null!=n?n:s)+e.label.offsetY-3,text:o,textAnchor:e.label.textAnchor,fontSize:e.label.style.fontSize,fontFamily:e.label.style.fontFamily,fontWeight:e.label.style.fontWeight,foreColor:e.label.style.color,cssClass:"apexcharts-yaxis-annotation-label ".concat(e.label.style.cssClass," ").concat(e.id?e.id:"")});d.attr({rel:i}),t.appendChild(d.node)}},{key:"_getY1Y2",value:function(e,t){var i,n="y1"===e?t.y:t.y2,a=this.w;if(this.annoCtx.invertAxis){var r=a.globals.labels.indexOf(n);a.config.xaxis.convertedCatToNumeric&&(r=a.globals.categoryLabels.indexOf(n));var s=a.globals.dom.baseEl.querySelector(".apexcharts-yaxis-texts-g text:nth-child("+(r+1)+")");s&&(i=parseFloat(s.getAttribute("y")))}else{var o;o=a.config.yaxis[t.yAxisIndex].logarithmic?(n=new A(this.annoCtx.ctx).getLogVal(n,t.yAxisIndex))/a.globals.yLogRatio[t.yAxisIndex]:(n-a.globals.minYArr[t.yAxisIndex])/(a.globals.yRange[t.yAxisIndex]/a.globals.gridHeight),i=a.globals.gridHeight-o,a.config.yaxis[t.yAxisIndex]&&a.config.yaxis[t.yAxisIndex].reversed&&(i=o)}return i}},{key:"_getYAxisAnnotationWidth",value:function(e){var t=this.w;return t.globals.gridWidth,(e.width.indexOf("%")>-1?t.globals.gridWidth*parseInt(e.width,10)/100:parseInt(e.width,10))+e.offsetX}},{key:"drawYAxisAnnotations",value:function(){var e=this,t=this.w,i=this.annoCtx.graphics.group({class:"apexcharts-yaxis-annotations"});return t.config.annotations.yaxis.map((function(t,n){e.addYaxisAnnotation(t,i.node,n)})),i}}]),e}(),E=function(){function e(t){o(this,e),this.w=t.w,this.annoCtx=t}return c(e,[{key:"addPointAnnotation",value:function(e,t,i){var n=this.w,a=0,r=0,s=0;this.annoCtx.invertAxis&&console.warn("Point annotation is not supported in horizontal bar charts.");var o=parseFloat(e.y);if("string"==typeof e.x||"category"===n.config.xaxis.type||n.config.xaxis.convertedCatToNumeric){var l=n.globals.labels.indexOf(e.x);n.config.xaxis.convertedCatToNumeric&&(l=n.globals.categoryLabels.indexOf(e.x)),a=this.annoCtx.helpers.getStringX(e.x),null===e.y&&(o=n.globals.series[e.seriesIndex][l])}else a=(e.x-n.globals.minX)/(n.globals.xRange/n.globals.gridWidth);for(var c,u=[],h=0,d=0;d<=e.seriesIndex;d++){var f=n.config.yaxis[d].seriesName;if(f)for(var p=d+1;p<=e.seriesIndex;p++)n.config.yaxis[p].seriesName===f&&-1===u.indexOf(f)&&(h++,u.push(f))}if(n.config.yaxis[e.yAxisIndex].logarithmic)c=(o=new A(this.annoCtx.ctx).getLogVal(o,e.yAxisIndex))/n.globals.yLogRatio[e.yAxisIndex];else{var g=e.yAxisIndex+h;c=(o-n.globals.minYArr[g])/(n.globals.yRange[g]/n.globals.gridHeight)}if(r=n.globals.gridHeight-c-parseFloat(e.label.style.fontSize)-e.marker.size,s=n.globals.gridHeight-c,n.config.yaxis[e.yAxisIndex]&&n.config.yaxis[e.yAxisIndex].reversed&&(r=c+parseFloat(e.label.style.fontSize)+e.marker.size,s=c),x.isNumber(a)){var m={pSize:e.marker.size,pointStrokeWidth:e.marker.strokeWidth,pointFillColor:e.marker.fillColor,pointStrokeColor:e.marker.strokeColor,shape:e.marker.shape,pRadius:e.marker.radius,class:"apexcharts-point-annotation-marker ".concat(e.marker.cssClass," ").concat(e.id?e.id:"")},v=this.annoCtx.graphics.drawMarker(a+e.marker.offsetX,s+e.marker.offsetY,m);t.appendChild(v.node);var b=e.label.text?e.label.text:"",y=this.annoCtx.graphics.drawText({x:a+e.label.offsetX,y:r+e.label.offsetY,text:b,textAnchor:e.label.textAnchor,fontSize:e.label.style.fontSize,fontFamily:e.label.style.fontFamily,fontWeight:e.label.style.fontWeight,foreColor:e.label.style.color,cssClass:"apexcharts-point-annotation-label ".concat(e.label.style.cssClass," ").concat(e.id?e.id:"")});if(y.attr({rel:i}),t.appendChild(y.node),e.customSVG.SVG){var w=this.annoCtx.graphics.group({class:"apexcharts-point-annotations-custom-svg "+e.customSVG.cssClass});w.attr({transform:"translate(".concat(a+e.customSVG.offsetX,", ").concat(r+e.customSVG.offsetY,")")}),w.node.innerHTML=e.customSVG.SVG,t.appendChild(w.node)}if(e.image.path){var k=e.image.width?e.image.width:20,S=e.image.height?e.image.height:20;v=this.annoCtx.addImage({x:a+e.image.offsetX-k/2,y:r+e.image.offsetY-S/2,width:k,height:S,path:e.image.path,appendTo:".apexcharts-point-annotations"})}e.mouseEnter&&v.node.addEventListener("mouseenter",e.mouseEnter.bind(this,e)),e.mouseLeave&&v.node.addEventListener("mouseleave",e.mouseLeave.bind(this,e))}}},{key:"drawPointAnnotations",value:function(){var e=this,t=this.w,i=this.annoCtx.graphics.group({class:"apexcharts-point-annotations"});return t.config.annotations.points.map((function(t,n){e.addPointAnnotation(t,i.node,n)})),i}}]),e}(),P={name:"en",options:{months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],toolbar:{exportToSVG:"Download SVG",exportToPNG:"Download PNG",exportToCSV:"Download CSV",menu:"Menu",selection:"Selection",selectionZoom:"Selection Zoom",zoomIn:"Zoom In",zoomOut:"Zoom Out",pan:"Panning",reset:"Reset Zoom"}}},T=function(){function e(){o(this,e),this.yAxis={show:!0,showAlways:!1,showForNullSeries:!0,seriesName:void 0,opposite:!1,reversed:!1,logarithmic:!1,logBase:10,tickAmount:void 0,forceNiceScale:!1,max:void 0,min:void 0,floating:!1,decimalsInFloat:void 0,labels:{show:!0,minWidth:0,maxWidth:160,offsetX:0,offsetY:0,align:void 0,rotate:0,padding:20,style:{colors:[],fontSize:"11px",fontWeight:400,fontFamily:void 0,cssClass:""},formatter:void 0},axisBorder:{show:!1,color:"#e0e0e0",width:1,offsetX:0,offsetY:0},axisTicks:{show:!1,color:"#e0e0e0",width:6,offsetX:0,offsetY:0},title:{text:void 0,rotate:-90,offsetY:0,offsetX:0,style:{color:void 0,fontSize:"11px",fontWeight:900,fontFamily:void 0,cssClass:""}},tooltip:{enabled:!1,offsetX:0},crosshairs:{show:!0,position:"front",stroke:{color:"#b6b6b6",width:1,dashArray:0}}},this.pointAnnotation={id:void 0,x:0,y:null,yAxisIndex:0,seriesIndex:0,mouseEnter:void 0,mouseLeave:void 0,marker:{size:4,fillColor:"#fff",strokeWidth:2,strokeColor:"#333",shape:"circle",offsetX:0,offsetY:0,radius:2,cssClass:""},label:{borderColor:"#c2c2c2",borderWidth:1,borderRadius:2,text:void 0,textAnchor:"middle",offsetX:0,offsetY:0,mouseEnter:void 0,mouseLeave:void 0,style:{background:"#fff",color:void 0,fontSize:"11px",fontFamily:void 0,fontWeight:400,cssClass:"",padding:{left:5,right:5,top:2,bottom:2}}},customSVG:{SVG:void 0,cssClass:void 0,offsetX:0,offsetY:0},image:{path:void 0,width:20,height:20,offsetX:0,offsetY:0}},this.yAxisAnnotation={id:void 0,y:0,y2:null,strokeDashArray:1,fillColor:"#c2c2c2",borderColor:"#c2c2c2",borderWidth:1,opacity:.3,offsetX:0,offsetY:0,width:"100%",yAxisIndex:0,label:{borderColor:"#c2c2c2",borderWidth:1,borderRadius:2,text:void 0,textAnchor:"end",position:"right",offsetX:0,offsetY:-3,mouseEnter:void 0,mouseLeave:void 0,style:{background:"#fff",color:void 0,fontSize:"11px",fontFamily:void 0,fontWeight:400,cssClass:"",padding:{left:5,right:5,top:2,bottom:2}}}},this.xAxisAnnotation={id:void 0,x:0,x2:null,strokeDashArray:1,fillColor:"#c2c2c2",borderColor:"#c2c2c2",borderWidth:1,opacity:.3,offsetX:0,offsetY:0,label:{borderColor:"#c2c2c2",borderWidth:1,borderRadius:2,text:void 0,textAnchor:"middle",orientation:"vertical",position:"top",offsetX:0,offsetY:0,mouseEnter:void 0,mouseLeave:void 0,style:{background:"#fff",color:void 0,fontSize:"11px",fontFamily:void 0,fontWeight:400,cssClass:"",padding:{left:5,right:5,top:2,bottom:2}}}},this.text={x:0,y:0,text:"",textAnchor:"start",foreColor:void 0,fontSize:"13px",fontFamily:void 0,fontWeight:400,appendTo:".apexcharts-annotations",backgroundColor:"transparent",borderColor:"#c2c2c2",borderRadius:0,borderWidth:0,paddingLeft:4,paddingRight:4,paddingTop:2,paddingBottom:2}}return c(e,[{key:"init",value:function(){return{annotations:{position:"front",yaxis:[this.yAxisAnnotation],xaxis:[this.xAxisAnnotation],points:[this.pointAnnotation],texts:[],images:[],shapes:[]},chart:{animations:{enabled:!0,easing:"easeinout",speed:800,animateGradually:{delay:150,enabled:!0},dynamicAnimation:{enabled:!0,speed:350}},background:"transparent",locales:[P],defaultLocale:"en",dropShadow:{enabled:!1,enabledOnSeries:void 0,top:2,left:2,blur:4,color:"#000",opacity:.35},events:{animationEnd:void 0,beforeMount:void 0,mounted:void 0,updated:void 0,click:void 0,mouseMove:void 0,mouseLeave:void 0,legendClick:void 0,markerClick:void 0,selection:void 0,dataPointSelection:void 0,dataPointMouseEnter:void 0,dataPointMouseLeave:void 0,beforeZoom:void 0,beforeResetZoom:void 0,zoomed:void 0,scrolled:void 0,brushScrolled:void 0},foreColor:"#373d3f",fontFamily:"Helvetica, Arial, sans-serif",height:"auto",parentHeightOffset:15,redrawOnParentResize:!0,redrawOnWindowResize:!0,id:void 0,group:void 0,offsetX:0,offsetY:0,selection:{enabled:!1,type:"x",fill:{color:"#24292e",opacity:.1},stroke:{width:1,color:"#24292e",opacity:.4,dashArray:3},xaxis:{min:void 0,max:void 0},yaxis:{min:void 0,max:void 0}},sparkline:{enabled:!1},brush:{enabled:!1,autoScaleYaxis:!0,target:void 0},stacked:!1,stackType:"normal",toolbar:{show:!0,offsetX:0,offsetY:0,tools:{download:!0,selection:!0,zoom:!0,zoomin:!0,zoomout:!0,pan:!0,reset:!0,customIcons:[]},export:{csv:{filename:void 0,columnDelimiter:",",headerCategory:"category",headerValue:"value",dateFormatter:function(e){return new Date(e).toDateString()}},png:{filename:void 0},svg:{filename:void 0}},autoSelected:"zoom"},type:"line",width:"100%",zoom:{enabled:!0,type:"x",autoScaleYaxis:!1,zoomedArea:{fill:{color:"#90CAF9",opacity:.4},stroke:{color:"#0D47A1",opacity:.4,width:1}}}},plotOptions:{area:{fillTo:"origin"},bar:{horizontal:!1,columnWidth:"70%",barHeight:"70%",distributed:!1,borderRadius:0,rangeBarOverlap:!0,rangeBarGroupRows:!1,colors:{ranges:[],backgroundBarColors:[],backgroundBarOpacity:1,backgroundBarRadius:0},dataLabels:{position:"top",maxItems:100,hideOverflowingLabels:!0,orientation:"horizontal"}},bubble:{minBubbleRadius:void 0,maxBubbleRadius:void 0},candlestick:{colors:{upward:"#00B746",downward:"#EF403C"},wick:{useFillColor:!0}},boxPlot:{colors:{upper:"#00E396",lower:"#008FFB"}},heatmap:{radius:2,enableShades:!0,shadeIntensity:.5,reverseNegativeShade:!1,distributed:!1,useFillColorAsStroke:!1,colorScale:{inverse:!1,ranges:[],min:void 0,max:void 0}},treemap:{enableShades:!0,shadeIntensity:.5,distributed:!1,reverseNegativeShade:!1,useFillColorAsStroke:!1,colorScale:{inverse:!1,ranges:[],min:void 0,max:void 0}},radialBar:{inverseOrder:!1,startAngle:0,endAngle:360,offsetX:0,offsetY:0,hollow:{margin:5,size:"50%",background:"transparent",image:void 0,imageWidth:150,imageHeight:150,imageOffsetX:0,imageOffsetY:0,imageClipped:!0,position:"front",dropShadow:{enabled:!1,top:0,left:0,blur:3,color:"#000",opacity:.5}},track:{show:!0,startAngle:void 0,endAngle:void 0,background:"#f2f2f2",strokeWidth:"97%",opacity:1,margin:5,dropShadow:{enabled:!1,top:0,left:0,blur:3,color:"#000",opacity:.5}},dataLabels:{show:!0,name:{show:!0,fontSize:"16px",fontFamily:void 0,fontWeight:600,color:void 0,offsetY:0,formatter:function(e){return e}},value:{show:!0,fontSize:"14px",fontFamily:void 0,fontWeight:400,color:void 0,offsetY:16,formatter:function(e){return e+"%"}},total:{show:!1,label:"Total",fontSize:"16px",fontWeight:600,fontFamily:void 0,color:void 0,formatter:function(e){return e.globals.seriesTotals.reduce((function(e,t){return e+t}),0)/e.globals.series.length+"%"}}}},pie:{customScale:1,offsetX:0,offsetY:0,startAngle:0,endAngle:360,expandOnClick:!0,dataLabels:{offset:0,minAngleToShowLabel:10},donut:{size:"65%",background:"transparent",labels:{show:!1,name:{show:!0,fontSize:"16px",fontFamily:void 0,fontWeight:600,color:void 0,offsetY:-10,formatter:function(e){return e}},value:{show:!0,fontSize:"20px",fontFamily:void 0,fontWeight:400,color:void 0,offsetY:10,formatter:function(e){return e}},total:{show:!1,showAlways:!1,label:"Total",fontSize:"16px",fontWeight:400,fontFamily:void 0,color:void 0,formatter:function(e){return e.globals.seriesTotals.reduce((function(e,t){return e+t}),0)}}}}},polarArea:{rings:{strokeWidth:1,strokeColor:"#e8e8e8"},spokes:{strokeWidth:1,connectorColors:"#e8e8e8"}},radar:{size:void 0,offsetX:0,offsetY:0,polygons:{strokeWidth:1,strokeColors:"#e8e8e8",connectorColors:"#e8e8e8",fill:{colors:void 0}}}},colors:void 0,dataLabels:{enabled:!0,enabledOnSeries:void 0,formatter:function(e){return null!==e?e:""},textAnchor:"middle",distributed:!1,offsetX:0,offsetY:0,style:{fontSize:"12px",fontFamily:void 0,fontWeight:600,colors:void 0},background:{enabled:!0,foreColor:"#fff",borderRadius:2,padding:4,opacity:.9,borderWidth:1,borderColor:"#fff",dropShadow:{enabled:!1,top:1,left:1,blur:1,color:"#000",opacity:.45}},dropShadow:{enabled:!1,top:1,left:1,blur:1,color:"#000",opacity:.45}},fill:{type:"solid",colors:void 0,opacity:.85,gradient:{shade:"dark",type:"horizontal",shadeIntensity:.5,gradientToColors:void 0,inverseColors:!0,opacityFrom:1,opacityTo:1,stops:[0,50,100],colorStops:[]},image:{src:[],width:void 0,height:void 0},pattern:{style:"squares",width:6,height:6,strokeWidth:2}},forecastDataPoints:{count:0,fillOpacity:.5,strokeWidth:void 0,dashArray:4},grid:{show:!0,borderColor:"#e0e0e0",strokeDashArray:0,position:"back",xaxis:{lines:{show:!1}},yaxis:{lines:{show:!0}},row:{colors:void 0,opacity:.5},column:{colors:void 0,opacity:.5},padding:{top:0,right:10,bottom:0,left:12}},labels:[],legend:{show:!0,showForSingleSeries:!1,showForNullSeries:!0,showForZeroSeries:!0,floating:!1,position:"bottom",horizontalAlign:"center",inverseOrder:!1,fontSize:"12px",fontFamily:void 0,fontWeight:400,width:void 0,height:void 0,formatter:void 0,tooltipHoverFormatter:void 0,offsetX:-20,offsetY:4,customLegendItems:[],labels:{colors:void 0,useSeriesColors:!1},markers:{width:12,height:12,strokeWidth:0,fillColors:void 0,strokeColor:"#fff",radius:12,customHTML:void 0,offsetX:0,offsetY:0,onClick:void 0},itemMargin:{horizontal:5,vertical:2},onItemClick:{toggleDataSeries:!0},onItemHover:{highlightDataSeries:!0}},markers:{discrete:[],size:0,colors:void 0,strokeColors:"#fff",strokeWidth:2,strokeOpacity:.9,strokeDashArray:0,fillOpacity:1,shape:"circle",width:8,height:8,radius:2,offsetX:0,offsetY:0,onClick:void 0,onDblClick:void 0,showNullDataPoints:!0,hover:{size:void 0,sizeOffset:3}},noData:{text:void 0,align:"center",verticalAlign:"middle",offsetX:0,offsetY:0,style:{color:void 0,fontSize:"14px",fontFamily:void 0}},responsive:[],series:void 0,states:{normal:{filter:{type:"none",value:0}},hover:{filter:{type:"lighten",value:.1}},active:{allowMultipleDataPointsSelection:!1,filter:{type:"darken",value:.5}}},title:{text:void 0,align:"left",margin:5,offsetX:0,offsetY:0,floating:!1,style:{fontSize:"14px",fontWeight:900,fontFamily:void 0,color:void 0}},subtitle:{text:void 0,align:"left",margin:5,offsetX:0,offsetY:30,floating:!1,style:{fontSize:"12px",fontWeight:400,fontFamily:void 0,color:void 0}},stroke:{show:!0,curve:"smooth",lineCap:"butt",width:2,colors:void 0,dashArray:0},tooltip:{enabled:!0,enabledOnSeries:void 0,shared:!0,followCursor:!1,intersect:!1,inverseOrder:!1,custom:void 0,fillSeriesColor:!1,theme:"light",style:{fontSize:"12px",fontFamily:void 0},onDatasetHover:{highlightDataSeries:!1},x:{show:!0,format:"dd MMM",formatter:void 0},y:{formatter:void 0,title:{formatter:function(e){return e?e+": ":""}}},z:{formatter:void 0,title:"Size: "},marker:{show:!0,fillColors:void 0},items:{display:"flex"},fixed:{enabled:!1,position:"topRight",offsetX:0,offsetY:0}},xaxis:{type:"category",categories:[],convertedCatToNumeric:!1,offsetX:0,offsetY:0,overwriteCategories:void 0,labels:{show:!0,rotate:-45,rotateAlways:!1,hideOverlappingLabels:!0,trim:!1,minHeight:void 0,maxHeight:120,showDuplicates:!0,style:{colors:[],fontSize:"12px",fontWeight:400,fontFamily:void 0,cssClass:""},offsetX:0,offsetY:0,format:void 0,formatter:void 0,datetimeUTC:!0,datetimeFormatter:{year:"yyyy",month:"MMM 'yy",day:"dd MMM",hour:"HH:mm",minute:"HH:mm:ss",second:"HH:mm:ss"}},axisBorder:{show:!0,color:"#e0e0e0",width:"100%",height:1,offsetX:0,offsetY:0},axisTicks:{show:!0,color:"#e0e0e0",height:6,offsetX:0,offsetY:0},tickAmount:void 0,tickPlacement:"on",min:void 0,max:void 0,range:void 0,floating:!1,decimalsInFloat:void 0,position:"bottom",title:{text:void 0,offsetX:0,offsetY:0,style:{color:void 0,fontSize:"12px",fontWeight:900,fontFamily:void 0,cssClass:""}},crosshairs:{show:!0,width:1,position:"back",opacity:.9,stroke:{color:"#b6b6b6",width:1,dashArray:3},fill:{type:"solid",color:"#B1B9C4",gradient:{colorFrom:"#D8E3F0",colorTo:"#BED1E6",stops:[0,100],opacityFrom:.4,opacityTo:.5}},dropShadow:{enabled:!1,left:0,top:0,blur:1,opacity:.4}},tooltip:{enabled:!0,offsetY:0,formatter:void 0,style:{fontSize:"12px",fontFamily:void 0}}},yaxis:this.yAxis,theme:{mode:"light",palette:"palette1",monochrome:{enabled:!1,color:"#008FFB",shadeTo:"light",shadeIntensity:.65}}}}}]),e}(),L=function(){function e(t){o(this,e),this.ctx=t,this.w=t.w,this.graphics=new w(this.ctx),this.w.globals.isBarHorizontal&&(this.invertAxis=!0),this.helpers=new k(this),this.xAxisAnnotations=new S(this),this.yAxisAnnotations=new C(this),this.pointsAnnotations=new E(this),this.w.globals.isBarHorizontal&&this.w.config.yaxis[0].reversed&&(this.inversedReversedAxis=!0),this.xDivision=this.w.globals.gridWidth/this.w.globals.dataPoints}return c(e,[{key:"drawAxesAnnotations",value:function(){var e=this.w;if(e.globals.axisCharts){for(var t=this.yAxisAnnotations.drawYAxisAnnotations(),i=this.xAxisAnnotations.drawXAxisAnnotations(),n=this.pointsAnnotations.drawPointAnnotations(),a=e.config.chart.animations.enabled,r=[t,i,n],s=[i.node,t.node,n.node],o=0;o<3;o++)e.globals.dom.elGraphical.add(r[o]),!a||e.globals.resized||e.globals.dataChanged||"scatter"!==e.config.chart.type&&"bubble"!==e.config.chart.type&&e.globals.dataPoints>1&&s[o].classList.add("apexcharts-element-hidden"),e.globals.delayedElements.push({el:s[o],index:0});this.helpers.annotationsBackground()}}},{key:"drawImageAnnos",value:function(){var e=this;this.w.config.annotations.images.map((function(t,i){e.addImage(t,i)}))}},{key:"drawTextAnnos",value:function(){var e=this;this.w.config.annotations.texts.map((function(t,i){e.addText(t,i)}))}},{key:"addXaxisAnnotation",value:function(e,t,i){this.xAxisAnnotations.addXaxisAnnotation(e,t,i)}},{key:"addYaxisAnnotation",value:function(e,t,i){this.yAxisAnnotations.addYaxisAnnotation(e,t,i)}},{key:"addPointAnnotation",value:function(e,t,i){this.pointsAnnotations.addPointAnnotation(e,t,i)}},{key:"addText",value:function(e,t){var i=e.x,n=e.y,a=e.text,r=e.textAnchor,s=e.foreColor,o=e.fontSize,l=e.fontFamily,c=e.fontWeight,u=e.cssClass,h=e.backgroundColor,d=e.borderWidth,f=e.strokeDashArray,p=e.borderRadius,g=e.borderColor,m=e.appendTo,v=void 0===m?".apexcharts-annotations":m,x=e.paddingLeft,b=void 0===x?4:x,y=e.paddingRight,w=void 0===y?4:y,k=e.paddingBottom,S=void 0===k?2:k,A=e.paddingTop,C=void 0===A?2:A,E=this.w,P=this.graphics.drawText({x:i,y:n,text:a,textAnchor:r||"start",fontSize:o||"12px",fontWeight:c||"regular",fontFamily:l||E.config.chart.fontFamily,foreColor:s||E.config.chart.foreColor,cssClass:u}),T=E.globals.dom.baseEl.querySelector(v);T&&T.appendChild(P.node);var L=P.bbox();if(a){var I=this.graphics.drawRect(L.x-b,L.y-C,L.width+b+w,L.height+S+C,p,h||"transparent",1,d,g,f);T.insertBefore(I.node,P.node)}}},{key:"addImage",value:function(e,t){var i=this.w,n=e.path,a=e.x,r=void 0===a?0:a,s=e.y,o=void 0===s?0:s,l=e.width,c=void 0===l?20:l,u=e.height,h=void 0===u?20:u,d=e.appendTo,f=void 0===d?".apexcharts-annotations":d,p=i.globals.dom.Paper.image(n);p.size(c,h).move(r,o);var g=i.globals.dom.baseEl.querySelector(f);return g&&g.appendChild(p.node),p}},{key:"addXaxisAnnotationExternal",value:function(e,t,i){return this.addAnnotationExternal({params:e,pushToMemory:t,context:i,type:"xaxis",contextMethod:i.addXaxisAnnotation}),i}},{key:"addYaxisAnnotationExternal",value:function(e,t,i){return this.addAnnotationExternal({params:e,pushToMemory:t,context:i,type:"yaxis",contextMethod:i.addYaxisAnnotation}),i}},{key:"addPointAnnotationExternal",value:function(e,t,i){return void 0===this.invertAxis&&(this.invertAxis=i.w.globals.isBarHorizontal),this.addAnnotationExternal({params:e,pushToMemory:t,context:i,type:"point",contextMethod:i.addPointAnnotation}),i}},{key:"addAnnotationExternal",value:function(e){var t=e.params,i=e.pushToMemory,n=e.context,a=e.type,r=e.contextMethod,s=n,o=s.w,l=o.globals.dom.baseEl.querySelector(".apexcharts-".concat(a,"-annotations")),c=l.childNodes.length+1,u=new T,h=Object.assign({},"xaxis"===a?u.xAxisAnnotation:"yaxis"===a?u.yAxisAnnotation:u.pointAnnotation),d=x.extend(h,t);switch(a){case"xaxis":this.addXaxisAnnotation(d,l,c);break;case"yaxis":this.addYaxisAnnotation(d,l,c);break;case"point":this.addPointAnnotation(d,l,c)}var f=o.globals.dom.baseEl.querySelector(".apexcharts-".concat(a,"-annotations .apexcharts-").concat(a,"-annotation-label[rel='").concat(c,"']")),p=this.helpers.addBackgroundToAnno(f,d);return p&&l.insertBefore(p.node,f),i&&o.globals.memory.methodsToExec.push({context:s,id:d.id?d.id:x.randomId(),method:r,label:"addAnnotation",params:t}),n}},{key:"clearAnnotations",value:function(e){var t=e.w,i=t.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis-annotations, .apexcharts-xaxis-annotations, .apexcharts-point-annotations");t.globals.memory.methodsToExec.map((function(e,i){"addText"!==e.label&&"addAnnotation"!==e.label||t.globals.memory.methodsToExec.splice(i,1)})),i=x.listToArray(i),Array.prototype.forEach.call(i,(function(e){for(;e.firstChild;)e.removeChild(e.firstChild)}))}},{key:"removeAnnotation",value:function(e,t){var i=e.w,n=i.globals.dom.baseEl.querySelectorAll(".".concat(t));n&&(i.globals.memory.methodsToExec.map((function(e,n){e.id===t&&i.globals.memory.methodsToExec.splice(n,1)})),Array.prototype.forEach.call(n,(function(e){e.parentElement.removeChild(e)})))}}]),e}(),I=function(){function e(t){o(this,e),this.ctx=t,this.w=t.w,this.opts=null,this.seriesIndex=0}return c(e,[{key:"clippedImgArea",value:function(e){var t=this.w,i=t.config,n=parseInt(t.globals.gridWidth,10),a=parseInt(t.globals.gridHeight,10),r=n>a?n:a,s=e.image,o=0,l=0;void 0===e.width&&void 0===e.height?void 0!==i.fill.image.width&&void 0!==i.fill.image.height?(o=i.fill.image.width+1,l=i.fill.image.height):(o=r+1,l=r):(o=e.width,l=e.height);var c=document.createElementNS(t.globals.SVGNS,"pattern");w.setAttrs(c,{id:e.patternID,patternUnits:e.patternUnits?e.patternUnits:"userSpaceOnUse",width:o+"px",height:l+"px"});var u=document.createElementNS(t.globals.SVGNS,"image");c.appendChild(u),u.setAttributeNS(window.SVG.xlink,"href",s),w.setAttrs(u,{x:0,y:0,preserveAspectRatio:"none",width:o+"px",height:l+"px"}),u.style.opacity=e.opacity,t.globals.dom.elDefs.node.appendChild(c)}},{key:"getSeriesIndex",value:function(e){var t=this.w;return("bar"===t.config.chart.type||"rangeBar"===t.config.chart.type)&&t.config.plotOptions.bar.distributed||"heatmap"===t.config.chart.type||"treemap"===t.config.chart.type?this.seriesIndex=e.seriesNumber:this.seriesIndex=e.seriesNumber%t.globals.series.length,this.seriesIndex}},{key:"fillPath",value:function(e){var t=this.w;this.opts=e;var i,n,a,r=this.w.config;this.seriesIndex=this.getSeriesIndex(e);var s=this.getFillColors()[this.seriesIndex];void 0!==t.globals.seriesColors[this.seriesIndex]&&(s=t.globals.seriesColors[this.seriesIndex]),"function"==typeof s&&(s=s({seriesIndex:this.seriesIndex,dataPointIndex:e.dataPointIndex,value:e.value,w:t}));var o=this.getFillType(this.seriesIndex),l=Array.isArray(r.fill.opacity)?r.fill.opacity[this.seriesIndex]:r.fill.opacity;e.color&&(s=e.color);var c=s;if(-1===s.indexOf("rgb")?s.length<9&&(c=x.hexToRgba(s,l)):s.indexOf("rgba")>-1&&(l=x.getOpacityFromRGBA(s)),e.opacity&&(l=e.opacity),"pattern"===o&&(n=this.handlePatternFill(n,s,l,c)),"gradient"===o&&(a=this.handleGradientFill(s,l,this.seriesIndex)),"image"===o){var u=r.fill.image.src,h=e.patternID?e.patternID:"";this.clippedImgArea({opacity:l,image:Array.isArray(u)?e.seriesNumber<u.length?u[e.seriesNumber]:u[0]:u,width:e.width?e.width:void 0,height:e.height?e.height:void 0,patternUnits:e.patternUnits,patternID:"pattern".concat(t.globals.cuid).concat(e.seriesNumber+1).concat(h)}),i="url(#pattern".concat(t.globals.cuid).concat(e.seriesNumber+1).concat(h,")")}else i="gradient"===o?a:"pattern"===o?n:c;return e.solid&&(i=c),i}},{key:"getFillType",value:function(e){var t=this.w;return Array.isArray(t.config.fill.type)?t.config.fill.type[e]:t.config.fill.type}},{key:"getFillColors",value:function(){var e=this.w,t=e.config,i=this.opts,n=[];return e.globals.comboCharts?"line"===e.config.series[this.seriesIndex].type?Array.isArray(e.globals.stroke.colors)?n=e.globals.stroke.colors:n.push(e.globals.stroke.colors):Array.isArray(e.globals.fill.colors)?n=e.globals.fill.colors:n.push(e.globals.fill.colors):"line"===t.chart.type?Array.isArray(e.globals.stroke.colors)?n=e.globals.stroke.colors:n.push(e.globals.stroke.colors):Array.isArray(e.globals.fill.colors)?n=e.globals.fill.colors:n.push(e.globals.fill.colors),void 0!==i.fillColors&&(n=[],Array.isArray(i.fillColors)?n=i.fillColors.slice():n.push(i.fillColors)),n}},{key:"handlePatternFill",value:function(e,t,i,n){var a=this.w.config,r=this.opts,s=new w(this.ctx),o=void 0===a.fill.pattern.strokeWidth?Array.isArray(a.stroke.width)?a.stroke.width[this.seriesIndex]:a.stroke.width:Array.isArray(a.fill.pattern.strokeWidth)?a.fill.pattern.strokeWidth[this.seriesIndex]:a.fill.pattern.strokeWidth,l=t;return Array.isArray(a.fill.pattern.style)?void 0!==a.fill.pattern.style[r.seriesNumber]?s.drawPattern(a.fill.pattern.style[r.seriesNumber],a.fill.pattern.width,a.fill.pattern.height,l,o,i):n:s.drawPattern(a.fill.pattern.style,a.fill.pattern.width,a.fill.pattern.height,l,o,i)}},{key:"handleGradientFill",value:function(e,t,i){var n,a=this.w.config,r=this.opts,s=new w(this.ctx),o=new x,l=a.fill.gradient.type,c=e,u=void 0===a.fill.gradient.opacityFrom?t:Array.isArray(a.fill.gradient.opacityFrom)?a.fill.gradient.opacityFrom[i]:a.fill.gradient.opacityFrom;c.indexOf("rgba")>-1&&(u=x.getOpacityFromRGBA(c));var h=void 0===a.fill.gradient.opacityTo?t:Array.isArray(a.fill.gradient.opacityTo)?a.fill.gradient.opacityTo[i]:a.fill.gradient.opacityTo;if(void 0===a.fill.gradient.gradientToColors||0===a.fill.gradient.gradientToColors.length)n="dark"===a.fill.gradient.shade?o.shadeColor(-1*parseFloat(a.fill.gradient.shadeIntensity),e.indexOf("rgb")>-1?x.rgb2hex(e):e):o.shadeColor(parseFloat(a.fill.gradient.shadeIntensity),e.indexOf("rgb")>-1?x.rgb2hex(e):e);else if(a.fill.gradient.gradientToColors[r.seriesNumber]){var d=a.fill.gradient.gradientToColors[r.seriesNumber];n=d,d.indexOf("rgba")>-1&&(h=x.getOpacityFromRGBA(d))}else n=e;if(a.fill.gradient.inverseColors){var f=c;c=n,n=f}return c.indexOf("rgb")>-1&&(c=x.rgb2hex(c)),n.indexOf("rgb")>-1&&(n=x.rgb2hex(n)),s.drawGradient(l,c,n,u,h,r.size,a.fill.gradient.stops,a.fill.gradient.colorStops,i)}}]),e}(),M=function(){function e(t,i){o(this,e),this.ctx=t,this.w=t.w}return c(e,[{key:"setGlobalMarkerSize",value:function(){var e=this.w;if(e.globals.markers.size=Array.isArray(e.config.markers.size)?e.config.markers.size:[e.config.markers.size],e.globals.markers.size.length>0){if(e.globals.markers.size.length<e.globals.series.length+1)for(var t=0;t<=e.globals.series.length;t++)void 0===e.globals.markers.size[t]&&e.globals.markers.size.push(e.globals.markers.size[0])}else e.globals.markers.size=e.config.series.map((function(t){return e.config.markers.size}))}},{key:"plotChartMarkers",value:function(e,t,i,n){var a,r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=this.w,o=t,l=e,c=null,u=new w(this.ctx);if((s.globals.markers.size[t]>0||r)&&(c=u.group({class:r?"":"apexcharts-series-markers"})).attr("clip-path","url(#gridRectMarkerMask".concat(s.globals.cuid,")")),Array.isArray(l.x))for(var h=0;h<l.x.length;h++){var d=i;1===i&&0===h&&(d=0),1===i&&1===h&&(d=1);var f="apexcharts-marker";"line"!==s.config.chart.type&&"area"!==s.config.chart.type||s.globals.comboCharts||s.config.tooltip.intersect||(f+=" no-pointer-events");var p=Array.isArray(s.config.markers.size)?s.globals.markers.size[t]>0:s.config.markers.size>0;if(p||r){x.isNumber(l.y[h])?f+=" w".concat(x.randomId()):f="apexcharts-nullpoint";var g=this.getMarkerConfig({cssClass:f,seriesIndex:t,dataPointIndex:d});s.config.series[o].data[d]&&(s.config.series[o].data[d].fillColor&&(g.pointFillColor=s.config.series[o].data[d].fillColor),s.config.series[o].data[d].strokeColor&&(g.pointStrokeColor=s.config.series[o].data[d].strokeColor)),n&&(g.pSize=n),(a=u.drawMarker(l.x[h],l.y[h],g)).attr("rel",d),a.attr("j",d),a.attr("index",t),a.node.setAttribute("default-marker-size",g.pSize);var m=new y(this.ctx);m.setSelectionFilter(a,t,d),this.addEvents(a),c&&c.add(a)}else void 0===s.globals.pointsArray[t]&&(s.globals.pointsArray[t]=[]),s.globals.pointsArray[t].push([l.x[h],l.y[h]])}return c}},{key:"getMarkerConfig",value:function(e){var t=e.cssClass,i=e.seriesIndex,n=e.dataPointIndex,a=void 0===n?null:n,r=e.finishRadius,s=void 0===r?null:r,o=this.w,l=this.getMarkerStyle(i),c=o.globals.markers.size[i],u=o.config.markers;return null!==a&&u.discrete.length&&u.discrete.map((function(e){e.seriesIndex===i&&e.dataPointIndex===a&&(l.pointStrokeColor=e.strokeColor,l.pointFillColor=e.fillColor,c=e.size,l.pointShape=e.shape)})),{pSize:null===s?c:s,pRadius:u.radius,width:Array.isArray(u.width)?u.width[i]:u.width,height:Array.isArray(u.height)?u.height[i]:u.height,pointStrokeWidth:Array.isArray(u.strokeWidth)?u.strokeWidth[i]:u.strokeWidth,pointStrokeColor:l.pointStrokeColor,pointFillColor:l.pointFillColor,shape:l.pointShape||(Array.isArray(u.shape)?u.shape[i]:u.shape),class:t,pointStrokeOpacity:Array.isArray(u.strokeOpacity)?u.strokeOpacity[i]:u.strokeOpacity,pointStrokeDashArray:Array.isArray(u.strokeDashArray)?u.strokeDashArray[i]:u.strokeDashArray,pointFillOpacity:Array.isArray(u.fillOpacity)?u.fillOpacity[i]:u.fillOpacity,seriesIndex:i}}},{key:"addEvents",value:function(e){var t=this.w,i=new w(this.ctx);e.node.addEventListener("mouseenter",i.pathMouseEnter.bind(this.ctx,e)),e.node.addEventListener("mouseleave",i.pathMouseLeave.bind(this.ctx,e)),e.node.addEventListener("mousedown",i.pathMouseDown.bind(this.ctx,e)),e.node.addEventListener("click",t.config.markers.onClick),e.node.addEventListener("dblclick",t.config.markers.onDblClick),e.node.addEventListener("touchstart",i.pathMouseDown.bind(this.ctx,e),{passive:!0})}},{key:"getMarkerStyle",value:function(e){var t=this.w,i=t.globals.markers.colors,n=t.config.markers.strokeColor||t.config.markers.strokeColors;return{pointStrokeColor:Array.isArray(n)?n[e]:n,pointFillColor:Array.isArray(i)?i[e]:i}}}]),e}(),O=function(){function e(t){o(this,e),this.ctx=t,this.w=t.w,this.initialAnim=this.w.config.chart.animations.enabled,this.dynamicAnim=this.initialAnim&&this.w.config.chart.animations.dynamicAnimation.enabled}return c(e,[{key:"draw",value:function(e,t,i){var n=this.w,a=new w(this.ctx),r=i.realIndex,s=i.pointsPos,o=i.zRatio,l=i.elParent,c=a.group({class:"apexcharts-series-markers apexcharts-series-".concat(n.config.chart.type)});if(c.attr("clip-path","url(#gridRectMarkerMask".concat(n.globals.cuid,")")),Array.isArray(s.x))for(var u=0;u<s.x.length;u++){var h=t+1,d=!0;0===t&&0===u&&(h=0),0===t&&1===u&&(h=1);var f=0,p=n.globals.markers.size[r];if(o!==1/0){p=n.globals.seriesZ[r][h]/o;var g=n.config.plotOptions.bubble;g.minBubbleRadius&&p<g.minBubbleRadius&&(p=g.minBubbleRadius),g.maxBubbleRadius&&p>g.maxBubbleRadius&&(p=g.maxBubbleRadius)}n.config.chart.animations.enabled||(f=p);var m=s.x[u],v=s.y[u];if(f=f||0,null!==v&&void 0!==n.globals.series[r][h]||(d=!1),d){var x=this.drawPoint(m,v,f,p,r,h,t);c.add(x)}l.add(c)}}},{key:"drawPoint",value:function(e,t,i,n,a,r,s){var o=this.w,l=a,c=new b(this.ctx),u=new y(this.ctx),h=new I(this.ctx),d=new M(this.ctx),f=new w(this.ctx),p=d.getMarkerConfig({cssClass:"apexcharts-marker",seriesIndex:l,dataPointIndex:r,finishRadius:"bubble"===o.config.chart.type||o.globals.comboCharts&&o.config.series[a]&&"bubble"===o.config.series[a].type?n:null});n=p.pSize;var g,m=h.fillPath({seriesNumber:a,dataPointIndex:r,color:p.pointFillColor,patternUnits:"objectBoundingBox",value:o.globals.series[a][s]});if("circle"===p.shape?g=f.drawCircle(i):"square"!==p.shape&&"rect"!==p.shape||(g=f.drawRect(0,0,p.width-p.pointStrokeWidth/2,p.height-p.pointStrokeWidth/2,p.pRadius)),o.config.series[l].data[r]&&o.config.series[l].data[r].fillColor&&(m=o.config.series[l].data[r].fillColor),g.attr({x:e-p.width/2-p.pointStrokeWidth/2,y:t-p.height/2-p.pointStrokeWidth/2,cx:e,cy:t,fill:m,"fill-opacity":p.pointFillOpacity,stroke:p.pointStrokeColor,r:n,"stroke-width":p.pointStrokeWidth,"stroke-dasharray":p.pointStrokeDashArray,"stroke-opacity":p.pointStrokeOpacity}),o.config.chart.dropShadow.enabled){var v=o.config.chart.dropShadow;u.dropShadow(g,v,a)}if(!this.initialAnim||o.globals.dataChanged||o.globals.resized)o.globals.animationEnded=!0;else{var x=o.config.chart.animations.speed;c.animateMarker(g,0,"circle"===p.shape?n:{width:p.width,height:p.height},x,o.globals.easing,(function(){window.setTimeout((function(){c.animationCompleted(g)}),100)}))}if(o.globals.dataChanged&&"circle"===p.shape)if(this.dynamicAnim){var k,S,A,C,E=o.config.chart.animations.dynamicAnimation.speed;null!=(C=o.globals.previousPaths[a]&&o.globals.previousPaths[a][s])&&(k=C.x,S=C.y,A=void 0!==C.r?C.r:n);for(var P=0;P<o.globals.collapsedSeries.length;P++)o.globals.collapsedSeries[P].index===a&&(E=1,n=0);0===e&&0===t&&(n=0),c.animateCircle(g,{cx:k,cy:S,r:A},{cx:e,cy:t,r:n},E,o.globals.easing)}else g.attr({r:n});return g.attr({rel:r,j:r,index:a,"default-marker-size":n}),u.setSelectionFilter(g,a,r),d.addEvents(g),g.node.classList.add("apexcharts-marker"),g}},{key:"centerTextInBubble",value:function(e){var t=this.w;return{y:e+=parseInt(t.config.dataLabels.style.fontSize,10)/4}}}]),e}(),z=function(){function e(t){o(this,e),this.ctx=t,this.w=t.w}return c(e,[{key:"dataLabelsCorrection",value:function(e,t,i,n,a,r,s){var o=this.w,l=!1,c=new w(this.ctx).getTextRects(i,s),u=c.width,h=c.height;t<0&&(t=0),t>o.globals.gridHeight+h&&(t=o.globals.gridHeight+h/2),void 0===o.globals.dataLabelsRects[n]&&(o.globals.dataLabelsRects[n]=[]),o.globals.dataLabelsRects[n].push({x:e,y:t,width:u,height:h});var d=o.globals.dataLabelsRects[n].length-2,f=void 0!==o.globals.lastDrawnDataLabelsIndexes[n]?o.globals.lastDrawnDataLabelsIndexes[n][o.globals.lastDrawnDataLabelsIndexes[n].length-1]:0;if(void 0!==o.globals.dataLabelsRects[n][d]){var p=o.globals.dataLabelsRects[n][f];(e>p.x+p.width+2||t>p.y+p.height+2||e+u<p.x)&&(l=!0)}return(0===a||r)&&(l=!0),{x:e,y:t,textRects:c,drawnextLabel:l}}},{key:"drawDataLabel",value:function(e,t,i){var n=this,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:2,r=this.w,s=new w(this.ctx),o=r.config.dataLabels,l=0,c=0,u=i,h=null;if(!o.enabled||!Array.isArray(e.x))return h;h=s.group({class:"apexcharts-data-labels"});for(var d=0;d<e.x.length;d++)if(l=e.x[d]+o.offsetX,c=e.y[d]+o.offsetY+a,!isNaN(l)){1===i&&0===d&&(u=0),1===i&&1===d&&(u=1);var f=r.globals.series[t][u],p="",g=function(e){return r.config.dataLabels.formatter(e,{ctx:n.ctx,seriesIndex:t,dataPointIndex:u,w:r})};if("bubble"===r.config.chart.type){p=g(f=r.globals.seriesZ[t][u]),c=e.y[d];var m=new O(this.ctx),v=m.centerTextInBubble(c,t,u);c=v.y}else void 0!==f&&(p=g(f));this.plotDataLabelsText({x:l,y:c,text:p,i:t,j:u,parent:h,offsetCorrection:!0,dataLabelsConfig:r.config.dataLabels})}return h}},{key:"plotDataLabelsText",value:function(e){var t=this.w,i=new w(this.ctx),n=e.x,a=e.y,r=e.i,s=e.j,o=e.text,l=e.textAnchor,c=e.fontSize,u=e.parent,h=e.dataLabelsConfig,d=e.color,f=e.alwaysDrawDataLabel,p=e.offsetCorrection;if(!(Array.isArray(t.config.dataLabels.enabledOnSeries)&&t.config.dataLabels.enabledOnSeries.indexOf(r)<0)){var g={x:n,y:a,drawnextLabel:!0,textRects:null};p&&(g=this.dataLabelsCorrection(n,a,o,r,s,f,parseInt(h.style.fontSize,10))),t.globals.zoomed||(n=g.x,a=g.y),g.textRects&&(n<-10-g.textRects.width||n>t.globals.gridWidth+g.textRects.width+10)&&(o="");var m=t.globals.dataLabels.style.colors[r];(("bar"===t.config.chart.type||"rangeBar"===t.config.chart.type)&&t.config.plotOptions.bar.distributed||t.config.dataLabels.distributed)&&(m=t.globals.dataLabels.style.colors[s]),"function"==typeof m&&(m=m({series:t.globals.series,seriesIndex:r,dataPointIndex:s,w:t})),d&&(m=d);var v=h.offsetX,x=h.offsetY;if("bar"!==t.config.chart.type&&"rangeBar"!==t.config.chart.type||(v=0,x=0),g.drawnextLabel){var b=i.drawText({width:100,height:parseInt(h.style.fontSize,10),x:n+v,y:a+x,foreColor:m,textAnchor:l||h.textAnchor,text:o,fontSize:c||h.style.fontSize,fontFamily:h.style.fontFamily,fontWeight:h.style.fontWeight||"normal"});if(b.attr({class:"apexcharts-datalabel",cx:n,cy:a}),h.dropShadow.enabled){var k=h.dropShadow;new y(this.ctx).dropShadow(b,k)}u.add(b),void 0===t.globals.lastDrawnDataLabelsIndexes[r]&&(t.globals.lastDrawnDataLabelsIndexes[r]=[]),t.globals.lastDrawnDataLabelsIndexes[r].push(s)}}}},{key:"addBackgroundToDataLabel",value:function(e,t){var i=this.w,n=i.config.dataLabels.background,a=n.padding,r=n.padding/2,s=t.width,o=t.height,l=new w(this.ctx).drawRect(t.x-a,t.y-r/2,s+2*a,o+r,n.borderRadius,"transparent"===i.config.chart.background?"#fff":i.config.chart.background,n.opacity,n.borderWidth,n.borderColor);return n.dropShadow.enabled&&new y(this.ctx).dropShadow(l,n.dropShadow),l}},{key:"dataLabelsBackground",value:function(){var e=this.w;if("bubble"!==e.config.chart.type)for(var t=e.globals.dom.baseEl.querySelectorAll(".apexcharts-datalabels text"),i=0;i<t.length;i++){var n=t[i],a=n.getBBox(),r=null;if(a.width&&a.height&&(r=this.addBackgroundToDataLabel(n,a)),r){n.parentNode.insertBefore(r.node,n);var s=n.getAttribute("fill");!e.config.chart.animations.enabled||e.globals.resized||e.globals.dataChanged?r.attr({fill:s}):r.animate().attr({fill:s}),n.setAttribute("fill",e.config.dataLabels.background.foreColor)}}}},{key:"bringForward",value:function(){for(var e=this.w,t=e.globals.dom.baseEl.querySelectorAll(".apexcharts-datalabels"),i=e.globals.dom.baseEl.querySelector(".apexcharts-plot-series:last-child"),n=0;n<t.length;n++)i&&i.insertBefore(t[n],i.nextSibling)}}]),e}(),R=function(){function e(t){o(this,e),this.w=t.w,this.barCtx=t}return c(e,[{key:"handleBarDataLabels",value:function(e){var t=e.x,i=e.y,n=e.y1,a=e.y2,r=e.i,s=e.j,o=e.realIndex,l=e.series,c=e.barHeight,u=e.barWidth,h=e.barYPosition,d=e.visibleSeries,f=e.renderedPath,p=this.w,g=new w(this.barCtx.ctx),m=Array.isArray(this.barCtx.strokeWidth)?this.barCtx.strokeWidth[o]:this.barCtx.strokeWidth,v=t+parseFloat(u*d),x=i+parseFloat(c*d);p.globals.isXNumeric&&!p.globals.isBarHorizontal&&(v=t+parseFloat(u*(d+1)),x=i+parseFloat(c*(d+1))-m);var b,y=t,k=i,S=p.config.dataLabels,A=this.barCtx.barOptions.dataLabels;void 0!==h&&this.barCtx.isRangeBar&&(x=h,k=h);var C=S.offsetX,E=S.offsetY,P={width:0,height:0};if(p.config.dataLabels.enabled){var T=this.barCtx.series[r][s];P=g.getTextRects(p.globals.yLabelFormatters[0](T),parseFloat(S.style.fontSize))}var L={x:t,y:i,i:r,j:s,renderedPath:f,bcx:v,bcy:x,barHeight:c,barWidth:u,textRects:P,strokeWidth:m,dataLabelsX:y,dataLabelsY:k,barDataLabelsConfig:A,offX:C,offY:E};return b=this.barCtx.isHorizontal?this.calculateBarsDataLabelsPosition(L):this.calculateColumnsDataLabelsPosition(L),f.attr({cy:b.bcy,cx:b.bcx,j:s,val:l[r][s],barHeight:c,barWidth:u}),this.drawCalculatedDataLabels({x:b.dataLabelsX,y:b.dataLabelsY,val:this.barCtx.isRangeBar?[n,a]:l[r][s],i:o,j:s,barWidth:u,barHeight:c,textRects:P,dataLabelsConfig:S})}},{key:"calculateColumnsDataLabelsPosition",value:function(e){var t,i=this.w,n=e.i,a=e.j,r=e.y,s=e.bcx,o=e.barWidth,l=e.barHeight,c=e.textRects,u=e.dataLabelsY,h=e.barDataLabelsConfig,d=e.strokeWidth,f=e.offX,p=e.offY;l=Math.abs(l);var g="vertical"===i.config.plotOptions.bar.dataLabels.orientation;s-=d/2;var m=i.globals.gridWidth/i.globals.dataPoints;t=i.globals.isXNumeric?s-o/2+f:s-m+o/2+f,g&&(t=t+c.height/2-d/2-2);var v=this.barCtx.series[n][a]<0,x=r;switch(this.barCtx.isReversed&&(x=r-l+(v?2*l:0),r-=l),h.position){case"center":u=g?v?x+l/2+p:x+l/2-p:v?x-l/2+c.height/2+p:x+l/2+c.height/2-p;break;case"bottom":u=g?v?x+l+p:x+l-p:v?x-l+c.height+d+p:x+l-c.height/2+d-p;break;case"top":u=g?v?x+p:x-p:v?x-c.height/2-p:x+c.height+p}return i.config.chart.stacked||(u<0?u=0+d:u+c.height/3>i.globals.gridHeight&&(u=i.globals.gridHeight-d)),{bcx:s,bcy:r,dataLabelsX:t,dataLabelsY:u}}},{key:"calculateBarsDataLabelsPosition",value:function(e){var t=this.w,i=e.x,n=e.i,a=e.j,r=e.bcy,s=e.barHeight,o=e.barWidth,l=e.textRects,c=e.dataLabelsX,u=e.strokeWidth,h=e.barDataLabelsConfig,d=e.offX,f=e.offY,p=t.globals.gridHeight/t.globals.dataPoints;o=Math.abs(o);var g=r-(this.barCtx.isRangeBar?0:p)+s/2+l.height/2+f-3,m=this.barCtx.series[n][a]<0,v=i;switch(this.barCtx.isReversed&&(v=i+o-(m?2*o:0),i=t.globals.gridWidth-o),h.position){case"center":c=m?v+o/2-d:Math.max(l.width/2,v-o/2)+d;break;case"bottom":c=m?v+o-u-Math.round(l.width/2)-d:v-o+u+Math.round(l.width/2)+d;break;case"top":c=m?v-u+Math.round(l.width/2)-d:v-u-Math.round(l.width/2)+d}return t.config.chart.stacked||(c<0?c=c+l.width+u:c+l.width/2>t.globals.gridWidth&&(c=t.globals.gridWidth-l.width-u)),{bcx:i,bcy:r,dataLabelsX:c,dataLabelsY:g}}},{key:"drawCalculatedDataLabels",value:function(e){var t=e.x,i=e.y,n=e.val,a=e.i,s=e.j,o=e.textRects,l=e.barHeight,c=e.barWidth,u=e.dataLabelsConfig,h=this.w,d="rotate(0)";"vertical"===h.config.plotOptions.bar.dataLabels.orientation&&(d="rotate(-90, ".concat(t,", ").concat(i,")"));var f=new z(this.barCtx.ctx),p=new w(this.barCtx.ctx),g=u.formatter,m=null,v=h.globals.collapsedSeriesIndices.indexOf(a)>-1;if(u.enabled&&!v){m=p.group({class:"apexcharts-data-labels",transform:d});var x="";void 0!==n&&(x=g(n,{seriesIndex:a,dataPointIndex:s,w:h}));var b=h.globals.series[a][s]<0,y=h.config.plotOptions.bar.dataLabels.position;"vertical"===h.config.plotOptions.bar.dataLabels.orientation&&("top"===y&&(u.textAnchor=b?"end":"start"),"center"===y&&(u.textAnchor="middle"),"bottom"===y&&(u.textAnchor=b?"end":"start")),this.barCtx.isRangeBar&&this.barCtx.barOptions.dataLabels.hideOverflowingLabels&&c<p.getTextRects(x,parseFloat(u.style.fontSize)).width&&(x=""),h.config.chart.stacked&&this.barCtx.barOptions.dataLabels.hideOverflowingLabels&&(this.barCtx.isHorizontal?o.width/1.6>Math.abs(c)&&(x=""):o.height/1.6>Math.abs(l)&&(x=""));var k=r({},u);this.barCtx.isHorizontal&&n<0&&("start"===u.textAnchor?k.textAnchor="end":"end"===u.textAnchor&&(k.textAnchor="start")),f.plotDataLabelsText({x:t,y:i,text:x,i:a,j:s,parent:m,dataLabelsConfig:k,alwaysDrawDataLabel:!0,offsetCorrection:!0})}return m}}]),e}(),F=function(){function e(t){o(this,e),this.ctx=t,this.w=t.w,this.legendInactiveClass="legend-mouseover-inactive"}return c(e,[{key:"getAllSeriesEls",value:function(){return this.w.globals.dom.baseEl.getElementsByClassName("apexcharts-series")}},{key:"getSeriesByName",value:function(e){return this.w.globals.dom.baseEl.querySelector(".apexcharts-inner .apexcharts-series[seriesName='".concat(x.escapeString(e),"']"))}},{key:"isSeriesHidden",value:function(e){var t=this.getSeriesByName(e),i=parseInt(t.getAttribute("data:realIndex"),10);return{isHidden:t.classList.contains("apexcharts-series-collapsed"),realIndex:i}}},{key:"addCollapsedClassToSeries",value:function(e,t){var i=this.w;function n(i){for(var n=0;n<i.length;n++)i[n].index===t&&e.node.classList.add("apexcharts-series-collapsed")}n(i.globals.collapsedSeries),n(i.globals.ancillaryCollapsedSeries)}},{key:"toggleSeries",value:function(e){var t=this.isSeriesHidden(e);return this.ctx.legend.legendHelpers.toggleDataSeries(t.realIndex,t.isHidden),t.isHidden}},{key:"showSeries",value:function(e){var t=this.isSeriesHidden(e);t.isHidden&&this.ctx.legend.legendHelpers.toggleDataSeries(t.realIndex,!0)}},{key:"hideSeries",value:function(e){var t=this.isSeriesHidden(e);t.isHidden||this.ctx.legend.legendHelpers.toggleDataSeries(t.realIndex,!1)}},{key:"resetSeries",value:function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],n=this.w,a=x.clone(n.globals.initialSeries);n.globals.previousPaths=[],i?(n.globals.collapsedSeries=[],n.globals.ancillaryCollapsedSeries=[],n.globals.collapsedSeriesIndices=[],n.globals.ancillaryCollapsedSeriesIndices=[]):a=this.emptyCollapsedSeries(a),n.config.series=a,e&&(t&&(n.globals.zoomed=!1,this.ctx.updateHelpers.revertDefaultAxisMinMax()),this.ctx.updateHelpers._updateSeries(a,n.config.chart.animations.dynamicAnimation.enabled))}},{key:"emptyCollapsedSeries",value:function(e){for(var t=this.w,i=0;i<e.length;i++)t.globals.collapsedSeriesIndices.indexOf(i)>-1&&(e[i].data=[]);return e}},{key:"toggleSeriesOnHover",value:function(e,t){var i=this.w;t||(t=e.target);var n=i.globals.dom.baseEl.querySelectorAll(".apexcharts-series, .apexcharts-datalabels");if("mousemove"===e.type){var a=parseInt(t.getAttribute("rel"),10)-1,r=null,s=null;i.globals.axisCharts||"radialBar"===i.config.chart.type?i.globals.axisCharts?(r=i.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(a,"']")),s=i.globals.dom.baseEl.querySelector(".apexcharts-datalabels[data\\:realIndex='".concat(a,"']"))):r=i.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(a+1,"']")):r=i.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(a+1,"'] path"));for(var o=0;o<n.length;o++)n[o].classList.add(this.legendInactiveClass);null!==r&&(i.globals.axisCharts||r.parentNode.classList.remove(this.legendInactiveClass),r.classList.remove(this.legendInactiveClass),null!==s&&s.classList.remove(this.legendInactiveClass))}else if("mouseout"===e.type)for(var l=0;l<n.length;l++)n[l].classList.remove(this.legendInactiveClass)}},{key:"highlightRangeInSeries",value:function(e,t){var i=this,n=this.w,a=n.globals.dom.baseEl.getElementsByClassName("apexcharts-heatmap-rect"),r=function(e){for(var t=0;t<a.length;t++)a[t].classList[e](i.legendInactiveClass)};if("mousemove"===e.type){var s=parseInt(t.getAttribute("rel"),10)-1;r("add"),function(e){for(var t=0;t<a.length;t++){var n=parseInt(a[t].getAttribute("val"),10);n>=e.from&&n<=e.to&&a[t].classList.remove(i.legendInactiveClass)}}(n.config.plotOptions.heatmap.colorScale.ranges[s])}else"mouseout"===e.type&&r("remove")}},{key:"getActiveConfigSeriesIndex",value:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"asc",i=this.w,n=0;if(i.config.series.length>1)for(var a=i.config.series.map((function(t,n){var a=!1;return e&&(a="bar"===i.config.series[n].type||"column"===i.config.series[n].type),t.data&&t.data.length>0&&!a?n:-1})),r="asc"===t?0:a.length-1;"asc"===t?r<a.length:r>=0;"asc"===t?r++:r--)if(-1!==a[r]){n=a[r];break}return n}},{key:"getPreviousPaths",value:function(){var e=this.w;function t(t,i,n){for(var a=t[i].childNodes,r={type:n,paths:[],realIndex:t[i].getAttribute("data:realIndex")},s=0;s<a.length;s++)if(a[s].hasAttribute("pathTo")){var o=a[s].getAttribute("pathTo");r.paths.push({d:o})}e.globals.previousPaths.push(r)}e.globals.previousPaths=[],["line","area","bar","rangebar","candlestick","radar"].forEach((function(i){for(var n,a=(n=i,e.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(n,"-series .apexcharts-series"))),r=0;r<a.length;r++)t(a,r,i)})),this.handlePrevBubbleScatterPaths("bubble"),this.handlePrevBubbleScatterPaths("scatter");var i=e.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(e.config.chart.type," .apexcharts-series"));if(i.length>0)for(var n=function(t){for(var i=e.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(e.config.chart.type," .apexcharts-series[data\\:realIndex='").concat(t,"'] rect")),n=[],a=function(e){var t=function(t){return i[e].getAttribute(t)},a={x:parseFloat(t("x")),y:parseFloat(t("y")),width:parseFloat(t("width")),height:parseFloat(t("height"))};n.push({rect:a,color:i[e].getAttribute("color")})},r=0;r<i.length;r++)a(r);e.globals.previousPaths.push(n)},a=0;a<i.length;a++)n(a);e.globals.axisCharts||(e.globals.previousPaths=e.globals.series)}},{key:"handlePrevBubbleScatterPaths",value:function(e){var t=this.w,i=t.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(e,"-series .apexcharts-series"));if(i.length>0)for(var n=0;n<i.length;n++){for(var a=t.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(e,"-series .apexcharts-series[data\\:realIndex='").concat(n,"'] circle")),r=[],s=0;s<a.length;s++)r.push({x:a[s].getAttribute("cx"),y:a[s].getAttribute("cy"),r:a[s].getAttribute("r")});t.globals.previousPaths.push(r)}}},{key:"clearPreviousPaths",value:function(){var e=this.w;e.globals.previousPaths=[],e.globals.allSeriesCollapsed=!1}},{key:"handleNoData",value:function(){var e=this.w,t=e.config.noData,i=new w(this.ctx),n=e.globals.svgWidth/2,a=e.globals.svgHeight/2,r="middle";if(e.globals.noData=!0,e.globals.animationEnded=!0,"left"===t.align?(n=10,r="start"):"right"===t.align&&(n=e.globals.svgWidth-10,r="end"),"top"===t.verticalAlign?a=50:"bottom"===t.verticalAlign&&(a=e.globals.svgHeight-50),n+=t.offsetX,a=a+parseInt(t.style.fontSize,10)+2+t.offsetY,void 0!==t.text&&""!==t.text){var s=i.drawText({x:n,y:a,text:t.text,textAnchor:r,fontSize:t.style.fontSize,fontFamily:t.style.fontFamily,foreColor:t.style.color,opacity:1,class:"apexcharts-text-nodata"});e.globals.dom.Paper.add(s)}}},{key:"setNullSeriesToZeroValues",value:function(e){for(var t=this.w,i=0;i<e.length;i++)if(0===e[i].length)for(var n=0;n<e[t.globals.maxValsInArrayIndex].length;n++)e[i].push(0);return e}},{key:"hasAllSeriesEqualX",value:function(){for(var e=!0,t=this.w,i=this.filteredSeriesX(),n=0;n<i.length-1;n++)if(i[n][0]!==i[n+1][0]){e=!1;break}return t.globals.allSeriesHasEqualX=e,e}},{key:"filteredSeriesX",value:function(){return this.w.globals.seriesX.map((function(e){return e.length>0?e:[]}))}}]),e}(),N=function(){function e(t){o(this,e),this.w=t.w,this.barCtx=t}return c(e,[{key:"initVariables",value:function(e){var t=this.w;this.barCtx.series=e,this.barCtx.totalItems=0,this.barCtx.seriesLen=0,this.barCtx.visibleI=-1,this.barCtx.visibleItems=1;for(var i=0;i<e.length;i++)if(e[i].length>0&&(this.barCtx.seriesLen=this.barCtx.seriesLen+1,this.barCtx.totalItems+=e[i].length),t.globals.isXNumeric)for(var n=0;n<e[i].length;n++)t.globals.seriesX[i][n]>t.globals.minX&&t.globals.seriesX[i][n]<t.globals.maxX&&this.barCtx.visibleItems++;else this.barCtx.visibleItems=t.globals.dataPoints;0===this.barCtx.seriesLen&&(this.barCtx.seriesLen=1),this.barCtx.zeroSerieses=[],this.barCtx.radiusOnSeriesNumber=e.length-1,t.globals.comboCharts||this.checkZeroSeries({series:e})}},{key:"initialPositions",value:function(){var e,t,i,n,a,r,s,o,l=this.w,c=l.globals.dataPoints;this.barCtx.isRangeBar&&(c=l.globals.labels.length);var u=this.barCtx.seriesLen;if(l.config.plotOptions.bar.rangeBarGroupRows&&(u=1),this.barCtx.isHorizontal)a=(i=l.globals.gridHeight/c)/u,l.globals.isXNumeric&&(a=(i=l.globals.gridHeight/this.barCtx.totalItems)/this.barCtx.seriesLen),a=a*parseInt(this.barCtx.barOptions.barHeight,10)/100,o=this.barCtx.baseLineInvertedY+l.globals.padHorizontal+(this.barCtx.isReversed?l.globals.gridWidth:0)-(this.barCtx.isReversed?2*this.barCtx.baseLineInvertedY:0),t=(i-a*this.barCtx.seriesLen)/2;else{if(n=l.globals.gridWidth/this.barCtx.visibleItems,l.config.xaxis.convertedCatToNumeric&&(n=l.globals.gridWidth/l.globals.dataPoints),r=n/this.barCtx.seriesLen*parseInt(this.barCtx.barOptions.columnWidth,10)/100,l.globals.isXNumeric){var h=this.barCtx.xRatio;l.config.xaxis.convertedCatToNumeric&&(h=this.barCtx.initialXRatio),l.globals.minXDiff&&.5!==l.globals.minXDiff&&l.globals.minXDiff/h>0&&(n=l.globals.minXDiff/h),(r=n/this.barCtx.seriesLen*parseInt(this.barCtx.barOptions.columnWidth,10)/100)<1&&(r=1)}s=l.globals.gridHeight-this.barCtx.baseLineY[this.barCtx.yaxisIndex]-(this.barCtx.isReversed?l.globals.gridHeight:0)+(this.barCtx.isReversed?2*this.barCtx.baseLineY[this.barCtx.yaxisIndex]:0),e=l.globals.padHorizontal+(n-r*this.barCtx.seriesLen)/2}return{x:e,y:t,yDivision:i,xDivision:n,barHeight:a,barWidth:r,zeroH:s,zeroW:o}}},{key:"getPathFillColor",value:function(e,t,i,n){var a=this.w,r=new I(this.barCtx.ctx),s=null,o=this.barCtx.barOptions.distributed?i:t;return this.barCtx.barOptions.colors.ranges.length>0&&this.barCtx.barOptions.colors.ranges.map((function(n){e[t][i]>=n.from&&e[t][i]<=n.to&&(s=n.color)})),a.config.series[t].data[i]&&a.config.series[t].data[i].fillColor&&(s=a.config.series[t].data[i].fillColor),r.fillPath({seriesNumber:this.barCtx.barOptions.distributed?o:n,dataPointIndex:i,color:s,value:e[t][i]})}},{key:"getStrokeWidth",value:function(e,t,i){var n=0,a=this.w;return void 0===this.barCtx.series[e][t]||null===this.barCtx.series[e][t]?this.barCtx.isNullValue=!0:this.barCtx.isNullValue=!1,a.config.stroke.show&&(this.barCtx.isNullValue||(n=Array.isArray(this.barCtx.strokeWidth)?this.barCtx.strokeWidth[i]:this.barCtx.strokeWidth)),n}},{key:"barBackground",value:function(e){var t=e.j,i=e.i,n=e.x1,a=e.x2,r=e.y1,s=e.y2,o=e.elSeries,l=this.w,c=new w(this.barCtx.ctx),u=new F(this.barCtx.ctx).getActiveConfigSeriesIndex();if(this.barCtx.barOptions.colors.backgroundBarColors.length>0&&u===i){t>=this.barCtx.barOptions.colors.backgroundBarColors.length&&(t-=this.barCtx.barOptions.colors.backgroundBarColors.length);var h=this.barCtx.barOptions.colors.backgroundBarColors[t],d=c.drawRect(void 0!==n?n:0,void 0!==r?r:0,void 0!==a?a:l.globals.gridWidth,void 0!==s?s:l.globals.gridHeight,this.barCtx.barOptions.colors.backgroundBarRadius,h,this.barCtx.barOptions.colors.backgroundBarOpacity);o.add(d),d.node.classList.add("apexcharts-backgroundBar")}}},{key:"getColumnPaths",value:function(e){var t=e.barWidth,i=e.barXPosition,n=e.yRatio,a=e.y1,r=e.y2,s=e.strokeWidth,o=e.series,l=e.realIndex,c=e.i,u=e.j,h=e.w,d=new w(this.barCtx.ctx);(s=Array.isArray(s)?s[l]:s)||(s=0);var f={barWidth:t,strokeWidth:s,yRatio:n,barXPosition:i,y1:a,y2:r},p=this.getRoundedBars(h,f,o,c,u),g=i,m=i+t,v=d.move(g,a),x=d.move(g,a),b=d.line(m-s,a);return h.globals.previousPaths.length>0&&(x=this.barCtx.getPreviousPath(l,u,!1)),v=v+d.line(g,p.y2)+p.pathWithRadius+d.line(m-s,p.y2)+b+b+"z",x=x+d.line(g,a)+b+b+b+b+b+d.line(g,a),h.config.chart.stacked&&(this.barCtx.yArrj.push(p.y2),this.barCtx.yArrjF.push(Math.abs(a-p.y2)),this.barCtx.yArrjVal.push(this.barCtx.series[c][u])),{pathTo:v,pathFrom:x}}},{key:"getBarpaths",value:function(e){var t=e.barYPosition,i=e.barHeight,n=e.x1,a=e.x2,r=e.strokeWidth,s=e.series,o=e.realIndex,l=e.i,c=e.j,u=e.w,h=new w(this.barCtx.ctx);(r=Array.isArray(r)?r[o]:r)||(r=0);var d={barHeight:i,strokeWidth:r,barYPosition:t,x2:a,x1:n},f=this.getRoundedBars(u,d,s,l,c),p=h.move(n,t),g=h.move(n,t);u.globals.previousPaths.length>0&&(g=this.barCtx.getPreviousPath(o,c,!1));var m=t,v=t+i,x=h.line(n,v-r);return p=p+h.line(f.x2,m)+f.pathWithRadius+h.line(f.x2,v-r)+x+x+"z",g=g+h.line(n,m)+x+x+x+x+x+h.line(n,m),u.config.chart.stacked&&(this.barCtx.xArrj.push(f.x2),this.barCtx.xArrjF.push(Math.abs(n-f.x2)),this.barCtx.xArrjVal.push(this.barCtx.series[l][c])),{pathTo:p,pathFrom:g}}},{key:"getRoundedBars",value:function(e,t,i,n,a){var r=new w(this.barCtx.ctx),s=0,o=e.config.plotOptions.bar.borderRadius,l=Array.isArray(o);if(s=l?o[n>o.length-1?o.length-1:n]:o,e.config.chart.stacked&&i.length>1&&n!==this.barCtx.radiusOnSeriesNumber&&!l&&(s=0),this.barCtx.isHorizontal){var c="",u=t.x2;if(Math.abs(t.x1-t.x2)<s&&(s=Math.abs(t.x1-t.x2)),void 0!==i[n][a]||null!==i[n][a]){var h=this.barCtx.isReversed?i[n][a]>0:i[n][a]<0;h&&(s*=-1),u-=s,c=r.quadraticCurve(u+s,t.barYPosition,u+s,t.barYPosition+(h?-1*s:s))+r.line(u+s,t.barYPosition+t.barHeight-t.strokeWidth-(h?-1*s:s))+r.quadraticCurve(u+s,t.barYPosition+t.barHeight-t.strokeWidth,u,t.barYPosition+t.barHeight-t.strokeWidth)}return{pathWithRadius:c,x2:u}}var d="",f=t.y2;if(Math.abs(t.y1-t.y2)<s&&(s=Math.abs(t.y1-t.y2)),void 0!==i[n][a]||null!==i[n][a]){var p=i[n][a]<0;p&&(s*=-1),f+=s,d=r.quadraticCurve(t.barXPosition,f-s,t.barXPosition+(p?-1*s:s),f-s)+r.line(t.barXPosition+t.barWidth-t.strokeWidth-(p?-1*s:s),f-s)+r.quadraticCurve(t.barXPosition+t.barWidth-t.strokeWidth,f-s,t.barXPosition+t.barWidth-t.strokeWidth,f)}return{pathWithRadius:d,y2:f}}},{key:"checkZeroSeries",value:function(e){for(var t=e.series,i=this.w,n=0;n<t.length;n++){for(var a=0,r=0;r<t[i.globals.maxValsInArrayIndex].length;r++)a+=t[n][r];0===a&&this.barCtx.zeroSerieses.push(n)}for(var s=t.length-1;s>=0;s--)this.barCtx.zeroSerieses.indexOf(s)>-1&&s===this.radiusOnSeriesNumber&&(this.barCtx.radiusOnSeriesNumber-=1);for(var o=t.length-1;o>=0;o--)i.globals.collapsedSeriesIndices.indexOf(this.barCtx.radiusOnSeriesNumber)>-1&&(this.barCtx.radiusOnSeriesNumber-=1)}},{key:"getXForValue",value:function(e,t){var i=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],n=i?t:null;return null!=e&&(n=t+e/this.barCtx.invertedYRatio-2*(this.barCtx.isReversed?e/this.barCtx.invertedYRatio:0)),n}},{key:"getYForValue",value:function(e,t){var i=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],n=i?t:null;return null!=e&&(n=t-e/this.barCtx.yRatio[this.barCtx.yaxisIndex]+2*(this.barCtx.isReversed?e/this.barCtx.yRatio[this.barCtx.yaxisIndex]:0)),n}},{key:"getGoalValues",value:function(e,t,i,n,a){var r=this,s=this.w,o=[];return s.globals.seriesGoals[n]&&s.globals.seriesGoals[n][a]&&Array.isArray(s.globals.seriesGoals[n][a])&&s.globals.seriesGoals[n][a].forEach((function(n){var a;o.push((u(a={},e,"x"===e?r.getXForValue(n.value,t,!1):r.getYForValue(n.value,i,!1)),u(a,"attrs",n),a))})),o}},{key:"drawGoalLine",value:function(e){var t=e.barXPosition,i=e.barYPosition,n=e.goalX,a=e.goalY,r=e.barWidth,s=e.barHeight,o=new w(this.barCtx.ctx),l=o.group({className:"apexcharts-bar-goals-groups"}),c=null;return this.barCtx.isHorizontal?Array.isArray(n)&&n.forEach((function(e){var t=void 0!==e.attrs.strokeHeight?e.attrs.strokeHeight:s/2,n=i+t+s/2;c=o.drawLine(e.x,n-2*t,e.x,n,e.attrs.strokeColor?e.attrs.strokeColor:void 0,e.attrs.strokeDashArray,e.attrs.strokeWidth?e.attrs.strokeWidth:2,e.attrs.strokeLineCap),l.add(c)})):Array.isArray(a)&&a.forEach((function(e){var i=void 0!==e.attrs.strokeWidth?e.attrs.strokeWidth:r/2,n=t+i+r/2;c=o.drawLine(n-2*i,e.y,n,e.y,e.attrs.strokeColor?e.attrs.strokeColor:void 0,e.attrs.strokeDashArray,e.attrs.strokeHeight?e.attrs.strokeHeight:2,e.attrs.strokeLineCap),l.add(c)})),l}}]),e}(),D=function(){function e(t,i){o(this,e),this.ctx=t,this.w=t.w;var n=this.w;this.barOptions=n.config.plotOptions.bar,this.isHorizontal=this.barOptions.horizontal,this.strokeWidth=n.config.stroke.width,this.isNullValue=!1,this.isRangeBar=n.globals.seriesRangeBar.length&&this.isHorizontal,this.xyRatios=i,null!==this.xyRatios&&(this.xRatio=i.xRatio,this.initialXRatio=i.initialXRatio,this.yRatio=i.yRatio,this.invertedXRatio=i.invertedXRatio,this.invertedYRatio=i.invertedYRatio,this.baseLineY=i.baseLineY,this.baseLineInvertedY=i.baseLineInvertedY),this.yaxisIndex=0,this.seriesLen=0,this.barHelpers=new N(this)}return c(e,[{key:"draw",value:function(e,t){var i=this.w,n=new w(this.ctx),a=new A(this.ctx,i);e=a.getLogSeries(e),this.series=e,this.yRatio=a.getLogYRatios(this.yRatio),this.barHelpers.initVariables(e);var s=n.group({class:"apexcharts-bar-series apexcharts-plot-series"});i.config.dataLabels.enabled&&this.totalItems>this.barOptions.dataLabels.maxItems&&console.warn("WARNING: DataLabels are enabled but there are too many to display. This may cause performance issue when rendering.");for(var o=0,l=0;o<e.length;o++,l++){var c,u,h,d,f=void 0,p=void 0,g=[],m=[],v=i.globals.comboCharts?t[o]:o,b=n.group({class:"apexcharts-series",rel:o+1,seriesName:x.escapeString(i.globals.seriesNames[v]),"data:realIndex":v});this.ctx.series.addCollapsedClassToSeries(b,v),e[o].length>0&&(this.visibleI=this.visibleI+1);var y=0,k=0;this.yRatio.length>1&&(this.yaxisIndex=v),this.isReversed=i.config.yaxis[this.yaxisIndex]&&i.config.yaxis[this.yaxisIndex].reversed;var S=this.barHelpers.initialPositions();p=S.y,y=S.barHeight,u=S.yDivision,d=S.zeroW,f=S.x,k=S.barWidth,c=S.xDivision,h=S.zeroH,this.horizontal||m.push(f+k/2);for(var C=n.group({class:"apexcharts-datalabels","data:realIndex":v}),E=n.group({class:"apexcharts-bar-goals-markers",style:"pointer-events: none"}),P=0;P<i.globals.dataPoints;P++){var T=this.barHelpers.getStrokeWidth(o,P,v),L=null,I={indexes:{i:o,j:P,realIndex:v,bc:l},x:f,y:p,strokeWidth:T,elSeries:b};this.isHorizontal?(L=this.drawBarPaths(r(r({},I),{},{barHeight:y,zeroW:d,yDivision:u})),k=this.series[o][P]/this.invertedYRatio):(L=this.drawColumnPaths(r(r({},I),{},{xDivision:c,barWidth:k,zeroH:h})),y=this.series[o][P]/this.yRatio[this.yaxisIndex]);var M=this.barHelpers.drawGoalLine({barXPosition:L.barXPosition,barYPosition:L.barYPosition,goalX:L.goalX,goalY:L.goalY,barHeight:y,barWidth:k});M&&E.add(M),p=L.y,f=L.x,P>0&&m.push(f+k/2),g.push(p);var O=this.barHelpers.getPathFillColor(e,o,P,v);this.renderSeries({realIndex:v,pathFill:O,j:P,i:o,pathFrom:L.pathFrom,pathTo:L.pathTo,strokeWidth:T,elSeries:b,x:f,y:p,series:e,barHeight:y,barWidth:k,elDataLabelsWrap:C,elGoalsMarkers:E,visibleSeries:this.visibleI,type:"bar"})}i.globals.seriesXvalues[v]=m,i.globals.seriesYvalues[v]=g,s.add(b)}return s}},{key:"renderSeries",value:function(e){var t=e.realIndex,i=e.pathFill,n=e.lineFill,a=e.j,r=e.i,s=e.pathFrom,o=e.pathTo,l=e.strokeWidth,c=e.elSeries,u=e.x,h=e.y,d=e.y1,f=e.y2,p=e.series,g=e.barHeight,m=e.barWidth,v=e.barYPosition,x=e.elDataLabelsWrap,b=e.elGoalsMarkers,k=e.visibleSeries,S=e.type,A=this.w,C=new w(this.ctx);n||(n=this.barOptions.distributed?A.globals.stroke.colors[a]:A.globals.stroke.colors[t]),A.config.series[r].data[a]&&A.config.series[r].data[a].strokeColor&&(n=A.config.series[r].data[a].strokeColor),this.isNullValue&&(i="none");var E=a/A.config.chart.animations.animateGradually.delay*(A.config.chart.animations.speed/A.globals.dataPoints)/2.4,P=C.renderPaths({i:r,j:a,realIndex:t,pathFrom:s,pathTo:o,stroke:n,strokeWidth:l,strokeLineCap:A.config.stroke.lineCap,fill:i,animationDelay:E,initialSpeed:A.config.chart.animations.speed,dataChangeSpeed:A.config.chart.animations.dynamicAnimation.speed,className:"apexcharts-".concat(S,"-area")});P.attr("clip-path","url(#gridRectMask".concat(A.globals.cuid,")"));var T=A.config.forecastDataPoints;T.count>0&&a>=A.globals.dataPoints-T.count&&(P.node.setAttribute("stroke-dasharray",T.dashArray),P.node.setAttribute("stroke-width",T.strokeWidth),P.node.setAttribute("fill-opacity",T.fillOpacity)),void 0!==d&&void 0!==f&&(P.attr("data-range-y1",d),P.attr("data-range-y2",f)),new y(this.ctx).setSelectionFilter(P,t,a),c.add(P);var L=new R(this).handleBarDataLabels({x:u,y:h,y1:d,y2:f,i:r,j:a,series:p,realIndex:t,barHeight:g,barWidth:m,barYPosition:v,renderedPath:P,visibleSeries:k});return null!==L&&x.add(L),c.add(x),b&&c.add(b),c}},{key:"drawBarPaths",value:function(e){var t=e.indexes,i=e.barHeight,n=e.strokeWidth,a=e.zeroW,r=e.x,s=e.y,o=e.yDivision,l=e.elSeries,c=this.w,u=t.i,h=t.j;c.globals.isXNumeric&&(s=(c.globals.seriesX[u][h]-c.globals.minX)/this.invertedXRatio-i);var d=s+i*this.visibleI;r=this.barHelpers.getXForValue(this.series[u][h],a);var f=this.barHelpers.getBarpaths({barYPosition:d,barHeight:i,x1:a,x2:r,strokeWidth:n,series:this.series,realIndex:t.realIndex,i:u,j:h,w:c});return c.globals.isXNumeric||(s+=o),this.barHelpers.barBackground({j:h,i:u,y1:d-i*this.visibleI,y2:i*this.seriesLen,elSeries:l}),{pathTo:f.pathTo,pathFrom:f.pathFrom,x:r,y:s,goalX:this.barHelpers.getGoalValues("x",a,null,u,h),barYPosition:d}}},{key:"drawColumnPaths",value:function(e){var t=e.indexes,i=e.x,n=e.y,a=e.xDivision,r=e.barWidth,s=e.zeroH,o=e.strokeWidth,l=e.elSeries,c=this.w,u=t.realIndex,h=t.i,d=t.j,f=t.bc;if(c.globals.isXNumeric){var p=u;c.globals.seriesX[u].length||(p=c.globals.maxValsInArrayIndex),i=(c.globals.seriesX[p][d]-c.globals.minX)/this.xRatio-r*this.seriesLen/2}var g=i+r*this.visibleI;n=this.barHelpers.getYForValue(this.series[h][d],s);var m=this.barHelpers.getColumnPaths({barXPosition:g,barWidth:r,y1:s,y2:n,strokeWidth:o,series:this.series,realIndex:t.realIndex,i:h,j:d,w:c});return c.globals.isXNumeric||(i+=a),this.barHelpers.barBackground({bc:f,j:d,i:h,x1:g-o/2-r*this.visibleI,x2:r*this.seriesLen+o/2,elSeries:l}),{pathTo:m.pathTo,pathFrom:m.pathFrom,x:i,y:n,goalY:this.barHelpers.getGoalValues("y",null,s,h,d),barXPosition:g}}},{key:"getPreviousPath",value:function(e,t){for(var i,n=this.w,a=0;a<n.globals.previousPaths.length;a++){var r=n.globals.previousPaths[a];r.paths&&r.paths.length>0&&parseInt(r.realIndex,10)===parseInt(e,10)&&void 0!==n.globals.previousPaths[a].paths[t]&&(i=n.globals.previousPaths[a].paths[t].d)}return i}}]),e}(),X=function(){function e(t){o(this,e),this.ctx=t,this.w=t.w,this.months31=[1,3,5,7,8,10,12],this.months30=[2,4,6,9,11],this.daysCntOfYear=[0,31,59,90,120,151,181,212,243,273,304,334]}return c(e,[{key:"isValidDate",value:function(e){return!isNaN(this.parseDate(e))}},{key:"getTimeStamp",value:function(e){return Date.parse(e)?this.w.config.xaxis.labels.datetimeUTC?new Date(new Date(e).toISOString().substr(0,25)).getTime():new Date(e).getTime():e}},{key:"getDate",value:function(e){return this.w.config.xaxis.labels.datetimeUTC?new Date(new Date(e).toUTCString()):new Date(e)}},{key:"parseDate",value:function(e){var t=Date.parse(e);if(!isNaN(t))return this.getTimeStamp(e);var i=Date.parse(e.replace(/-/g,"/").replace(/[a-z]+/gi," "));return this.getTimeStamp(i)}},{key:"parseDateWithTimezone",value:function(e){return Date.parse(e.replace(/-/g,"/").replace(/[a-z]+/gi," "))}},{key:"formatDate",value:function(e,t){var i=this.w.globals.locale,n=this.w.config.xaxis.labels.datetimeUTC,a=["\0"].concat(m(i.months)),r=[""].concat(m(i.shortMonths)),s=[""].concat(m(i.days)),o=[""].concat(m(i.shortDays));function l(e,t){var i=e+"";for(t=t||2;i.length<t;)i="0"+i;return i}var c=n?e.getUTCFullYear():e.getFullYear();t=(t=(t=t.replace(/(^|[^\\])yyyy+/g,"$1"+c)).replace(/(^|[^\\])yy/g,"$1"+c.toString().substr(2,2))).replace(/(^|[^\\])y/g,"$1"+c);var u=(n?e.getUTCMonth():e.getMonth())+1;t=(t=(t=(t=t.replace(/(^|[^\\])MMMM+/g,"$1"+a[0])).replace(/(^|[^\\])MMM/g,"$1"+r[0])).replace(/(^|[^\\])MM/g,"$1"+l(u))).replace(/(^|[^\\])M/g,"$1"+u);var h=n?e.getUTCDate():e.getDate();t=(t=(t=(t=t.replace(/(^|[^\\])dddd+/g,"$1"+s[0])).replace(/(^|[^\\])ddd/g,"$1"+o[0])).replace(/(^|[^\\])dd/g,"$1"+l(h))).replace(/(^|[^\\])d/g,"$1"+h);var d=n?e.getUTCHours():e.getHours(),f=d>12?d-12:0===d?12:d;t=(t=(t=(t=t.replace(/(^|[^\\])HH+/g,"$1"+l(d))).replace(/(^|[^\\])H/g,"$1"+d)).replace(/(^|[^\\])hh+/g,"$1"+l(f))).replace(/(^|[^\\])h/g,"$1"+f);var p=n?e.getUTCMinutes():e.getMinutes();t=(t=t.replace(/(^|[^\\])mm+/g,"$1"+l(p))).replace(/(^|[^\\])m/g,"$1"+p);var g=n?e.getUTCSeconds():e.getSeconds();t=(t=t.replace(/(^|[^\\])ss+/g,"$1"+l(g))).replace(/(^|[^\\])s/g,"$1"+g);var v=n?e.getUTCMilliseconds():e.getMilliseconds();t=t.replace(/(^|[^\\])fff+/g,"$1"+l(v,3)),v=Math.round(v/10),t=t.replace(/(^|[^\\])ff/g,"$1"+l(v)),v=Math.round(v/10);var x=d<12?"AM":"PM";t=(t=(t=t.replace(/(^|[^\\])f/g,"$1"+v)).replace(/(^|[^\\])TT+/g,"$1"+x)).replace(/(^|[^\\])T/g,"$1"+x.charAt(0));var b=x.toLowerCase();t=(t=t.replace(/(^|[^\\])tt+/g,"$1"+b)).replace(/(^|[^\\])t/g,"$1"+b.charAt(0));var y=-e.getTimezoneOffset(),w=n||!y?"Z":y>0?"+":"-";if(!n){var k=(y=Math.abs(y))%60;w+=l(Math.floor(y/60))+":"+l(k)}t=t.replace(/(^|[^\\])K/g,"$1"+w);var S=(n?e.getUTCDay():e.getDay())+1;return(t=(t=(t=(t=t.replace(new RegExp(s[0],"g"),s[S])).replace(new RegExp(o[0],"g"),o[S])).replace(new RegExp(a[0],"g"),a[u])).replace(new RegExp(r[0],"g"),r[u])).replace(/\\(.)/g,"$1")}},{key:"getTimeUnitsfromTimestamp",value:function(e,t,i){var n=this.w;void 0!==n.config.xaxis.min&&(e=n.config.xaxis.min),void 0!==n.config.xaxis.max&&(t=n.config.xaxis.max);var a=this.getDate(e),r=this.getDate(t),s=this.formatDate(a,"yyyy MM dd HH mm ss fff").split(" "),o=this.formatDate(r,"yyyy MM dd HH mm ss fff").split(" ");return{minMillisecond:parseInt(s[6],10),maxMillisecond:parseInt(o[6],10),minSecond:parseInt(s[5],10),maxSecond:parseInt(o[5],10),minMinute:parseInt(s[4],10),maxMinute:parseInt(o[4],10),minHour:parseInt(s[3],10),maxHour:parseInt(o[3],10),minDate:parseInt(s[2],10),maxDate:parseInt(o[2],10),minMonth:parseInt(s[1],10)-1,maxMonth:parseInt(o[1],10)-1,minYear:parseInt(s[0],10),maxYear:parseInt(o[0],10)}}},{key:"isLeapYear",value:function(e){return e%4==0&&e%100!=0||e%400==0}},{key:"calculcateLastDaysOfMonth",value:function(e,t,i){return this.determineDaysOfMonths(e,t)-i}},{key:"determineDaysOfYear",value:function(e){var t=365;return this.isLeapYear(e)&&(t=366),t}},{key:"determineRemainingDaysOfYear",value:function(e,t,i){var n=this.daysCntOfYear[t]+i;return t>1&&this.isLeapYear()&&n++,n}},{key:"determineDaysOfMonths",value:function(e,t){var i=30;switch(e=x.monthMod(e),!0){case this.months30.indexOf(e)>-1:2===e&&(i=this.isLeapYear(t)?29:28);break;case this.months31.indexOf(e)>-1:default:i=31}return i}}]),e}(),Y=function(e){h(i,D);var t=g(i);function i(){return o(this,i),t.apply(this,arguments)}return c(i,[{key:"draw",value:function(e,t){var i=this.w,n=new w(this.ctx);this.rangeBarOptions=this.w.config.plotOptions.rangeBar,this.series=e,this.seriesRangeStart=i.globals.seriesRangeStart,this.seriesRangeEnd=i.globals.seriesRangeEnd,this.barHelpers.initVariables(e);for(var a=n.group({class:"apexcharts-rangebar-series apexcharts-plot-series"}),s=0;s<e.length;s++){var o,l,c,u=void 0,h=void 0,d=void 0,f=i.globals.comboCharts?t[s]:s,p=n.group({class:"apexcharts-series",seriesName:x.escapeString(i.globals.seriesNames[f]),rel:s+1,"data:realIndex":f});this.ctx.series.addCollapsedClassToSeries(p,f),e[s].length>0&&(this.visibleI=this.visibleI+1);var g=0,m=0;this.yRatio.length>1&&(this.yaxisIndex=f);var v=this.barHelpers.initialPositions();h=v.y,c=v.zeroW,u=v.x,m=v.barWidth,o=v.xDivision,l=v.zeroH;for(var b=n.group({class:"apexcharts-datalabels","data:realIndex":f}),y=n.group({class:"apexcharts-rangebar-goals-markers",style:"pointer-events: none"}),k=0;k<i.globals.dataPoints;k++){var S=this.barHelpers.getStrokeWidth(s,k,f),A=this.seriesRangeStart[s][k],C=this.seriesRangeEnd[s][k],E=null,P=null,T={x:u,y:h,strokeWidth:S,elSeries:p};if(d=v.yDivision,g=v.barHeight,this.isHorizontal){P=h+g*this.visibleI;var L=this.seriesLen;i.config.plotOptions.bar.rangeBarGroupRows&&(L=1);var I=(d-g*L)/2;if(void 0===i.config.series[s].data[k])break;if(i.config.series[s].data[k].x){var M=this.detectOverlappingBars({i:s,j:k,barYPosition:P,srty:I,barHeight:g,yDivision:d,initPositions:v});g=M.barHeight,P=M.barYPosition}m=(E=this.drawRangeBarPaths(r({indexes:{i:s,j:k,realIndex:f},barHeight:g,barYPosition:P,zeroW:c,yDivision:d,y1:A,y2:C},T))).barWidth}else g=(E=this.drawRangeColumnPaths(r({indexes:{i:s,j:k,realIndex:f},zeroH:l,barWidth:m,xDivision:o},T))).barHeight;var O=this.barHelpers.drawGoalLine({barXPosition:E.barXPosition,barYPosition:P,goalX:E.goalX,goalY:E.goalY,barHeight:g,barWidth:m});O&&y.add(O),h=E.y,u=E.x;var z=this.barHelpers.getPathFillColor(e,s,k,f),R=i.globals.stroke.colors[f];this.renderSeries({realIndex:f,pathFill:z,lineFill:R,j:k,i:s,x:u,y:h,y1:A,y2:C,pathFrom:E.pathFrom,pathTo:E.pathTo,strokeWidth:S,elSeries:p,series:e,barHeight:g,barYPosition:P,barWidth:m,elDataLabelsWrap:b,elGoalsMarkers:y,visibleSeries:this.visibleI,type:"rangebar"})}a.add(p)}return a}},{key:"detectOverlappingBars",value:function(e){var t=e.i,i=e.j,n=e.barYPosition,a=e.srty,r=e.barHeight,s=e.yDivision,o=e.initPositions,l=this.w,c=[],u=l.config.series[t].data[i].rangeName,h=l.config.series[t].data[i].x,d=l.globals.labels.indexOf(h),f=l.globals.seriesRangeBar[t].findIndex((function(e){return e.x===h&&e.overlaps.length>0}));return n=l.config.plotOptions.bar.rangeBarGroupRows?a+s*d:a+r*this.visibleI+s*d,f>-1&&!l.config.plotOptions.bar.rangeBarOverlap&&(c=l.globals.seriesRangeBar[t][f].overlaps).indexOf(u)>-1&&(n=(r=o.barHeight/c.length)*this.visibleI+s*(100-parseInt(this.barOptions.barHeight,10))/100/2+r*(this.visibleI+c.indexOf(u))+s*d),{barYPosition:n,barHeight:r}}},{key:"drawRangeColumnPaths",value:function(e){var t=e.indexes,i=e.x;e.strokeWidth;var n=e.xDivision,a=e.barWidth,r=e.zeroH,s=this.w,o=t.i,l=t.j,c=this.yRatio[this.yaxisIndex],u=t.realIndex,h=this.getRangeValue(u,l),d=Math.min(h.start,h.end),f=Math.max(h.start,h.end);s.globals.isXNumeric&&(i=(s.globals.seriesX[o][l]-s.globals.minX)/this.xRatio-a/2);var p=i+a*this.visibleI;void 0===this.series[o][l]||null===this.series[o][l]?d=r:(d=r-d/c,f=r-f/c);var g=Math.abs(f-d),m=this.barHelpers.getColumnPaths({barXPosition:p,barWidth:a,y1:d,y2:f,strokeWidth:this.strokeWidth,series:this.seriesRangeEnd,realIndex:t.realIndex,i:u,j:l,w:s});return s.globals.isXNumeric||(i+=n),{pathTo:m.pathTo,pathFrom:m.pathFrom,barHeight:g,x:i,y:f,goalY:this.barHelpers.getGoalValues("y",null,r,o,l),barXPosition:p}}},{key:"drawRangeBarPaths",value:function(e){var t=e.indexes,i=e.y,n=e.y1,a=e.y2,r=e.yDivision,s=e.barHeight,o=e.barYPosition,l=e.zeroW,c=this.w,u=l+n/this.invertedYRatio,h=l+a/this.invertedYRatio,d=Math.abs(h-u),f=this.barHelpers.getBarpaths({barYPosition:o,barHeight:s,x1:u,x2:h,strokeWidth:this.strokeWidth,series:this.seriesRangeEnd,i:t.realIndex,realIndex:t.realIndex,j:t.j,w:c});return c.globals.isXNumeric||(i+=r),{pathTo:f.pathTo,pathFrom:f.pathFrom,barWidth:d,x:h,goalX:this.barHelpers.getGoalValues("x",l,null,t.realIndex,t.j),y:i}}},{key:"getRangeValue",value:function(e,t){var i=this.w;return{start:i.globals.seriesRangeStart[e][t],end:i.globals.seriesRangeEnd[e][t]}}},{key:"getTooltipValues",value:function(e){var t=e.ctx,i=e.seriesIndex,n=e.dataPointIndex,a=e.y1,r=e.y2,s=e.w,o=s.globals.seriesRangeStart[i][n],l=s.globals.seriesRangeEnd[i][n],c=s.globals.labels[n],u=s.config.series[i].name?s.config.series[i].name:"",h=s.config.tooltip.y.formatter,d=s.config.tooltip.y.title.formatter,f={w:s,seriesIndex:i,dataPointIndex:n,start:o,end:l};"function"==typeof d&&(u=d(u,f)),Number.isFinite(a)&&Number.isFinite(r)&&(o=a,l=r,s.config.series[i].data[n].x&&(c=s.config.series[i].data[n].x+":"),"function"==typeof h&&(c=h(c,f)));var p="",g="",m=s.globals.colors[i];if(void 0===s.config.tooltip.x.formatter)if("datetime"===s.config.xaxis.type){var v=new X(t);p=v.formatDate(v.getDate(o),s.config.tooltip.x.format),g=v.formatDate(v.getDate(l),s.config.tooltip.x.format)}else p=o,g=l;else p=s.config.tooltip.x.formatter(o),g=s.config.tooltip.x.formatter(l);return{start:o,end:l,startVal:p,endVal:g,ylabel:c,color:m,seriesName:u}}},{key:"buildCustomTooltipHTML",value:function(e){return'<div class="apexcharts-tooltip-rangebar"><div> <span class="series-name" style="color: '+e.color+'">'+(e.seriesName||"")+'</span></div><div> <span class="category">'+e.ylabel+' </span> <span class="value start-value">'+e.start+'</span> <span class="separator">-</span> <span class="value end-value">'+e.end+"</span></div></div>"}}]),i}(),H=function(){function e(t){o(this,e),this.opts=t}return c(e,[{key:"line",value:function(){return{chart:{animations:{easing:"swing"}},dataLabels:{enabled:!1},stroke:{width:5,curve:"straight"},markers:{size:0,hover:{sizeOffset:6}},xaxis:{crosshairs:{width:1}}}}},{key:"sparkline",value:function(e){return this.opts.yaxis[0].show=!1,this.opts.yaxis[0].title.text="",this.opts.yaxis[0].axisBorder.show=!1,this.opts.yaxis[0].axisTicks.show=!1,this.opts.yaxis[0].floating=!0,x.extend(e,{grid:{show:!1,padding:{left:0,right:0,top:0,bottom:0}},legend:{show:!1},xaxis:{labels:{show:!1},tooltip:{enabled:!1},axisBorder:{show:!1},axisTicks:{show:!1}},chart:{toolbar:{show:!1},zoom:{enabled:!1}},dataLabels:{enabled:!1}})}},{key:"bar",value:function(){return{chart:{stacked:!1,animations:{easing:"swing"}},plotOptions:{bar:{dataLabels:{position:"center"}}},dataLabels:{style:{colors:["#fff"]},background:{enabled:!1}},stroke:{width:0,lineCap:"round"},fill:{opacity:.85},legend:{markers:{shape:"square",radius:2,size:8}},tooltip:{shared:!1,intersect:!0},xaxis:{tooltip:{enabled:!1},tickPlacement:"between",crosshairs:{width:"barWidth",position:"back",fill:{type:"gradient"},dropShadow:{enabled:!1},stroke:{width:0}}}}}},{key:"candlestick",value:function(){var e=this;return{stroke:{width:1,colors:["#333"]},fill:{opacity:1},dataLabels:{enabled:!1},tooltip:{shared:!0,custom:function(t){var i=t.seriesIndex,n=t.dataPointIndex,a=t.w;return e._getBoxTooltip(a,i,n,["Open","High","","Low","Close"],"candlestick")}},states:{active:{filter:{type:"none"}}},xaxis:{crosshairs:{width:1}}}}},{key:"boxPlot",value:function(){var e=this;return{chart:{animations:{dynamicAnimation:{enabled:!1}}},stroke:{width:1,colors:["#24292e"]},dataLabels:{enabled:!1},tooltip:{shared:!0,custom:function(t){var i=t.seriesIndex,n=t.dataPointIndex,a=t.w;return e._getBoxTooltip(a,i,n,["Minimum","Q1","Median","Q3","Maximum"],"boxPlot")}},markers:{size:5,strokeWidth:1,strokeColors:"#111"},xaxis:{crosshairs:{width:1}}}}},{key:"rangeBar",value:function(){return{stroke:{width:0,lineCap:"square"},plotOptions:{bar:{borderRadius:0,dataLabels:{position:"center"}}},dataLabels:{enabled:!1,formatter:function(e,t){t.ctx;var i=t.seriesIndex,n=t.dataPointIndex,a=t.w,r=a.globals.seriesRangeStart[i][n];return a.globals.seriesRangeEnd[i][n]-r},background:{enabled:!1},style:{colors:["#fff"]}},tooltip:{shared:!1,followCursor:!0,custom:function(e){return e.w.config.plotOptions&&e.w.config.plotOptions.bar&&e.w.config.plotOptions.bar.horizontal?function(e){var t=new Y(e.ctx,null),i=t.getTooltipValues(e),n=i.color,a=i.seriesName,r=i.ylabel,s=i.startVal,o=i.endVal;return t.buildCustomTooltipHTML({color:n,seriesName:a,ylabel:r,start:s,end:o})}(e):function(e){var t=new Y(e.ctx,null),i=t.getTooltipValues(e),n=i.color,a=i.seriesName,r=i.ylabel,s=i.start,o=i.end;return t.buildCustomTooltipHTML({color:n,seriesName:a,ylabel:r,start:s,end:o})}(e)}},xaxis:{tickPlacement:"between",tooltip:{enabled:!1},crosshairs:{stroke:{width:0}}}}}},{key:"area",value:function(){return{stroke:{width:4},fill:{type:"gradient",gradient:{inverseColors:!1,shade:"light",type:"vertical",opacityFrom:.65,opacityTo:.5,stops:[0,100,100]}},markers:{size:0,hover:{sizeOffset:6}},tooltip:{followCursor:!1}}}},{key:"brush",value:function(e){return x.extend(e,{chart:{toolbar:{autoSelected:"selection",show:!1},zoom:{enabled:!1}},dataLabels:{enabled:!1},stroke:{width:1},tooltip:{enabled:!1},xaxis:{tooltip:{enabled:!1}}})}},{key:"stacked100",value:function(e){e.dataLabels=e.dataLabels||{},e.dataLabels.formatter=e.dataLabels.formatter||void 0;var t=e.dataLabels.formatter;return e.yaxis.forEach((function(t,i){e.yaxis[i].min=0,e.yaxis[i].max=100})),"bar"===e.chart.type&&(e.dataLabels.formatter=t||function(e){return"number"==typeof e&&e?e.toFixed(0)+"%":e}),e}},{key:"convertCatToNumeric",value:function(e){return e.xaxis.convertedCatToNumeric=!0,e}},{key:"convertCatToNumericXaxis",value:function(e,t,i){e.xaxis.type="numeric",e.xaxis.labels=e.xaxis.labels||{},e.xaxis.labels.formatter=e.xaxis.labels.formatter||function(e){return x.isNumber(e)?Math.floor(e):e};var n=e.xaxis.labels.formatter,a=e.xaxis.categories&&e.xaxis.categories.length?e.xaxis.categories:e.labels;return i&&i.length&&(a=i.map((function(e){return Array.isArray(e)?e:String(e)}))),a&&a.length&&(e.xaxis.labels.formatter=function(e){return x.isNumber(e)?n(a[Math.floor(e)-1]):n(e)}),e.xaxis.categories=[],e.labels=[],e.xaxis.tickAmount=e.xaxis.tickAmount||"dataPoints",e}},{key:"bubble",value:function(){return{dataLabels:{style:{colors:["#fff"]}},tooltip:{shared:!1,intersect:!0},xaxis:{crosshairs:{width:0}},fill:{type:"solid",gradient:{shade:"light",inverse:!0,shadeIntensity:.55,opacityFrom:.4,opacityTo:.8}}}}},{key:"scatter",value:function(){return{dataLabels:{enabled:!1},tooltip:{shared:!1,intersect:!0},markers:{size:6,strokeWidth:1,hover:{sizeOffset:2}}}}},{key:"heatmap",value:function(){return{chart:{stacked:!1},fill:{opacity:1},dataLabels:{style:{colors:["#fff"]}},stroke:{colors:["#fff"]},tooltip:{followCursor:!0,marker:{show:!1},x:{show:!1}},legend:{position:"top",markers:{shape:"square",size:10,offsetY:2}},grid:{padding:{right:20}}}}},{key:"treemap",value:function(){return{chart:{zoom:{enabled:!1}},dataLabels:{style:{fontSize:14,fontWeight:600,colors:["#fff"]}},stroke:{show:!0,width:2,colors:["#fff"]},legend:{show:!1},fill:{gradient:{stops:[0,100]}},tooltip:{followCursor:!0,x:{show:!1}},grid:{padding:{left:0,right:0}},xaxis:{crosshairs:{show:!1},tooltip:{enabled:!1}}}}},{key:"pie",value:function(){return{chart:{toolbar:{show:!1}},plotOptions:{pie:{donut:{labels:{show:!1}}}},dataLabels:{formatter:function(e){return e.toFixed(1)+"%"},style:{colors:["#fff"]},background:{enabled:!1},dropShadow:{enabled:!0}},stroke:{colors:["#fff"]},fill:{opacity:1,gradient:{shade:"light",stops:[0,100]}},tooltip:{theme:"dark",fillSeriesColor:!0},legend:{position:"right"}}}},{key:"donut",value:function(){return{chart:{toolbar:{show:!1}},dataLabels:{formatter:function(e){return e.toFixed(1)+"%"},style:{colors:["#fff"]},background:{enabled:!1},dropShadow:{enabled:!0}},stroke:{colors:["#fff"]},fill:{opacity:1,gradient:{shade:"light",shadeIntensity:.35,stops:[80,100],opacityFrom:1,opacityTo:1}},tooltip:{theme:"dark",fillSeriesColor:!0},legend:{position:"right"}}}},{key:"polarArea",value:function(){return this.opts.yaxis[0].tickAmount=this.opts.yaxis[0].tickAmount?this.opts.yaxis[0].tickAmount:6,{chart:{toolbar:{show:!1}},dataLabels:{formatter:function(e){return e.toFixed(1)+"%"},enabled:!1},stroke:{show:!0,width:2},fill:{opacity:.7},tooltip:{theme:"dark",fillSeriesColor:!0},legend:{position:"right"}}}},{key:"radar",value:function(){return this.opts.yaxis[0].labels.offsetY=this.opts.yaxis[0].labels.offsetY?this.opts.yaxis[0].labels.offsetY:6,{dataLabels:{enabled:!1,style:{fontSize:"11px"}},stroke:{width:2},markers:{size:3,strokeWidth:1,strokeOpacity:1},fill:{opacity:.2},tooltip:{shared:!1,intersect:!0,followCursor:!0},grid:{show:!1},xaxis:{labels:{formatter:function(e){return e},style:{colors:["#a8a8a8"],fontSize:"11px"}},tooltip:{enabled:!1},crosshairs:{show:!1}}}}},{key:"radialBar",value:function(){return{chart:{animations:{dynamicAnimation:{enabled:!0,speed:800}},toolbar:{show:!1}},fill:{gradient:{shade:"dark",shadeIntensity:.4,inverseColors:!1,type:"diagonal2",opacityFrom:1,opacityTo:1,stops:[70,98,100]}},legend:{show:!1,position:"right"},tooltip:{enabled:!1,fillSeriesColor:!0}}}},{key:"_getBoxTooltip",value:function(e,t,i,n,a){var r=e.globals.seriesCandleO[t][i],s=e.globals.seriesCandleH[t][i],o=e.globals.seriesCandleM[t][i],l=e.globals.seriesCandleL[t][i],c=e.globals.seriesCandleC[t][i];return e.config.series[t].type&&e.config.series[t].type!==a?'<div class="apexcharts-custom-tooltip">\n          '.concat(e.config.series[t].name?e.config.series[t].name:"series-"+(t+1),": <strong>").concat(e.globals.series[t][i],"</strong>\n        </div>"):'<div class="apexcharts-tooltip-box apexcharts-tooltip-'.concat(e.config.chart.type,'">')+"<div>".concat(n[0],': <span class="value">')+r+"</span></div>"+"<div>".concat(n[1],': <span class="value">')+s+"</span></div>"+(o?"<div>".concat(n[2],': <span class="value">')+o+"</span></div>":"")+"<div>".concat(n[3],': <span class="value">')+l+"</span></div>"+"<div>".concat(n[4],': <span class="value">')+c+"</span></div></div>"}}]),e}(),B=function(){function e(t){o(this,e),this.opts=t}return c(e,[{key:"init",value:function(e){var t=e.responsiveOverride,i=this.opts,n=new T,a=new H(i);this.chartType=i.chart.type,"histogram"===this.chartType&&(i.chart.type="bar",i=x.extend({plotOptions:{bar:{columnWidth:"99.99%"}}},i)),i=this.extendYAxis(i),i=this.extendAnnotations(i);var r=n.init(),o={};if(i&&"object"===s(i)){var l={};l=-1!==["line","area","bar","candlestick","boxPlot","rangeBar","histogram","bubble","scatter","heatmap","treemap","pie","polarArea","donut","radar","radialBar"].indexOf(i.chart.type)?a[i.chart.type]():a.line(),i.chart.brush&&i.chart.brush.enabled&&(l=a.brush(l)),i.chart.stacked&&"100%"===i.chart.stackType&&(i=a.stacked100(i)),this.checkForDarkTheme(window.Apex),this.checkForDarkTheme(i),i.xaxis=i.xaxis||window.Apex.xaxis||{},t||(i.xaxis.convertedCatToNumeric=!1),((i=this.checkForCatToNumericXAxis(this.chartType,l,i)).chart.sparkline&&i.chart.sparkline.enabled||window.Apex.chart&&window.Apex.chart.sparkline&&window.Apex.chart.sparkline.enabled)&&(l=a.sparkline(l)),o=x.extend(r,l)}var c=x.extend(o,window.Apex);return r=x.extend(c,i),this.handleUserInputErrors(r)}},{key:"checkForCatToNumericXAxis",value:function(e,t,i){var n=new H(i),a=("bar"===e||"boxPlot"===e)&&i.plotOptions&&i.plotOptions.bar&&i.plotOptions.bar.horizontal,r="pie"===e||"polarArea"===e||"donut"===e||"radar"===e||"radialBar"===e||"heatmap"===e,s="datetime"!==i.xaxis.type&&"numeric"!==i.xaxis.type,o=i.xaxis.tickPlacement?i.xaxis.tickPlacement:t.xaxis&&t.xaxis.tickPlacement;return a||r||!s||"between"===o||(i=n.convertCatToNumeric(i)),i}},{key:"extendYAxis",value:function(e,t){var i=new T;(void 0===e.yaxis||!e.yaxis||Array.isArray(e.yaxis)&&0===e.yaxis.length)&&(e.yaxis={}),e.yaxis.constructor!==Array&&window.Apex.yaxis&&window.Apex.yaxis.constructor!==Array&&(e.yaxis=x.extend(e.yaxis,window.Apex.yaxis)),e.yaxis.constructor!==Array?e.yaxis=[x.extend(i.yAxis,e.yaxis)]:e.yaxis=x.extendArray(e.yaxis,i.yAxis);var n=!1;e.yaxis.forEach((function(e){e.logarithmic&&(n=!0)}));var a=e.series;return t&&!a&&(a=t.config.series),n&&a.length!==e.yaxis.length&&a.length&&(e.yaxis=a.map((function(t,n){if(t.name||(a[n].name="series-".concat(n+1)),e.yaxis[n])return e.yaxis[n].seriesName=a[n].name,e.yaxis[n];var r=x.extend(i.yAxis,e.yaxis[0]);return r.show=!1,r}))),n&&a.length>1&&a.length!==e.yaxis.length&&console.warn("A multi-series logarithmic chart should have equal number of series and y-axes. Please make sure to equalize both."),e}},{key:"extendAnnotations",value:function(e){return void 0===e.annotations&&(e.annotations={},e.annotations.yaxis=[],e.annotations.xaxis=[],e.annotations.points=[]),e=this.extendYAxisAnnotations(e),e=this.extendXAxisAnnotations(e),this.extendPointAnnotations(e)}},{key:"extendYAxisAnnotations",value:function(e){var t=new T;return e.annotations.yaxis=x.extendArray(void 0!==e.annotations.yaxis?e.annotations.yaxis:[],t.yAxisAnnotation),e}},{key:"extendXAxisAnnotations",value:function(e){var t=new T;return e.annotations.xaxis=x.extendArray(void 0!==e.annotations.xaxis?e.annotations.xaxis:[],t.xAxisAnnotation),e}},{key:"extendPointAnnotations",value:function(e){var t=new T;return e.annotations.points=x.extendArray(void 0!==e.annotations.points?e.annotations.points:[],t.pointAnnotation),e}},{key:"checkForDarkTheme",value:function(e){e.theme&&"dark"===e.theme.mode&&(e.tooltip||(e.tooltip={}),"light"!==e.tooltip.theme&&(e.tooltip.theme="dark"),e.chart.foreColor||(e.chart.foreColor="#f6f7f8"),e.chart.background||(e.chart.background="#424242"),e.theme.palette||(e.theme.palette="palette4"))}},{key:"handleUserInputErrors",value:function(e){var t=e;if(t.tooltip.shared&&t.tooltip.intersect)throw new Error("tooltip.shared cannot be enabled when tooltip.intersect is true. Turn off any other option by setting it to false.");if("bar"===t.chart.type&&t.plotOptions.bar.horizontal){if(t.yaxis.length>1)throw new Error("Multiple Y Axis for bars are not supported. Switch to column chart by setting plotOptions.bar.horizontal=false");t.yaxis[0].reversed&&(t.yaxis[0].opposite=!0),t.xaxis.tooltip.enabled=!1,t.yaxis[0].tooltip.enabled=!1,t.chart.zoom.enabled=!1}return"bar"!==t.chart.type&&"rangeBar"!==t.chart.type||t.tooltip.shared&&"barWidth"===t.xaxis.crosshairs.width&&t.series.length>1&&(t.xaxis.crosshairs.width="tickWidth"),"candlestick"!==t.chart.type&&"boxPlot"!==t.chart.type||t.yaxis[0].reversed&&(console.warn("Reversed y-axis in ".concat(t.chart.type," chart is not supported.")),t.yaxis[0].reversed=!1),t}}]),e}(),_=function(){function e(){o(this,e)}return c(e,[{key:"initGlobalVars",value:function(e){e.series=[],e.seriesCandleO=[],e.seriesCandleH=[],e.seriesCandleM=[],e.seriesCandleL=[],e.seriesCandleC=[],e.seriesRangeStart=[],e.seriesRangeEnd=[],e.seriesRangeBar=[],e.seriesPercent=[],e.seriesGoals=[],e.seriesX=[],e.seriesZ=[],e.seriesNames=[],e.seriesTotals=[],e.seriesLog=[],e.seriesColors=[],e.stackedSeriesTotals=[],e.seriesXvalues=[],e.seriesYvalues=[],e.labels=[],e.categoryLabels=[],e.timescaleLabels=[],e.noLabelsProvided=!1,e.resizeTimer=null,e.selectionResizeTimer=null,e.delayedElements=[],e.pointsArray=[],e.dataLabelsRects=[],e.isXNumeric=!1,e.xaxisLabelsCount=0,e.skipLastTimelinelabel=!1,e.skipFirstTimelinelabel=!1,e.isDataXYZ=!1,e.isMultiLineX=!1,e.isMultipleYAxis=!1,e.maxY=-Number.MAX_VALUE,e.minY=Number.MIN_VALUE,e.minYArr=[],e.maxYArr=[],e.maxX=-Number.MAX_VALUE,e.minX=Number.MAX_VALUE,e.initialMaxX=-Number.MAX_VALUE,e.initialMinX=Number.MAX_VALUE,e.maxDate=0,e.minDate=Number.MAX_VALUE,e.minZ=Number.MAX_VALUE,e.maxZ=-Number.MAX_VALUE,e.minXDiff=Number.MAX_VALUE,e.yAxisScale=[],e.xAxisScale=null,e.xAxisTicksPositions=[],e.yLabelsCoords=[],e.yTitleCoords=[],e.barPadForNumericAxis=0,e.padHorizontal=0,e.xRange=0,e.yRange=[],e.zRange=0,e.dataPoints=0,e.xTickAmount=0}},{key:"globalVars",value:function(e){return{chartID:null,cuid:null,events:{beforeMount:[],mounted:[],updated:[],clicked:[],selection:[],dataPointSelection:[],zoomed:[],scrolled:[]},colors:[],clientX:null,clientY:null,fill:{colors:[]},stroke:{colors:[]},dataLabels:{style:{colors:[]}},radarPolygons:{fill:{colors:[]}},markers:{colors:[],size:e.markers.size,largestSize:0},animationEnded:!1,isTouchDevice:"ontouchstart"in window||navigator.msMaxTouchPoints,isDirty:!1,isExecCalled:!1,initialConfig:null,initialSeries:[],lastXAxis:[],lastYAxis:[],columnSeries:null,labels:[],timescaleLabels:[],noLabelsProvided:!1,allSeriesCollapsed:!1,collapsedSeries:[],collapsedSeriesIndices:[],ancillaryCollapsedSeries:[],ancillaryCollapsedSeriesIndices:[],risingSeries:[],dataFormatXNumeric:!1,capturedSeriesIndex:-1,capturedDataPointIndex:-1,selectedDataPoints:[],goldenPadding:35,invalidLogScale:!1,ignoreYAxisIndexes:[],yAxisSameScaleIndices:[],maxValsInArrayIndex:0,radialSize:0,selection:void 0,zoomEnabled:"zoom"===e.chart.toolbar.autoSelected&&e.chart.toolbar.tools.zoom&&e.chart.zoom.enabled,panEnabled:"pan"===e.chart.toolbar.autoSelected&&e.chart.toolbar.tools.pan,selectionEnabled:"selection"===e.chart.toolbar.autoSelected&&e.chart.toolbar.tools.selection,yaxis:null,mousedown:!1,lastClientPosition:{},visibleXRange:void 0,yValueDecimal:0,total:0,SVGNS:"http://www.w3.org/2000/svg",svgWidth:0,svgHeight:0,noData:!1,locale:{},dom:{},memory:{methodsToExec:[]},shouldAnimate:!0,skipLastTimelinelabel:!1,skipFirstTimelinelabel:!1,delayedElements:[],axisCharts:!0,isDataXYZ:!1,resized:!1,resizeTimer:null,comboCharts:!1,dataChanged:!1,previousPaths:[],allSeriesHasEqualX:!0,pointsArray:[],dataLabelsRects:[],lastDrawnDataLabelsIndexes:[],hasNullValues:!1,easing:null,zoomed:!1,gridWidth:0,gridHeight:0,rotateXLabels:!1,defaultLabels:!1,xLabelFormatter:void 0,yLabelFormatters:[],xaxisTooltipFormatter:void 0,ttKeyFormatter:void 0,ttVal:void 0,ttZFormatter:void 0,LINE_HEIGHT_RATIO:1.618,xAxisLabelsHeight:0,xAxisLabelsWidth:0,yAxisLabelsWidth:0,scaleX:1,scaleY:1,translateX:0,translateY:0,translateYAxisX:[],yAxisWidths:[],translateXAxisY:0,translateXAxisX:0,tooltip:null}}},{key:"init",value:function(e){var t=this.globalVars(e);return this.initGlobalVars(t),t.initialConfig=x.extend({},e),t.initialSeries=x.clone(e.series),t.lastXAxis=x.clone(t.initialConfig.xaxis),t.lastYAxis=x.clone(t.initialConfig.yaxis),t}}]),e}(),W=function(){function e(t){o(this,e),this.opts=t}return c(e,[{key:"init",value:function(){var e=new B(this.opts).init({responsiveOverride:!1});return{config:e,globals:(new _).init(e)}}}]),e}(),j=function(){function e(t){o(this,e),this.ctx=t,this.w=t.w,this.twoDSeries=[],this.threeDSeries=[],this.twoDSeriesX=[],this.seriesGoals=[],this.coreUtils=new A(this.ctx)}return c(e,[{key:"isMultiFormat",value:function(){return this.isFormatXY()||this.isFormat2DArray()}},{key:"isFormatXY",value:function(){var e=this.w.config.series.slice(),t=new F(this.ctx);if(this.activeSeriesIndex=t.getActiveConfigSeriesIndex(),void 0!==e[this.activeSeriesIndex].data&&e[this.activeSeriesIndex].data.length>0&&null!==e[this.activeSeriesIndex].data[0]&&void 0!==e[this.activeSeriesIndex].data[0].x&&null!==e[this.activeSeriesIndex].data[0])return!0}},{key:"isFormat2DArray",value:function(){var e=this.w.config.series.slice(),t=new F(this.ctx);if(this.activeSeriesIndex=t.getActiveConfigSeriesIndex(),void 0!==e[this.activeSeriesIndex].data&&e[this.activeSeriesIndex].data.length>0&&void 0!==e[this.activeSeriesIndex].data[0]&&null!==e[this.activeSeriesIndex].data[0]&&e[this.activeSeriesIndex].data[0].constructor===Array)return!0}},{key:"handleFormat2DArray",value:function(e,t){for(var i=this.w.config,n=this.w.globals,a="boxPlot"===i.chart.type||"boxPlot"===i.series[t].type,r=0;r<e[t].data.length;r++)if(void 0!==e[t].data[r][1]&&(Array.isArray(e[t].data[r][1])&&4===e[t].data[r][1].length&&!a?this.twoDSeries.push(x.parseNumber(e[t].data[r][1][3])):e[t].data[r].length>=5?this.twoDSeries.push(x.parseNumber(e[t].data[r][4])):this.twoDSeries.push(x.parseNumber(e[t].data[r][1])),n.dataFormatXNumeric=!0),"datetime"===i.xaxis.type){var s=new Date(e[t].data[r][0]);s=new Date(s).getTime(),this.twoDSeriesX.push(s)}else this.twoDSeriesX.push(e[t].data[r][0]);for(var o=0;o<e[t].data.length;o++)void 0!==e[t].data[o][2]&&(this.threeDSeries.push(e[t].data[o][2]),n.isDataXYZ=!0)}},{key:"handleFormatXY",value:function(e,t){var i=this.w.config,n=this.w.globals,a=new X(this.ctx),r=t;n.collapsedSeriesIndices.indexOf(t)>-1&&(r=this.activeSeriesIndex);for(var s=0;s<e[t].data.length;s++)void 0!==e[t].data[s].y&&(Array.isArray(e[t].data[s].y)?this.twoDSeries.push(x.parseNumber(e[t].data[s].y[e[t].data[s].y.length-1])):this.twoDSeries.push(x.parseNumber(e[t].data[s].y))),void 0!==e[t].data[s].goals&&Array.isArray(e[t].data[s].goals)?(void 0===this.seriesGoals[t]&&(this.seriesGoals[t]=[]),this.seriesGoals[t].push(e[t].data[s].goals)):(void 0===this.seriesGoals[t]&&(this.seriesGoals[t]=[]),this.seriesGoals[t].push(null));for(var o=0;o<e[r].data.length;o++){var l="string"==typeof e[r].data[o].x,c=Array.isArray(e[r].data[o].x),u=!c&&!!a.isValidDate(e[r].data[o].x.toString());if(l||u)if(l||i.xaxis.convertedCatToNumeric){var h=n.isBarHorizontal&&n.isRangeData;"datetime"!==i.xaxis.type||h?(this.fallbackToCategory=!0,this.twoDSeriesX.push(e[r].data[o].x)):this.twoDSeriesX.push(a.parseDate(e[r].data[o].x))}else"datetime"===i.xaxis.type?this.twoDSeriesX.push(a.parseDate(e[r].data[o].x.toString())):(n.dataFormatXNumeric=!0,n.isXNumeric=!0,this.twoDSeriesX.push(parseFloat(e[r].data[o].x)));else c?(this.fallbackToCategory=!0,this.twoDSeriesX.push(e[r].data[o].x)):(n.isXNumeric=!0,n.dataFormatXNumeric=!0,this.twoDSeriesX.push(e[r].data[o].x))}if(e[t].data[0]&&void 0!==e[t].data[0].z){for(var d=0;d<e[t].data.length;d++)this.threeDSeries.push(e[t].data[d].z);n.isDataXYZ=!0}}},{key:"handleRangeData",value:function(e,t){var i=this.w.globals,n={};return this.isFormat2DArray()?n=this.handleRangeDataFormat("array",e,t):this.isFormatXY()&&(n=this.handleRangeDataFormat("xy",e,t)),i.seriesRangeStart.push(n.start),i.seriesRangeEnd.push(n.end),i.seriesRangeBar.push(n.rangeUniques),i.seriesRangeBar.forEach((function(e,t){e&&e.forEach((function(e,t){e.y.forEach((function(t,i){for(var n=0;n<e.y.length;n++)if(i!==n){var a=t.y1,r=t.y2,s=e.y[n].y1;a<=e.y[n].y2&&s<=r&&(e.overlaps.indexOf(t.rangeName)<0&&e.overlaps.push(t.rangeName),e.overlaps.indexOf(e.y[n].rangeName)<0&&e.overlaps.push(e.y[n].rangeName))}}))}))})),n}},{key:"handleCandleStickBoxData",value:function(e,t){var i=this.w.globals,n={};return this.isFormat2DArray()?n=this.handleCandleStickBoxDataFormat("array",e,t):this.isFormatXY()&&(n=this.handleCandleStickBoxDataFormat("xy",e,t)),i.seriesCandleO[t]=n.o,i.seriesCandleH[t]=n.h,i.seriesCandleM[t]=n.m,i.seriesCandleL[t]=n.l,i.seriesCandleC[t]=n.c,n}},{key:"handleRangeDataFormat",value:function(e,t,i){var n=[],a=[],r=t[i].data.filter((function(e,t,i){return t===i.findIndex((function(t){return t.x===e.x}))})).map((function(e,t){return{x:e.x,overlaps:[],y:[]}})),s="Please provide [Start, End] values in valid format. Read more https://apexcharts.com/docs/series/#rangecharts",o=new F(this.ctx).getActiveConfigSeriesIndex();if("array"===e){if(2!==t[o].data[0][1].length)throw new Error(s);for(var l=0;l<t[i].data.length;l++)n.push(t[i].data[l][1][0]),a.push(t[i].data[l][1][1])}else if("xy"===e){if(2!==t[o].data[0].y.length)throw new Error(s);for(var c=function(e){var s=x.randomId(),o=t[i].data[e].x,l={y1:t[i].data[e].y[0],y2:t[i].data[e].y[1],rangeName:s};t[i].data[e].rangeName=s;var c=r.findIndex((function(e){return e.x===o}));r[c].y.push(l),n.push(l.y1),a.push(l.y2)},u=0;u<t[i].data.length;u++)c(u)}return{start:n,end:a,rangeUniques:r}}},{key:"handleCandleStickBoxDataFormat",value:function(e,t,i){var n=this.w,a="boxPlot"===n.config.chart.type||"boxPlot"===n.config.series[i].type,r=[],s=[],o=[],l=[],c=[];if("array"===e)if(a&&6===t[i].data[0].length||!a&&5===t[i].data[0].length)for(var u=0;u<t[i].data.length;u++)r.push(t[i].data[u][1]),s.push(t[i].data[u][2]),a?(o.push(t[i].data[u][3]),l.push(t[i].data[u][4]),c.push(t[i].data[u][5])):(l.push(t[i].data[u][3]),c.push(t[i].data[u][4]));else for(var h=0;h<t[i].data.length;h++)Array.isArray(t[i].data[h][1])&&(r.push(t[i].data[h][1][0]),s.push(t[i].data[h][1][1]),a?(o.push(t[i].data[h][1][2]),l.push(t[i].data[h][1][3]),c.push(t[i].data[h][1][4])):(l.push(t[i].data[h][1][2]),c.push(t[i].data[h][1][3])));else if("xy"===e)for(var d=0;d<t[i].data.length;d++)Array.isArray(t[i].data[d].y)&&(r.push(t[i].data[d].y[0]),s.push(t[i].data[d].y[1]),a?(o.push(t[i].data[d].y[2]),l.push(t[i].data[d].y[3]),c.push(t[i].data[d].y[4])):(l.push(t[i].data[d].y[2]),c.push(t[i].data[d].y[3])));return{o:r,h:s,m:o,l,c}}},{key:"parseDataAxisCharts",value:function(e){var t=this,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.ctx,n=this.w.config,a=this.w.globals,r=new X(i),s=n.labels.length>0?n.labels.slice():n.xaxis.categories.slice();a.isRangeBar="rangeBar"===n.chart.type&&a.isBarHorizontal;for(var o=function(){for(var e=0;e<s.length;e++)if("string"==typeof s[e]){if(!r.isValidDate(s[e]))throw new Error("You have provided invalid Date format. Please provide a valid JavaScript Date");t.twoDSeriesX.push(r.parseDate(s[e]))}else t.twoDSeriesX.push(s[e])},l=0;l<e.length;l++){if(this.twoDSeries=[],this.twoDSeriesX=[],this.threeDSeries=[],void 0===e[l].data)return void console.error("It is a possibility that you may have not included 'data' property in series.");if("rangeBar"!==n.chart.type&&"rangeArea"!==n.chart.type&&"rangeBar"!==e[l].type&&"rangeArea"!==e[l].type||(a.isRangeData=!0,this.handleRangeData(e,l)),this.isMultiFormat())this.isFormat2DArray()?this.handleFormat2DArray(e,l):this.isFormatXY()&&this.handleFormatXY(e,l),"candlestick"!==n.chart.type&&"candlestick"!==e[l].type&&"boxPlot"!==n.chart.type&&"boxPlot"!==e[l].type||this.handleCandleStickBoxData(e,l),a.series.push(this.twoDSeries),a.labels.push(this.twoDSeriesX),a.seriesX.push(this.twoDSeriesX),a.seriesGoals=this.seriesGoals,l!==this.activeSeriesIndex||this.fallbackToCategory||(a.isXNumeric=!0);else{"datetime"===n.xaxis.type?(a.isXNumeric=!0,o(),a.seriesX.push(this.twoDSeriesX)):"numeric"===n.xaxis.type&&(a.isXNumeric=!0,s.length>0&&(this.twoDSeriesX=s,a.seriesX.push(this.twoDSeriesX))),a.labels.push(this.twoDSeriesX);var c=e[l].data.map((function(e){return x.parseNumber(e)}));a.series.push(c)}a.seriesZ.push(this.threeDSeries),void 0!==e[l].name?a.seriesNames.push(e[l].name):a.seriesNames.push("series-"+parseInt(l+1,10)),void 0!==e[l].color?a.seriesColors.push(e[l].color):a.seriesColors.push(void 0)}return this.w}},{key:"parseDataNonAxisCharts",value:function(e){var t=this.w.globals,i=this.w.config;t.series=e.slice(),t.seriesNames=i.labels.slice();for(var n=0;n<t.series.length;n++)void 0===t.seriesNames[n]&&t.seriesNames.push("series-"+(n+1));return this.w}},{key:"handleExternalLabelsData",value:function(e){var t=this.w.config,i=this.w.globals;t.xaxis.categories.length>0?i.labels=t.xaxis.categories:t.labels.length>0?i.labels=t.labels.slice():this.fallbackToCategory?(i.labels=i.labels[0],i.seriesRangeBar.length&&(i.seriesRangeBar.map((function(e){e.forEach((function(e){i.labels.indexOf(e.x)<0&&e.x&&i.labels.push(e.x)}))})),i.labels=i.labels.filter((function(e,t,i){return i.indexOf(e)===t}))),t.xaxis.convertedCatToNumeric&&(new H(t).convertCatToNumericXaxis(t,this.ctx,i.seriesX[0]),this._generateExternalLabels(e))):this._generateExternalLabels(e)}},{key:"_generateExternalLabels",value:function(e){var t=this.w.globals,i=this.w.config,n=[];if(t.axisCharts){if(t.series.length>0)if(this.isFormatXY())for(var a=i.series.map((function(e,t){return e.data.filter((function(e,t,i){return i.findIndex((function(t){return t.x===e.x}))===t}))})),r=a.reduce((function(e,t,i,n){return n[e].length>t.length?e:i}),0),s=0;s<a[r].length;s++)n.push(s+1);else for(var o=0;o<t.series[t.maxValsInArrayIndex].length;o++)n.push(o+1);t.seriesX=[];for(var l=0;l<e.length;l++)t.seriesX.push(n);t.isXNumeric=!0}if(0===n.length){n=t.axisCharts?[]:t.series.map((function(e,t){return t+1}));for(var c=0;c<e.length;c++)t.seriesX.push(n)}t.labels=n,i.xaxis.convertedCatToNumeric&&(t.categoryLabels=n.map((function(e){return i.xaxis.labels.formatter(e)}))),t.noLabelsProvided=!0}},{key:"parseData",value:function(e){var t=this.w,i=t.config,n=t.globals;if(this.excludeCollapsedSeriesInYAxis(),this.fallbackToCategory=!1,this.ctx.core.resetGlobals(),this.ctx.core.isMultipleY(),n.axisCharts?this.parseDataAxisCharts(e):this.parseDataNonAxisCharts(e),this.coreUtils.getLargestSeries(),"bar"===i.chart.type&&i.chart.stacked){var a=new F(this.ctx);n.series=a.setNullSeriesToZeroValues(n.series)}this.coreUtils.getSeriesTotals(),n.axisCharts&&this.coreUtils.getStackedSeriesTotals(),this.coreUtils.getPercentSeries(),n.dataFormatXNumeric||n.isXNumeric&&("numeric"!==i.xaxis.type||0!==i.labels.length||0!==i.xaxis.categories.length)||this.handleExternalLabelsData(e);for(var r=this.coreUtils.getCategoryLabels(n.labels),s=0;s<r.length;s++)if(Array.isArray(r[s])){n.isMultiLineX=!0;break}}},{key:"excludeCollapsedSeriesInYAxis",value:function(){var e=this,t=this.w;t.globals.ignoreYAxisIndexes=t.globals.collapsedSeries.map((function(i,n){if(e.w.globals.isMultipleYAxis&&!t.config.chart.stacked)return i.index}))}}]),e}(),V=function(){function e(t){o(this,e),this.ctx=t,this.w=t.w,this.tooltipKeyFormat="dd MMM"}return c(e,[{key:"xLabelFormat",value:function(e,t,i,n){var a=this.w;if("datetime"===a.config.xaxis.type&&void 0===a.config.xaxis.labels.formatter&&void 0===a.config.tooltip.x.formatter){var r=new X(this.ctx);return r.formatDate(r.getDate(t),a.config.tooltip.x.format)}return e(t,i,n)}},{key:"defaultGeneralFormatter",value:function(e){return Array.isArray(e)?e.map((function(e){return e})):e}},{key:"defaultYFormatter",value:function(e,t,i){var n=this.w;return x.isNumber(e)&&(e=0!==n.globals.yValueDecimal?e.toFixed(void 0!==t.decimalsInFloat?t.decimalsInFloat:n.globals.yValueDecimal):n.globals.maxYArr[i]-n.globals.minYArr[i]<5?e.toFixed(1):e.toFixed(0)),e}},{key:"setLabelFormatters",value:function(){var e=this,t=this.w;return t.globals.xaxisTooltipFormatter=function(t){return e.defaultGeneralFormatter(t)},t.globals.ttKeyFormatter=function(t){return e.defaultGeneralFormatter(t)},t.globals.ttZFormatter=function(e){return e},t.globals.legendFormatter=function(t){return e.defaultGeneralFormatter(t)},void 0!==t.config.xaxis.labels.formatter?t.globals.xLabelFormatter=t.config.xaxis.labels.formatter:t.globals.xLabelFormatter=function(e){if(x.isNumber(e)){if(!t.config.xaxis.convertedCatToNumeric&&"numeric"===t.config.xaxis.type){if(x.isNumber(t.config.xaxis.decimalsInFloat))return e.toFixed(t.config.xaxis.decimalsInFloat);var i=t.globals.maxX-t.globals.minX;return i>0&&i<100?e.toFixed(1):e.toFixed(0)}return t.globals.isBarHorizontal&&t.globals.maxY-t.globals.minYArr<4?e.toFixed(1):e.toFixed(0)}return e},"function"==typeof t.config.tooltip.x.formatter?t.globals.ttKeyFormatter=t.config.tooltip.x.formatter:t.globals.ttKeyFormatter=t.globals.xLabelFormatter,"function"==typeof t.config.xaxis.tooltip.formatter&&(t.globals.xaxisTooltipFormatter=t.config.xaxis.tooltip.formatter),(Array.isArray(t.config.tooltip.y)||void 0!==t.config.tooltip.y.formatter)&&(t.globals.ttVal=t.config.tooltip.y),void 0!==t.config.tooltip.z.formatter&&(t.globals.ttZFormatter=t.config.tooltip.z.formatter),void 0!==t.config.legend.formatter&&(t.globals.legendFormatter=t.config.legend.formatter),t.config.yaxis.forEach((function(i,n){void 0!==i.labels.formatter?t.globals.yLabelFormatters[n]=i.labels.formatter:t.globals.yLabelFormatters[n]=function(a){return t.globals.xyCharts?Array.isArray(a)?a.map((function(t){return e.defaultYFormatter(t,i,n)})):e.defaultYFormatter(a,i,n):a}})),t.globals}},{key:"heatmapLabelFormatters",value:function(){var e=this.w;if("heatmap"===e.config.chart.type){e.globals.yAxisScale[0].result=e.globals.seriesNames.slice();var t=e.globals.seriesNames.reduce((function(e,t){return e.length>t.length?e:t}),0);e.globals.yAxisScale[0].niceMax=t,e.globals.yAxisScale[0].niceMin=t}}}]),e}(),G=function(){function e(t){o(this,e),this.ctx=t,this.w=t.w}return c(e,[{key:"getLabel",value:function(e,t,i,n){var a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[],r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"12px",s=this.w,o=void 0===e[n]?"":e[n],l=o,c=s.globals.xLabelFormatter,u=s.config.xaxis.labels.formatter,h=!1,d=new V(this.ctx),f=o;l=d.xLabelFormat(c,o,f,{i:n,dateFormatter:new X(this.ctx).formatDate,w:s}),void 0!==u&&(l=u(o,e[n],{i:n,dateFormatter:new X(this.ctx).formatDate,w:s}));var p=function(e){var i=null;return t.forEach((function(e){"month"===e.unit?i="year":"day"===e.unit?i="month":"hour"===e.unit?i="day":"minute"===e.unit&&(i="hour")})),i===e};t.length>0?(h=p(t[n].unit),i=t[n].position,l=t[n].value):"datetime"===s.config.xaxis.type&&void 0===u&&(l=""),void 0===l&&(l=""),l=Array.isArray(l)?l:l.toString();var g=new w(this.ctx),m={};m=s.globals.rotateXLabels?g.getTextRects(l,parseInt(r,10),null,"rotate(".concat(s.config.xaxis.labels.rotate," 0 0)"),!1):g.getTextRects(l,parseInt(r,10));var v=!s.config.xaxis.labels.showDuplicates&&this.ctx.timeScale;return!Array.isArray(l)&&(0===l.indexOf("NaN")||0===l.toLowerCase().indexOf("invalid")||l.toLowerCase().indexOf("infinity")>=0||a.indexOf(l)>=0&&v)&&(l=""),{x:i,text:l,textRect:m,isBold:h}}},{key:"checkLabelBasedOnTickamount",value:function(e,t,i){var n=this.w,a=n.config.xaxis.tickAmount;return"dataPoints"===a&&(a=Math.round(n.globals.gridWidth/120)),a>i||e%Math.round(i/(a+1))==0||(t.text=""),t}},{key:"checkForOverflowingLabels",value:function(e,t,i,n,a){var r=this.w;if(0===e&&r.globals.skipFirstTimelinelabel&&(t.text=""),e===i-1&&r.globals.skipLastTimelinelabel&&(t.text=""),r.config.xaxis.labels.hideOverlappingLabels&&n.length>0){var s=a[a.length-1];t.x<s.textRect.width/(r.globals.rotateXLabels?Math.abs(r.config.xaxis.labels.rotate)/12:1.01)+s.x&&(t.text="")}return t}},{key:"checkForReversedLabels",value:function(e,t){var i=this.w;return i.config.yaxis[e]&&i.config.yaxis[e].reversed&&t.reverse(),t}},{key:"isYAxisHidden",value:function(e){var t=this.w,i=new A(this.ctx);return!t.config.yaxis[e].show||!t.config.yaxis[e].showForNullSeries&&i.isSeriesNull(e)&&-1===t.globals.collapsedSeriesIndices.indexOf(e)}},{key:"getYAxisForeColor",value:function(e,t){var i=this.w;return Array.isArray(e)&&i.globals.yAxisScale[t]&&this.ctx.theme.pushExtraColors(e,i.globals.yAxisScale[t].result.length,!1),e}},{key:"drawYAxisTicks",value:function(e,t,i,n,a,r,s){var o=this.w,l=new w(this.ctx),c=o.globals.translateY;if(n.show&&t>0){!0===o.config.yaxis[a].opposite&&(e+=n.width);for(var u=t;u>=0;u--){var h=c+t/10+o.config.yaxis[a].labels.offsetY-1;o.globals.isBarHorizontal&&(h=r*u),"heatmap"===o.config.chart.type&&(h+=r/2);var d=l.drawLine(e+i.offsetX-n.width+n.offsetX,h+n.offsetY,e+i.offsetX+n.offsetX,h+n.offsetY,n.color);s.add(d),c+=r}}}}]),e}(),U=function(){function e(t){o(this,e),this.ctx=t,this.w=t.w}return c(e,[{key:"scaleSvgNode",value:function(e,t){var i=parseFloat(e.getAttributeNS(null,"width")),n=parseFloat(e.getAttributeNS(null,"height"));e.setAttributeNS(null,"width",i*t),e.setAttributeNS(null,"height",n*t),e.setAttributeNS(null,"viewBox","0 0 "+i+" "+n)}},{key:"fixSvgStringForIe11",value:function(e){if(!x.isIE11())return e.replace(/&nbsp;/g,"&#160;");var t=0,i=e.replace(/xmlns="http:\/\/www.w3.org\/2000\/svg"/g,(function(e){return 2==++t?'xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.dev"':e}));return(i=i.replace(/xmlns:NS\d+=""/g,"")).replace(/NS\d+:(\w+:\w+=")/g,"$1")}},{key:"getSvgString",value:function(e){var t=this.w.globals.dom.Paper.svg();if(1!==e){var i=this.w.globals.dom.Paper.node.cloneNode(!0);this.scaleSvgNode(i,e),t=(new XMLSerializer).serializeToString(i)}return this.fixSvgStringForIe11(t)}},{key:"cleanup",value:function(){var e=this.w,t=e.globals.dom.baseEl.getElementsByClassName("apexcharts-xcrosshairs"),i=e.globals.dom.baseEl.getElementsByClassName("apexcharts-ycrosshairs"),n=e.globals.dom.baseEl.querySelectorAll(".apexcharts-zoom-rect, .apexcharts-selection-rect");Array.prototype.forEach.call(n,(function(e){e.setAttribute("width",0)})),t&&t[0]&&(t[0].setAttribute("x",-500),t[0].setAttribute("x1",-500),t[0].setAttribute("x2",-500)),i&&i[0]&&(i[0].setAttribute("y",-100),i[0].setAttribute("y1",-100),i[0].setAttribute("y2",-100))}},{key:"svgUrl",value:function(){this.cleanup();var e=this.getSvgString(),t=new Blob([e],{type:"image/svg+xml;charset=utf-8"});return URL.createObjectURL(t)}},{key:"dataURI",value:function(e){var t=this;return new Promise((function(i){var n=t.w,a=e?e.scale||e.width/n.globals.svgWidth:1;t.cleanup();var r=document.createElement("canvas");r.width=n.globals.svgWidth*a,r.height=parseInt(n.globals.dom.elWrap.style.height,10)*a;var s="transparent"===n.config.chart.background?"#fff":n.config.chart.background,o=r.getContext("2d");o.fillStyle=s,o.fillRect(0,0,r.width*a,r.height*a);var l=t.getSvgString(a);if(window.canvg&&x.isIE11()){var c=window.canvg.Canvg.fromString(o,l,{ignoreClear:!0,ignoreDimensions:!0});c.start();var u=r.msToBlob();c.stop(),i({blob:u})}else{var h="data:image/svg+xml,"+encodeURIComponent(l),d=new Image;d.crossOrigin="anonymous",d.onload=function(){if(o.drawImage(d,0,0),r.msToBlob){var e=r.msToBlob();i({blob:e})}else{var t=r.toDataURL("image/png");i({imgURI:t})}},d.src=h}}))}},{key:"exportToSVG",value:function(){this.triggerDownload(this.svgUrl(),this.w.config.chart.toolbar.export.svg.filename,".svg")}},{key:"exportToPng",value:function(){var e=this;this.dataURI().then((function(t){var i=t.imgURI,n=t.blob;n?navigator.msSaveOrOpenBlob(n,e.w.globals.chartID+".png"):e.triggerDownload(i,e.w.config.chart.toolbar.export.png.filename,".png")}))}},{key:"exportToCSV",value:function(e){var t=this,i=e.series,n=e.columnDelimiter,a=e.lineDelimiter,r=void 0===a?"\n":a,s=this.w,o=[],l=[],c="",u=new j(this.ctx),h=new G(this.ctx),d=function(e){var i="";if(s.globals.axisCharts){if("category"===s.config.xaxis.type||s.config.xaxis.convertedCatToNumeric)if(s.globals.isBarHorizontal){var a=s.globals.yLabelFormatters[0],r=new F(t.ctx).getActiveConfigSeriesIndex();i=a(s.globals.labels[e],{seriesIndex:r,dataPointIndex:e,w:s})}else i=h.getLabel(s.globals.labels,s.globals.timescaleLabels,0,e).text;"datetime"===s.config.xaxis.type&&(s.config.xaxis.categories.length?i=s.config.xaxis.categories[e]:s.config.labels.length&&(i=s.config.labels[e]))}else i=s.config.labels[e];return Array.isArray(i)&&(i=i.join(" ")),x.isNumber(i)?i:i.split(n).join("")};o.push(s.config.chart.toolbar.export.csv.headerCategory),i.map((function(e,t){var i=e.name?e.name:"series-".concat(t);s.globals.axisCharts&&o.push(i.split(n).join("")?i.split(n).join(""):"series-".concat(t))})),s.globals.axisCharts||(o.push(s.config.chart.toolbar.export.csv.headerValue),l.push(o.join(n))),i.map((function(e,t){s.globals.axisCharts?function(e,t){if(o.length&&0===t&&l.push(o.join(n)),e.data&&e.data.length)for(var a=0;a<e.data.length;a++){o=[];var r=d(a);if(r||(u.isFormatXY()?r=i[t].data[a].x:u.isFormat2DArray()&&(r=i[t].data[a]?i[t].data[a][0]:"")),0===t){o.push((h=r,"datetime"===s.config.xaxis.type&&String(h).length>=10?s.config.chart.toolbar.export.csv.dateFormatter(r):x.isNumber(r)?r:r.split(n).join("")));for(var c=0;c<s.globals.series.length;c++)o.push(s.globals.series[c][a])}("candlestick"===s.config.chart.type||e.type&&"candlestick"===e.type)&&(o.pop(),o.push(s.globals.seriesCandleO[t][a]),o.push(s.globals.seriesCandleH[t][a]),o.push(s.globals.seriesCandleL[t][a]),o.push(s.globals.seriesCandleC[t][a])),("boxPlot"===s.config.chart.type||e.type&&"boxPlot"===e.type)&&(o.pop(),o.push(s.globals.seriesCandleO[t][a]),o.push(s.globals.seriesCandleH[t][a]),o.push(s.globals.seriesCandleM[t][a]),o.push(s.globals.seriesCandleL[t][a]),o.push(s.globals.seriesCandleC[t][a])),"rangeBar"===s.config.chart.type&&(o.pop(),o.push(s.globals.seriesRangeStart[t][a]),o.push(s.globals.seriesRangeEnd[t][a])),o.length&&l.push(o.join(n))}var h}(e,t):((o=[]).push(s.globals.labels[t].split(n).join("")),o.push(s.globals.series[t]),l.push(o.join(n)))})),c+=l.join(r),this.triggerDownload("data:text/csv; charset=utf-8,"+encodeURIComponent("\ufeff"+c),s.config.chart.toolbar.export.csv.filename,".csv")}},{key:"triggerDownload",value:function(e,t,i){var n=document.createElement("a");n.href=e,n.download=(t||this.w.globals.chartID)+i,document.body.appendChild(n),n.click(),document.body.removeChild(n)}}]),e}(),q=function(){function e(t){o(this,e),this.ctx=t,this.w=t.w;var i=this.w;this.axesUtils=new G(t),this.xaxisLabels=i.globals.labels.slice(),i.globals.timescaleLabels.length>0&&!i.globals.isBarHorizontal&&(this.xaxisLabels=i.globals.timescaleLabels.slice()),i.config.xaxis.overwriteCategories&&(this.xaxisLabels=i.config.xaxis.overwriteCategories),this.drawnLabels=[],this.drawnLabelsRects=[],"top"===i.config.xaxis.position?this.offY=0:this.offY=i.globals.gridHeight+1,this.offY=this.offY+i.config.xaxis.axisBorder.offsetY,this.isCategoryBarHorizontal="bar"===i.config.chart.type&&i.config.plotOptions.bar.horizontal,this.xaxisFontSize=i.config.xaxis.labels.style.fontSize,this.xaxisFontFamily=i.config.xaxis.labels.style.fontFamily,this.xaxisForeColors=i.config.xaxis.labels.style.colors,this.xaxisBorderWidth=i.config.xaxis.axisBorder.width,this.isCategoryBarHorizontal&&(this.xaxisBorderWidth=i.config.yaxis[0].axisBorder.width.toString()),this.xaxisBorderWidth.indexOf("%")>-1?this.xaxisBorderWidth=i.globals.gridWidth*parseInt(this.xaxisBorderWidth,10)/100:this.xaxisBorderWidth=parseInt(this.xaxisBorderWidth,10),this.xaxisBorderHeight=i.config.xaxis.axisBorder.height,this.yaxis=i.config.yaxis[0]}return c(e,[{key:"drawXaxis",value:function(){var e,t=this,i=this.w,n=new w(this.ctx),a=n.group({class:"apexcharts-xaxis",transform:"translate(".concat(i.config.xaxis.offsetX,", ").concat(i.config.xaxis.offsetY,")")}),r=n.group({class:"apexcharts-xaxis-texts-g",transform:"translate(".concat(i.globals.translateXAxisX,", ").concat(i.globals.translateXAxisY,")")});a.add(r);for(var s=i.globals.padHorizontal,o=[],l=0;l<this.xaxisLabels.length;l++)o.push(this.xaxisLabels[l]);var c=o.length;if(i.globals.isXNumeric){var u=c>1?c-1:c;e=i.globals.gridWidth/u,s=s+e/2+i.config.xaxis.labels.offsetX}else e=i.globals.gridWidth/o.length,s=s+e+i.config.xaxis.labels.offsetX;for(var h=function(a){var l=s-e/2+i.config.xaxis.labels.offsetX;0===a&&1===c&&e/2===s&&1===i.globals.dataPoints&&(l=i.globals.gridWidth/2);var u=t.axesUtils.getLabel(o,i.globals.timescaleLabels,l,a,t.drawnLabels,t.xaxisFontSize),h=28;if(i.globals.rotateXLabels&&(h=22),(u=void 0!==i.config.xaxis.tickAmount&&"dataPoints"!==i.config.xaxis.tickAmount&&"datetime"!==i.config.xaxis.type?t.axesUtils.checkLabelBasedOnTickamount(a,u,c):t.axesUtils.checkForOverflowingLabels(a,u,c,t.drawnLabels,t.drawnLabelsRects)).text&&i.globals.xaxisLabelsCount++,i.config.xaxis.labels.show){var d=n.drawText({x:u.x,y:t.offY+i.config.xaxis.labels.offsetY+h-("top"===i.config.xaxis.position?i.globals.xAxisHeight+i.config.xaxis.axisTicks.height-2:0),text:u.text,textAnchor:"middle",fontWeight:u.isBold?600:i.config.xaxis.labels.style.fontWeight,fontSize:t.xaxisFontSize,fontFamily:t.xaxisFontFamily,foreColor:Array.isArray(t.xaxisForeColors)?i.config.xaxis.convertedCatToNumeric?t.xaxisForeColors[i.globals.minX+a-1]:t.xaxisForeColors[a]:t.xaxisForeColors,isPlainText:!1,cssClass:"apexcharts-xaxis-label "+i.config.xaxis.labels.style.cssClass});r.add(d);var f=document.createElementNS(i.globals.SVGNS,"title");f.textContent=Array.isArray(u.text)?u.text.join(" "):u.text,d.node.appendChild(f),""!==u.text&&(t.drawnLabels.push(u.text),t.drawnLabelsRects.push(u))}s+=e},d=0;d<=c-1;d++)h(d);if(void 0!==i.config.xaxis.title.text){var f=n.group({class:"apexcharts-xaxis-title"}),p=n.drawText({x:i.globals.gridWidth/2+i.config.xaxis.title.offsetX,y:this.offY+parseFloat(this.xaxisFontSize)+i.globals.xAxisLabelsHeight+i.config.xaxis.title.offsetY,text:i.config.xaxis.title.text,textAnchor:"middle",fontSize:i.config.xaxis.title.style.fontSize,fontFamily:i.config.xaxis.title.style.fontFamily,fontWeight:i.config.xaxis.title.style.fontWeight,foreColor:i.config.xaxis.title.style.color,cssClass:"apexcharts-xaxis-title-text "+i.config.xaxis.title.style.cssClass});f.add(p),a.add(f)}if(i.config.xaxis.axisBorder.show){var g=i.globals.barPadForNumericAxis,m=n.drawLine(i.globals.padHorizontal+i.config.xaxis.axisBorder.offsetX-g,this.offY,this.xaxisBorderWidth+g,this.offY,i.config.xaxis.axisBorder.color,0,this.xaxisBorderHeight);a.add(m)}return a}},{key:"drawXaxisInversed",value:function(e){var t,i,n=this,a=this.w,r=new w(this.ctx),s=a.config.yaxis[0].opposite?a.globals.translateYAxisX[e]:0,o=r.group({class:"apexcharts-yaxis apexcharts-xaxis-inversed",rel:e}),l=r.group({class:"apexcharts-yaxis-texts-g apexcharts-xaxis-inversed-texts-g",transform:"translate("+s+", 0)"});o.add(l);var c=[];if(a.config.yaxis[e].show)for(var u=0;u<this.xaxisLabels.length;u++)c.push(this.xaxisLabels[u]);t=a.globals.gridHeight/c.length,i=-t/2.2;var h=a.globals.yLabelFormatters[0],d=a.config.yaxis[0].labels;if(d.show)for(var f=function(s){var o=void 0===c[s]?"":c[s];o=h(o,{seriesIndex:e,dataPointIndex:s,w:a});var u=n.axesUtils.getYAxisForeColor(d.style.colors,e),f=0;Array.isArray(o)&&(f=o.length/2*parseInt(d.style.fontSize,10));var p=r.drawText({x:d.offsetX-15,y:i+t+d.offsetY-f,text:o,textAnchor:n.yaxis.opposite?"start":"end",foreColor:Array.isArray(u)?u[s]:u,fontSize:d.style.fontSize,fontFamily:d.style.fontFamily,fontWeight:d.style.fontWeight,isPlainText:!1,cssClass:"apexcharts-yaxis-label "+d.style.cssClass});l.add(p);var g=document.createElementNS(a.globals.SVGNS,"title");if(g.textContent=Array.isArray(o)?o.join(" "):o,p.node.appendChild(g),0!==a.config.yaxis[e].labels.rotate){var m=r.rotateAroundCenter(p.node);p.node.setAttribute("transform","rotate(".concat(a.config.yaxis[e].labels.rotate," 0 ").concat(m.y,")"))}i+=t},p=0;p<=c.length-1;p++)f(p);if(void 0!==a.config.yaxis[0].title.text){var g=r.group({class:"apexcharts-yaxis-title apexcharts-xaxis-title-inversed",transform:"translate("+s+", 0)"}),m=r.drawText({x:0,y:a.globals.gridHeight/2,text:a.config.yaxis[0].title.text,textAnchor:"middle",foreColor:a.config.yaxis[0].title.style.color,fontSize:a.config.yaxis[0].title.style.fontSize,fontWeight:a.config.yaxis[0].title.style.fontWeight,fontFamily:a.config.yaxis[0].title.style.fontFamily,cssClass:"apexcharts-yaxis-title-text "+a.config.yaxis[0].title.style.cssClass});g.add(m),o.add(g)}var v=0;this.isCategoryBarHorizontal&&a.config.yaxis[0].opposite&&(v=a.globals.gridWidth);var x=a.config.xaxis.axisBorder;if(x.show){var b=r.drawLine(a.globals.padHorizontal+x.offsetX+v,1+x.offsetY,a.globals.padHorizontal+x.offsetX+v,a.globals.gridHeight+x.offsetY,x.color,0);o.add(b)}return a.config.yaxis[0].axisTicks.show&&this.axesUtils.drawYAxisTicks(v,c.length,a.config.yaxis[0].axisBorder,a.config.yaxis[0].axisTicks,0,t,o),o}},{key:"drawXaxisTicks",value:function(e,t){var i=this.w,n=e;if(!(e<0||e-2>i.globals.gridWidth)){var a=this.offY+i.config.xaxis.axisTicks.offsetY,r=a+i.config.xaxis.axisTicks.height;if("top"===i.config.xaxis.position&&(r=a-i.config.xaxis.axisTicks.height),i.config.xaxis.axisTicks.show){var s=new w(this.ctx).drawLine(e+i.config.xaxis.axisTicks.offsetX,a+i.config.xaxis.offsetY,n+i.config.xaxis.axisTicks.offsetX,r+i.config.xaxis.offsetY,i.config.xaxis.axisTicks.color);t.add(s),s.node.classList.add("apexcharts-xaxis-tick")}}}},{key:"getXAxisTicksPositions",value:function(){var e=this.w,t=[],i=this.xaxisLabels.length,n=e.globals.padHorizontal;if(e.globals.timescaleLabels.length>0)for(var a=0;a<i;a++)n=this.xaxisLabels[a].position,t.push(n);else for(var r=i,s=0;s<r;s++){var o=r;e.globals.isXNumeric&&"bar"!==e.config.chart.type&&(o-=1),n+=e.globals.gridWidth/o,t.push(n)}return t}},{key:"xAxisLabelCorrections",value:function(){var e=this.w,t=new w(this.ctx),i=e.globals.dom.baseEl.querySelector(".apexcharts-xaxis-texts-g"),n=e.globals.dom.baseEl.querySelectorAll(".apexcharts-xaxis-texts-g text"),a=e.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis-inversed text"),r=e.globals.dom.baseEl.querySelectorAll(".apexcharts-xaxis-inversed-texts-g text tspan");if(e.globals.rotateXLabels||e.config.xaxis.labels.rotateAlways)for(var s=0;s<n.length;s++){var o=t.rotateAroundCenter(n[s]);o.y=o.y-1,o.x=o.x+1,n[s].setAttribute("transform","rotate(".concat(e.config.xaxis.labels.rotate," ").concat(o.x," ").concat(o.y,")")),n[s].setAttribute("text-anchor","end"),i.setAttribute("transform","translate(0, ".concat(-10,")"));var l=n[s].childNodes;e.config.xaxis.labels.trim&&Array.prototype.forEach.call(l,(function(i){t.placeTextWithEllipsis(i,i.textContent,e.globals.xAxisLabelsHeight-("bottom"===e.config.legend.position?20:10))}))}else!function(){for(var i=e.globals.gridWidth/(e.globals.labels.length+1),a=0;a<n.length;a++){var r=n[a].childNodes;e.config.xaxis.labels.trim&&"datetime"!==e.config.xaxis.type&&Array.prototype.forEach.call(r,(function(e){t.placeTextWithEllipsis(e,e.textContent,i)}))}}();if(a.length>0){var c=a[a.length-1].getBBox(),u=a[0].getBBox();c.x<-20&&a[a.length-1].parentNode.removeChild(a[a.length-1]),u.x+u.width>e.globals.gridWidth&&!e.globals.isBarHorizontal&&a[0].parentNode.removeChild(a[0]);for(var h=0;h<r.length;h++)t.placeTextWithEllipsis(r[h],r[h].textContent,e.config.yaxis[0].labels.maxWidth-2*parseFloat(e.config.yaxis[0].title.style.fontSize)-20)}}}]),e}(),$=function(){function e(t){o(this,e),this.ctx=t,this.w=t.w;var i=this.w;this.xaxisLabels=i.globals.labels.slice(),this.axesUtils=new G(t),this.isRangeBar=i.globals.seriesRangeBar.length,i.globals.timescaleLabels.length>0&&(this.xaxisLabels=i.globals.timescaleLabels.slice())}return c(e,[{key:"drawGridArea",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=this.w,i=new w(this.ctx);null===e&&(e=i.group({class:"apexcharts-grid"}));var n=i.drawLine(t.globals.padHorizontal,1,t.globals.padHorizontal,t.globals.gridHeight,"transparent"),a=i.drawLine(t.globals.padHorizontal,t.globals.gridHeight,t.globals.gridWidth,t.globals.gridHeight,"transparent");return e.add(a),e.add(n),e}},{key:"drawGrid",value:function(){var e=null;return this.w.globals.axisCharts&&(e=this.renderGrid(),this.drawGridArea(e.el)),e}},{key:"createGridMask",value:function(){var e=this.w,t=e.globals,i=new w(this.ctx),n=Array.isArray(e.config.stroke.width)?0:e.config.stroke.width;if(Array.isArray(e.config.stroke.width)){var a=0;e.config.stroke.width.forEach((function(e){a=Math.max(a,e)})),n=a}t.dom.elGridRectMask=document.createElementNS(t.SVGNS,"clipPath"),t.dom.elGridRectMask.setAttribute("id","gridRectMask".concat(t.cuid)),t.dom.elGridRectMarkerMask=document.createElementNS(t.SVGNS,"clipPath"),t.dom.elGridRectMarkerMask.setAttribute("id","gridRectMarkerMask".concat(t.cuid)),t.dom.elForecastMask=document.createElementNS(t.SVGNS,"clipPath"),t.dom.elForecastMask.setAttribute("id","forecastMask".concat(t.cuid)),t.dom.elNonForecastMask=document.createElementNS(t.SVGNS,"clipPath"),t.dom.elNonForecastMask.setAttribute("id","nonForecastMask".concat(t.cuid));var r=e.config.chart.type,s=0,o=0;("bar"===r||"rangeBar"===r||"candlestick"===r||"boxPlot"===r||e.globals.comboBarCount>0)&&e.globals.isXNumeric&&!e.globals.isBarHorizontal&&(s=e.config.grid.padding.left,o=e.config.grid.padding.right,t.barPadForNumericAxis>s&&(s=t.barPadForNumericAxis,o=t.barPadForNumericAxis)),t.dom.elGridRect=i.drawRect(-n/2-s-2,-n/2,t.gridWidth+n+o+s+4,t.gridHeight+n,0,"#fff"),new A(this).getLargestMarkerSize();var l=e.globals.markers.largestSize+1;t.dom.elGridRectMarker=i.drawRect(2*-l,2*-l,t.gridWidth+4*l,t.gridHeight+4*l,0,"#fff"),t.dom.elGridRectMask.appendChild(t.dom.elGridRect.node),t.dom.elGridRectMarkerMask.appendChild(t.dom.elGridRectMarker.node);var c=t.dom.baseEl.querySelector("defs");c.appendChild(t.dom.elGridRectMask),c.appendChild(t.dom.elForecastMask),c.appendChild(t.dom.elNonForecastMask),c.appendChild(t.dom.elGridRectMarkerMask)}},{key:"_drawGridLines",value:function(e){var t=e.i,i=e.x1,n=e.y1,a=e.x2,r=e.y2,s=e.xCount,o=e.parent,l=this.w;0===t&&l.globals.skipFirstTimelinelabel||t===s-1&&l.globals.skipLastTimelinelabel&&!l.config.xaxis.labels.formatter||"radar"===l.config.chart.type||(l.config.grid.xaxis.lines.show&&this._drawGridLine({x1:i,y1:n,x2:a,y2:r,parent:o}),new q(this.ctx).drawXaxisTicks(i,this.elg))}},{key:"_drawGridLine",value:function(e){var t=e.x1,i=e.y1,n=e.x2,a=e.y2,r=e.parent,s=this.w,o=r.node.classList.contains("apexcharts-gridlines-horizontal"),l=s.config.grid.strokeDashArray,c=s.globals.barPadForNumericAxis,u=new w(this).drawLine(t-(o?c:0),i,n+(o?c:0),a,s.config.grid.borderColor,l);u.node.classList.add("apexcharts-gridline"),r.add(u)}},{key:"_drawGridBandRect",value:function(e){var t=e.c,i=e.x1,n=e.y1,a=e.x2,r=e.y2,s=e.type,o=this.w,l=new w(this.ctx),c=o.globals.barPadForNumericAxis;if("column"!==s||"datetime"!==o.config.xaxis.type){var u=o.config.grid[s].colors[t],h=l.drawRect(i-("row"===s?c:0),n,a+("row"===s?2*c:0),r,0,u,o.config.grid[s].opacity);this.elg.add(h),h.attr("clip-path","url(#gridRectMask".concat(o.globals.cuid,")")),h.node.classList.add("apexcharts-grid-".concat(s))}}},{key:"_drawXYLines",value:function(e){var t=this,i=e.xCount,n=e.tickAmount,a=this.w;if(a.config.grid.xaxis.lines.show||a.config.xaxis.axisTicks.show){var r,s=a.globals.padHorizontal,o=a.globals.gridHeight;a.globals.timescaleLabels.length?function(e){for(var n=e.xC,a=e.x1,r=e.y1,s=e.x2,o=e.y2,l=0;l<n;l++)a=t.xaxisLabels[l].position,s=t.xaxisLabels[l].position,t._drawGridLines({i:l,x1:a,y1:r,x2:s,y2:o,xCount:i,parent:t.elgridLinesV})}({xC:i,x1:s,y1:0,x2:r,y2:o}):(a.globals.isXNumeric&&(i=a.globals.xAxisScale.result.length),a.config.xaxis.convertedCatToNumeric&&(i=a.globals.xaxisLabelsCount),function(e){var n=e.xC,r=e.x1,s=e.y1,o=e.x2,l=e.y2;if(void 0!==a.config.xaxis.tickAmount&&"dataPoints"!==a.config.xaxis.tickAmount)a.globals.dom.baseEl.querySelectorAll(".apexcharts-text.apexcharts-xaxis-label tspan:not(:empty)").forEach((function(e,n){var a=e.getBBox();t._drawGridLines({i:n,x1:a.x+a.width/2,y1:s,x2:a.x+a.width/2,y2:l,xCount:i,parent:t.elgridLinesV})}));else for(var c=0;c<n+(a.globals.isXNumeric?0:1);c++)0===c&&1===n&&1===a.globals.dataPoints&&(o=r=a.globals.gridWidth/2),t._drawGridLines({i:c,x1:r,y1:s,x2:o,y2:l,xCount:i,parent:t.elgridLinesV}),o=r+=a.globals.gridWidth/(a.globals.isXNumeric?n-1:n)}({xC:i,x1:s,y1:0,x2:r,y2:o}))}if(a.config.grid.yaxis.lines.show){var l=0,c=0,u=a.globals.gridWidth,h=n+1;this.isRangeBar&&(h=a.globals.labels.length);for(var d=0;d<h+(this.isRangeBar?1:0);d++)this._drawGridLine({x1:0,y1:l,x2:u,y2:c,parent:this.elgridLinesH}),c=l+=a.globals.gridHeight/(this.isRangeBar?h:n)}}},{key:"_drawInvertedXYLines",value:function(e){var t=e.xCount,i=this.w;if(i.config.grid.xaxis.lines.show||i.config.xaxis.axisTicks.show)for(var n,a=i.globals.padHorizontal,r=i.globals.gridHeight,s=0;s<t+1;s++)i.config.grid.xaxis.lines.show&&this._drawGridLine({x1:a,y1:0,x2:n,y2:r,parent:this.elgridLinesV}),new q(this.ctx).drawXaxisTicks(a,this.elg),n=a=a+i.globals.gridWidth/t+.3;if(i.config.grid.yaxis.lines.show)for(var o=0,l=0,c=i.globals.gridWidth,u=0;u<i.globals.dataPoints+1;u++)this._drawGridLine({x1:0,y1:o,x2:c,y2:l,parent:this.elgridLinesH}),l=o+=i.globals.gridHeight/i.globals.dataPoints}},{key:"renderGrid",value:function(){var e=this.w,t=new w(this.ctx);this.elg=t.group({class:"apexcharts-grid"}),this.elgridLinesH=t.group({class:"apexcharts-gridlines-horizontal"}),this.elgridLinesV=t.group({class:"apexcharts-gridlines-vertical"}),this.elg.add(this.elgridLinesH),this.elg.add(this.elgridLinesV),e.config.grid.show||(this.elgridLinesV.hide(),this.elgridLinesH.hide());for(var i,n=e.globals.yAxisScale.length?e.globals.yAxisScale[0].result.length-1:5,a=0;a<e.globals.series.length&&(void 0!==e.globals.yAxisScale[a]&&(n=e.globals.yAxisScale[a].result.length-1),!(n>2));a++);return!e.globals.isBarHorizontal||this.isRangeBar?(i=this.xaxisLabels.length,this.isRangeBar&&(n=e.globals.labels.length,e.config.xaxis.tickAmount&&e.config.xaxis.labels.formatter&&(i=e.config.xaxis.tickAmount)),this._drawXYLines({xCount:i,tickAmount:n})):(i=n,n=e.globals.xTickAmount,this._drawInvertedXYLines({xCount:i,tickAmount:n})),this.drawGridBands(i,n),{el:this.elg,xAxisTickWidth:e.globals.gridWidth/i}}},{key:"drawGridBands",value:function(e,t){var i=this.w;if(void 0!==i.config.grid.row.colors&&i.config.grid.row.colors.length>0)for(var n=0,a=i.globals.gridHeight/t,r=i.globals.gridWidth,s=0,o=0;s<t;s++,o++)o>=i.config.grid.row.colors.length&&(o=0),this._drawGridBandRect({c:o,x1:0,y1:n,x2:r,y2:a,type:"row"}),n+=i.globals.gridHeight/t;if(void 0!==i.config.grid.column.colors&&i.config.grid.column.colors.length>0)for(var l=i.globals.isBarHorizontal||"category"!==i.config.xaxis.type&&!i.config.xaxis.convertedCatToNumeric?e:e-1,c=i.globals.padHorizontal,u=i.globals.padHorizontal+i.globals.gridWidth/l,h=i.globals.gridHeight,d=0,f=0;d<e;d++,f++)f>=i.config.grid.column.colors.length&&(f=0),this._drawGridBandRect({c:f,x1:c,y1:0,x2:u,y2:h,type:"column"}),c+=i.globals.gridWidth/l}}]),e}(),Z=function(){function e(t){o(this,e),this.ctx=t,this.w=t.w}return c(e,[{key:"niceScale",value:function(e,t){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:10,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4?arguments[4]:void 0,r=this.w,s=Math.abs(t-e);if("dataPoints"===(i=this._adjustTicksForSmallRange(i,n,s))&&(i=r.globals.dataPoints-1),e===Number.MIN_VALUE&&0===t||!x.isNumber(e)&&!x.isNumber(t)||e===Number.MIN_VALUE&&t===-Number.MAX_VALUE){e=0,t=i;var o=this.linearScale(e,t,i);return o}e>t?(console.warn("axis.min cannot be greater than axis.max"),t=e+.1):e===t&&(e=0===e?0:e-.5,t=0===t?2:t+.5);var l=[];s<1&&a&&("candlestick"===r.config.chart.type||"candlestick"===r.config.series[n].type||"boxPlot"===r.config.chart.type||"boxPlot"===r.config.series[n].type||r.globals.isRangeData)&&(t*=1.01);var c=i+1;c<2?c=2:c>2&&(c-=2);var u=s/c,h=Math.floor(x.log10(u)),d=Math.pow(10,h),f=Math.round(u/d);f<1&&(f=1);var p=f*d,g=p*Math.floor(e/p),m=p*Math.ceil(t/p),v=g;if(a&&s>2){for(;l.push(v),!((v+=p)>m););return{result:l,niceMin:l[0],niceMax:l[l.length-1]}}var b=e;(l=[]).push(b);for(var y=Math.abs(t-e)/i,w=0;w<=i;w++)b+=y,l.push(b);return l[l.length-2]>=t&&l.pop(),{result:l,niceMin:l[0],niceMax:l[l.length-1]}}},{key:"linearScale",value:function(e,t){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:10,n=arguments.length>3?arguments[3]:void 0,a=Math.abs(t-e);"dataPoints"===(i=this._adjustTicksForSmallRange(i,n,a))&&(i=this.w.globals.dataPoints-1);var r=a/i;i===Number.MAX_VALUE&&(i=10,r=1);for(var s=[],o=e;i>=0;)s.push(o),o+=r,i-=1;return{result:s,niceMin:s[0],niceMax:s[s.length-1]}}},{key:"logarithmicScale",value:function(e,t,i){for(var n=[],a=Math.ceil(Math.log(t)/Math.log(i))+1,r=0;r<a;r++)n.push(Math.pow(i,r));return 0===e&&n.unshift(e),{result:n,niceMin:n[0],niceMax:n[n.length-1]}}},{key:"_adjustTicksForSmallRange",value:function(e,t,i){var n=e;if(void 0!==t&&this.w.config.yaxis[t].labels.formatter&&void 0===this.w.config.yaxis[t].tickAmount){var a=this.w.config.yaxis[t].labels.formatter(1);x.isNumber(Number(a))&&!x.isFloat(a)&&(n=Math.ceil(i))}return n<e?n:e}},{key:"setYScaleForIndex",value:function(e,t,i){var n=this.w.globals,a=this.w.config,r=n.isBarHorizontal?a.xaxis:a.yaxis[e];void 0===n.yAxisScale[e]&&(n.yAxisScale[e]=[]);var s=Math.abs(i-t);if(r.logarithmic&&s<=5&&(n.invalidLogScale=!0),r.logarithmic&&s>5)n.allSeriesCollapsed=!1,n.yAxisScale[e]=this.logarithmicScale(t,i,r.logBase);else if(i!==-Number.MAX_VALUE&&x.isNumber(i))if(n.allSeriesCollapsed=!1,void 0===r.min&&void 0===r.max||r.forceNiceScale){var o=void 0===a.yaxis[e].max&&void 0===a.yaxis[e].min||a.yaxis[e].forceNiceScale;n.yAxisScale[e]=this.niceScale(t,i,r.tickAmount?r.tickAmount:s<5&&s>1?s+1:5,e,o)}else n.yAxisScale[e]=this.linearScale(t,i,r.tickAmount,e);else n.yAxisScale[e]=this.linearScale(0,5,5)}},{key:"setXScale",value:function(e,t){var i=this.w,n=i.globals,a=i.config.xaxis,r=Math.abs(t-e);return t!==-Number.MAX_VALUE&&x.isNumber(t)?n.xAxisScale=this.linearScale(e,t,a.tickAmount?a.tickAmount:r<5&&r>1?r+1:5,0):n.xAxisScale=this.linearScale(0,5,5),n.xAxisScale}},{key:"setMultipleYScales",value:function(){var e=this,t=this.w.globals,i=this.w.config,n=t.minYArr.concat([]),a=t.maxYArr.concat([]),r=[];i.yaxis.forEach((function(t,s){var o=s;i.series.forEach((function(e,i){e.name===t.seriesName&&(o=i,s!==i?r.push({index:i,similarIndex:s,alreadyExists:!0}):r.push({index:i}))}));var l=n[o],c=a[o];e.setYScaleForIndex(s,l,c)})),this.sameScaleInMultipleAxes(n,a,r)}},{key:"sameScaleInMultipleAxes",value:function(e,t,i){var n=this,a=this.w.config,r=this.w.globals,s=[];i.forEach((function(e){e.alreadyExists&&(void 0===s[e.index]&&(s[e.index]=[]),s[e.index].push(e.index),s[e.index].push(e.similarIndex))})),r.yAxisSameScaleIndices=s,s.forEach((function(e,t){s.forEach((function(i,n){var a,r;t!==n&&(a=e,r=i,a.filter((function(e){return-1!==r.indexOf(e)}))).length>0&&(s[t]=s[t].concat(s[n]))}))}));var o=s.map((function(e){return e.filter((function(t,i){return e.indexOf(t)===i}))})).map((function(e){return e.sort()}));s=s.filter((function(e){return!!e}));var l=o.slice(),c=l.map((function(e){return JSON.stringify(e)}));l=l.filter((function(e,t){return c.indexOf(JSON.stringify(e))===t}));var u=[],h=[];e.forEach((function(e,i){l.forEach((function(n,a){n.indexOf(i)>-1&&(void 0===u[a]&&(u[a]=[],h[a]=[]),u[a].push({key:i,value:e}),h[a].push({key:i,value:t[i]}))}))}));var d=Array.apply(null,Array(l.length)).map(Number.prototype.valueOf,Number.MIN_VALUE),f=Array.apply(null,Array(l.length)).map(Number.prototype.valueOf,-Number.MAX_VALUE);u.forEach((function(e,t){e.forEach((function(e,i){d[t]=Math.min(e.value,d[t])}))})),h.forEach((function(e,t){e.forEach((function(e,i){f[t]=Math.max(e.value,f[t])}))})),e.forEach((function(e,t){h.forEach((function(e,i){var s=d[i],o=f[i];a.chart.stacked&&(o=0,e.forEach((function(e,t){e.value!==-Number.MAX_VALUE&&(o+=e.value),s!==Number.MIN_VALUE&&(s+=u[i][t].value)}))),e.forEach((function(i,l){e[l].key===t&&(void 0!==a.yaxis[t].min&&(s="function"==typeof a.yaxis[t].min?a.yaxis[t].min(r.minY):a.yaxis[t].min),void 0!==a.yaxis[t].max&&(o="function"==typeof a.yaxis[t].max?a.yaxis[t].max(r.maxY):a.yaxis[t].max),n.setYScaleForIndex(t,s,o))}))}))}))}},{key:"autoScaleY",value:function(e,t,i){e||(e=this);var n=e.w;if(n.globals.isMultipleYAxis||n.globals.collapsedSeries.length)return console.warn("autoScaleYaxis is not supported in a multi-yaxis chart."),t;var a=n.globals.seriesX[0],r=n.config.chart.stacked;return t.forEach((function(e,s){for(var o=0,l=0;l<a.length;l++)if(a[l]>=i.xaxis.min){o=l;break}var c,u,h=n.globals.minYArr[s],d=n.globals.maxYArr[s],f=n.globals.stackedSeriesTotals;n.globals.series.forEach((function(s,l){var p=s[o];r?(p=f[o],c=u=p,f.forEach((function(e,t){a[t]<=i.xaxis.max&&a[t]>=i.xaxis.min&&(e>u&&null!==e&&(u=e),s[t]<c&&null!==s[t]&&(c=s[t]))}))):(c=u=p,s.forEach((function(e,t){if(a[t]<=i.xaxis.max&&a[t]>=i.xaxis.min){var r=e,s=e;n.globals.series.forEach((function(i,n){null!==e&&(r=Math.min(i[t],r),s=Math.max(i[t],s))})),s>u&&null!==s&&(u=s),r<c&&null!==r&&(c=r)}}))),void 0===c&&void 0===u&&(c=h,u=d),(u*=u<0?.9:1.1)<0&&u<d&&(u=d),(c*=c<0?1.1:.9)<0&&c>h&&(c=h),t.length>1?(t[l].min=void 0===e.min?c:e.min,t[l].max=void 0===e.max?u:e.max):(t[0].min=void 0===e.min?c:e.min,t[0].max=void 0===e.max?u:e.max)}))})),t}}]),e}(),Q=function(){function e(t){o(this,e),this.ctx=t,this.w=t.w,this.scales=new Z(t)}return c(e,[{key:"init",value:function(){this.setYRange(),this.setXRange(),this.setZRange()}},{key:"getMinYMaxY",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Number.MAX_VALUE,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-Number.MAX_VALUE,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=this.w.config,r=this.w.globals,s=-Number.MAX_VALUE,o=Number.MIN_VALUE;null===n&&(n=e+1);var l=r.series,c=l,u=l;"candlestick"===a.chart.type?(c=r.seriesCandleL,u=r.seriesCandleH):"boxPlot"===a.chart.type?(c=r.seriesCandleO,u=r.seriesCandleC):r.isRangeData&&(c=r.seriesRangeStart,u=r.seriesRangeEnd);for(var h=e;h<n;h++){r.dataPoints=Math.max(r.dataPoints,l[h].length),r.categoryLabels.length&&(r.dataPoints=r.categoryLabels.filter((function(e){return void 0!==e})).length);for(var d=0;d<r.series[h].length;d++){var f=l[h][d];null!==f&&x.isNumber(f)?(void 0!==u[h][d]&&(s=Math.max(s,u[h][d]),t=Math.min(t,u[h][d])),void 0!==c[h][d]&&(t=Math.min(t,c[h][d]),i=Math.max(i,c[h][d])),"candlestick"!==this.w.config.chart.type&&"boxPlot"!==this.w.config.chart.type||(void 0!==r.seriesCandleC[h][d]&&(s=Math.max(s,r.seriesCandleO[h][d]),s=Math.max(s,r.seriesCandleH[h][d]),s=Math.max(s,r.seriesCandleL[h][d]),s=Math.max(s,r.seriesCandleC[h][d]),"boxPlot"===this.w.config.chart.type&&(s=Math.max(s,r.seriesCandleM[h][d]))),!a.series[h].type||"candlestick"===a.series[h].type&&"boxPlot"===a.series[h].type||(s=Math.max(s,r.series[h][d]),t=Math.min(t,r.series[h][d])),i=s),r.seriesGoals[h]&&r.seriesGoals[h][d]&&Array.isArray(r.seriesGoals[h][d])&&r.seriesGoals[h][d].forEach((function(e){o!==Number.MIN_VALUE&&(o=Math.min(o,e.value),t=o),s=Math.max(s,e.value),i=s})),x.isFloat(f)&&(f=x.noExponents(f),r.yValueDecimal=Math.max(r.yValueDecimal,f.toString().split(".")[1].length)),o>c[h][d]&&c[h][d]<0&&(o=c[h][d])):r.hasNullValues=!0}}return"rangeBar"===a.chart.type&&r.seriesRangeStart.length&&r.isBarHorizontal&&(o=t),"bar"===a.chart.type&&(o<0&&s<0&&(s=0),o===Number.MIN_VALUE&&(o=0)),{minY:o,maxY:s,lowestY:t,highestY:i}}},{key:"setYRange",value:function(){var e=this.w.globals,t=this.w.config;e.maxY=-Number.MAX_VALUE,e.minY=Number.MIN_VALUE;var i=Number.MAX_VALUE;if(e.isMultipleYAxis)for(var n=0;n<e.series.length;n++){var a=this.getMinYMaxY(n,i,null,n+1);e.minYArr.push(a.minY),e.maxYArr.push(a.maxY),i=a.lowestY}var r=this.getMinYMaxY(0,i,null,e.series.length);if(e.minY=r.minY,e.maxY=r.maxY,i=r.lowestY,t.chart.stacked&&this._setStackedMinMax(),("line"===t.chart.type||"area"===t.chart.type||"candlestick"===t.chart.type||"boxPlot"===t.chart.type||"rangeBar"===t.chart.type&&!e.isBarHorizontal)&&e.minY===Number.MIN_VALUE&&i!==-Number.MAX_VALUE&&i!==e.maxY){var s=e.maxY-i;(i>=0&&i<=10||void 0!==t.yaxis[0].min||void 0!==t.yaxis[0].max)&&(s=0),e.minY=i-5*s/100,i>0&&e.minY<0&&(e.minY=0),e.maxY=e.maxY+5*s/100}return t.yaxis.forEach((function(t,i){void 0!==t.max&&("number"==typeof t.max?e.maxYArr[i]=t.max:"function"==typeof t.max&&(e.maxYArr[i]=t.max(e.isMultipleYAxis?e.maxYArr[i]:e.maxY)),e.maxY=e.maxYArr[i]),void 0!==t.min&&("number"==typeof t.min?e.minYArr[i]=t.min:"function"==typeof t.min&&(e.minYArr[i]=t.min(e.isMultipleYAxis?e.minYArr[i]===Number.MIN_VALUE?0:e.minYArr[i]:e.minY)),e.minY=e.minYArr[i])})),e.isBarHorizontal&&["min","max"].forEach((function(i){void 0!==t.xaxis[i]&&"number"==typeof t.xaxis[i]&&("min"===i?e.minY=t.xaxis[i]:e.maxY=t.xaxis[i])})),e.isMultipleYAxis?(this.scales.setMultipleYScales(),e.minY=i,e.yAxisScale.forEach((function(t,i){e.minYArr[i]=t.niceMin,e.maxYArr[i]=t.niceMax}))):(this.scales.setYScaleForIndex(0,e.minY,e.maxY),e.minY=e.yAxisScale[0].niceMin,e.maxY=e.yAxisScale[0].niceMax,e.minYArr[0]=e.yAxisScale[0].niceMin,e.maxYArr[0]=e.yAxisScale[0].niceMax),{minY:e.minY,maxY:e.maxY,minYArr:e.minYArr,maxYArr:e.maxYArr,yAxisScale:e.yAxisScale}}},{key:"setXRange",value:function(){var e=this.w.globals,t=this.w.config,i="numeric"===t.xaxis.type||"datetime"===t.xaxis.type||"category"===t.xaxis.type&&!e.noLabelsProvided||e.noLabelsProvided||e.isXNumeric;if(e.isXNumeric&&function(){for(var t=0;t<e.series.length;t++)if(e.labels[t])for(var i=0;i<e.labels[t].length;i++)null!==e.labels[t][i]&&x.isNumber(e.labels[t][i])&&(e.maxX=Math.max(e.maxX,e.labels[t][i]),e.initialMaxX=Math.max(e.maxX,e.labels[t][i]),e.minX=Math.min(e.minX,e.labels[t][i]),e.initialMinX=Math.min(e.minX,e.labels[t][i]))}(),e.noLabelsProvided&&0===t.xaxis.categories.length&&(e.maxX=e.labels[e.labels.length-1],e.initialMaxX=e.labels[e.labels.length-1],e.minX=1,e.initialMinX=1),e.isXNumeric||e.noLabelsProvided||e.dataFormatXNumeric){var n;if(void 0===t.xaxis.tickAmount?(n=Math.round(e.svgWidth/150),"numeric"===t.xaxis.type&&e.dataPoints<30&&(n=e.dataPoints-1),n>e.dataPoints&&0!==e.dataPoints&&(n=e.dataPoints-1)):"dataPoints"===t.xaxis.tickAmount?(e.series.length>1&&(n=e.series[e.maxValsInArrayIndex].length-1),e.isXNumeric&&(n=e.maxX-e.minX-1)):n=t.xaxis.tickAmount,e.xTickAmount=n,void 0!==t.xaxis.max&&"number"==typeof t.xaxis.max&&(e.maxX=t.xaxis.max),void 0!==t.xaxis.min&&"number"==typeof t.xaxis.min&&(e.minX=t.xaxis.min),void 0!==t.xaxis.range&&(e.minX=e.maxX-t.xaxis.range),e.minX!==Number.MAX_VALUE&&e.maxX!==-Number.MAX_VALUE)if(t.xaxis.convertedCatToNumeric&&!e.dataFormatXNumeric){for(var a=[],r=e.minX-1;r<e.maxX;r++)a.push(r+1);e.xAxisScale={result:a,niceMin:a[0],niceMax:a[a.length-1]}}else e.xAxisScale=this.scales.setXScale(e.minX,e.maxX);else e.xAxisScale=this.scales.linearScale(1,n,n),e.noLabelsProvided&&e.labels.length>0&&(e.xAxisScale=this.scales.linearScale(1,e.labels.length,n-1),e.seriesX=e.labels.slice());i&&(e.labels=e.xAxisScale.result.slice())}return e.isBarHorizontal&&e.labels.length&&(e.xTickAmount=e.labels.length),this._handleSingleDataPoint(),this._getMinXDiff(),{minX:e.minX,maxX:e.maxX}}},{key:"setZRange",value:function(){var e=this.w.globals;if(e.isDataXYZ)for(var t=0;t<e.series.length;t++)if(void 0!==e.seriesZ[t])for(var i=0;i<e.seriesZ[t].length;i++)null!==e.seriesZ[t][i]&&x.isNumber(e.seriesZ[t][i])&&(e.maxZ=Math.max(e.maxZ,e.seriesZ[t][i]),e.minZ=Math.min(e.minZ,e.seriesZ[t][i]))}},{key:"_handleSingleDataPoint",value:function(){var e=this.w.globals,t=this.w.config;if(e.minX===e.maxX){var i=new X(this.ctx);if("datetime"===t.xaxis.type){var n=i.getDate(e.minX);t.xaxis.labels.datetimeUTC?n.setUTCDate(n.getUTCDate()-2):n.setDate(n.getDate()-2),e.minX=new Date(n).getTime();var a=i.getDate(e.maxX);t.xaxis.labels.datetimeUTC?a.setUTCDate(a.getUTCDate()+2):a.setDate(a.getDate()+2),e.maxX=new Date(a).getTime()}else("numeric"===t.xaxis.type||"category"===t.xaxis.type&&!e.noLabelsProvided)&&(e.minX=e.minX-2,e.initialMinX=e.minX,e.maxX=e.maxX+2,e.initialMaxX=e.maxX)}}},{key:"_getMinXDiff",value:function(){var e=this.w.globals;e.isXNumeric&&e.seriesX.forEach((function(t,i){1===t.length&&t.push(e.seriesX[e.maxValsInArrayIndex][e.seriesX[e.maxValsInArrayIndex].length-1]);var n=t.slice();n.sort((function(e,t){return e-t})),n.forEach((function(t,i){if(i>0){var a=t-n[i-1];a>0&&(e.minXDiff=Math.min(a,e.minXDiff))}})),1!==e.dataPoints&&e.minXDiff!==Number.MAX_VALUE||(e.minXDiff=.5)}))}},{key:"_setStackedMinMax",value:function(){var e=this.w.globals,t=[],i=[];if(e.series.length)for(var n=0;n<e.series[e.maxValsInArrayIndex].length;n++)for(var a=0,r=0,s=0;s<e.series.length;s++)null!==e.series[s][n]&&x.isNumber(e.series[s][n])&&(e.series[s][n]>0?a=a+parseFloat(e.series[s][n])+1e-4:r+=parseFloat(e.series[s][n])),s===e.series.length-1&&(t.push(a),i.push(r));for(var o=0;o<t.length;o++)e.maxY=Math.max(e.maxY,t[o]),e.minY=Math.min(e.minY,i[o])}}]),e}(),K=function(){function e(t){o(this,e),this.ctx=t,this.w=t.w;var i=this.w;this.xaxisFontSize=i.config.xaxis.labels.style.fontSize,this.axisFontFamily=i.config.xaxis.labels.style.fontFamily,this.xaxisForeColors=i.config.xaxis.labels.style.colors,this.isCategoryBarHorizontal="bar"===i.config.chart.type&&i.config.plotOptions.bar.horizontal,this.xAxisoffX=0,"bottom"===i.config.xaxis.position&&(this.xAxisoffX=i.globals.gridHeight),this.drawnLabels=[],this.axesUtils=new G(t)}return c(e,[{key:"drawYaxis",value:function(e){var t=this,i=this.w,n=new w(this.ctx),a=i.config.yaxis[e].labels.style,r=a.fontSize,s=a.fontFamily,o=a.fontWeight,l=n.group({class:"apexcharts-yaxis",rel:e,transform:"translate("+i.globals.translateYAxisX[e]+", 0)"});if(this.axesUtils.isYAxisHidden(e))return l;var c=n.group({class:"apexcharts-yaxis-texts-g"});l.add(c);var u=i.globals.yAxisScale[e].result.length-1,h=i.globals.gridHeight/u,d=i.globals.translateY,f=i.globals.yLabelFormatters[e],p=i.globals.yAxisScale[e].result.slice();p=this.axesUtils.checkForReversedLabels(e,p);var g="";if(i.config.yaxis[e].labels.show)for(var m=function(l){var m=p[l];m=f(m,l,i);var v=i.config.yaxis[e].labels.padding;i.config.yaxis[e].opposite&&0!==i.config.yaxis.length&&(v*=-1);var x=t.axesUtils.getYAxisForeColor(a.colors,e),b=n.drawText({x:v,y:d+u/10+i.config.yaxis[e].labels.offsetY+1,text:m,textAnchor:i.config.yaxis[e].opposite?"start":"end",fontSize:r,fontFamily:s,fontWeight:o,foreColor:Array.isArray(x)?x[l]:x,isPlainText:!1,cssClass:"apexcharts-yaxis-label "+a.cssClass});l===u&&(g=b),c.add(b);var y=document.createElementNS(i.globals.SVGNS,"title");if(y.textContent=Array.isArray(m)?m.join(" "):m,b.node.appendChild(y),0!==i.config.yaxis[e].labels.rotate){var w=n.rotateAroundCenter(g.node),k=n.rotateAroundCenter(b.node);b.node.setAttribute("transform","rotate(".concat(i.config.yaxis[e].labels.rotate," ").concat(w.x," ").concat(k.y,")"))}d+=h},v=u;v>=0;v--)m(v);if(void 0!==i.config.yaxis[e].title.text){var x=n.group({class:"apexcharts-yaxis-title"}),b=0;i.config.yaxis[e].opposite&&(b=i.globals.translateYAxisX[e]);var y=n.drawText({x:b,y:i.globals.gridHeight/2+i.globals.translateY+i.config.yaxis[e].title.offsetY,text:i.config.yaxis[e].title.text,textAnchor:"end",foreColor:i.config.yaxis[e].title.style.color,fontSize:i.config.yaxis[e].title.style.fontSize,fontWeight:i.config.yaxis[e].title.style.fontWeight,fontFamily:i.config.yaxis[e].title.style.fontFamily,cssClass:"apexcharts-yaxis-title-text "+i.config.yaxis[e].title.style.cssClass});x.add(y),l.add(x)}var k=i.config.yaxis[e].axisBorder,S=31+k.offsetX;if(i.config.yaxis[e].opposite&&(S=-31-k.offsetX),k.show){var A=n.drawLine(S,i.globals.translateY+k.offsetY-2,S,i.globals.gridHeight+i.globals.translateY+k.offsetY+2,k.color,0,k.width);l.add(A)}return i.config.yaxis[e].axisTicks.show&&this.axesUtils.drawYAxisTicks(S,u,k,i.config.yaxis[e].axisTicks,e,h,l),l}},{key:"drawYaxisInversed",value:function(e){var t=this.w,i=new w(this.ctx),n=i.group({class:"apexcharts-xaxis apexcharts-yaxis-inversed"}),a=i.group({class:"apexcharts-xaxis-texts-g",transform:"translate(".concat(t.globals.translateXAxisX,", ").concat(t.globals.translateXAxisY,")")});n.add(a);var r=t.globals.yAxisScale[e].result.length-1,s=t.globals.gridWidth/r+.1,o=s+t.config.xaxis.labels.offsetX,l=t.globals.xLabelFormatter,c=t.globals.yAxisScale[e].result.slice(),u=t.globals.timescaleLabels;u.length>0&&(this.xaxisLabels=u.slice(),r=(c=u.slice()).length),c=this.axesUtils.checkForReversedLabels(e,c);var h=u.length;if(t.config.xaxis.labels.show)for(var d=h?0:r;h?d<h:d>=0;h?d++:d--){var f=c[d];f=l(f,d,t);var p=t.globals.gridWidth+t.globals.padHorizontal-(o-s+t.config.xaxis.labels.offsetX);if(u.length){var g=this.axesUtils.getLabel(c,u,p,d,this.drawnLabels,this.xaxisFontSize);p=g.x,f=g.text,this.drawnLabels.push(g.text),0===d&&t.globals.skipFirstTimelinelabel&&(f=""),d===c.length-1&&t.globals.skipLastTimelinelabel&&(f="")}var m=i.drawText({x:p,y:this.xAxisoffX+t.config.xaxis.labels.offsetY+30-("top"===t.config.xaxis.position?t.globals.xAxisHeight+t.config.xaxis.axisTicks.height-2:0),text:f,textAnchor:"middle",foreColor:Array.isArray(this.xaxisForeColors)?this.xaxisForeColors[e]:this.xaxisForeColors,fontSize:this.xaxisFontSize,fontFamily:this.xaxisFontFamily,fontWeight:t.config.xaxis.labels.style.fontWeight,isPlainText:!1,cssClass:"apexcharts-xaxis-label "+t.config.xaxis.labels.style.cssClass});a.add(m),m.tspan(f);var v=document.createElementNS(t.globals.SVGNS,"title");v.textContent=f,m.node.appendChild(v),o+=s}return this.inversedYAxisTitleText(n),this.inversedYAxisBorder(n),n}},{key:"inversedYAxisBorder",value:function(e){var t=this.w,i=new w(this.ctx),n=t.config.xaxis.axisBorder;if(n.show){var a=0;"bar"===t.config.chart.type&&t.globals.isXNumeric&&(a-=15);var r=i.drawLine(t.globals.padHorizontal+a+n.offsetX,this.xAxisoffX,t.globals.gridWidth,this.xAxisoffX,n.color,0,n.height);e.add(r)}}},{key:"inversedYAxisTitleText",value:function(e){var t=this.w,i=new w(this.ctx);if(void 0!==t.config.xaxis.title.text){var n=i.group({class:"apexcharts-xaxis-title apexcharts-yaxis-title-inversed"}),a=i.drawText({x:t.globals.gridWidth/2+t.config.xaxis.title.offsetX,y:this.xAxisoffX+parseFloat(this.xaxisFontSize)+parseFloat(t.config.xaxis.title.style.fontSize)+t.config.xaxis.title.offsetY+20,text:t.config.xaxis.title.text,textAnchor:"middle",fontSize:t.config.xaxis.title.style.fontSize,fontFamily:t.config.xaxis.title.style.fontFamily,fontWeight:t.config.xaxis.title.style.fontWeight,foreColor:t.config.xaxis.title.style.color,cssClass:"apexcharts-xaxis-title-text "+t.config.xaxis.title.style.cssClass});n.add(a),e.add(n)}}},{key:"yAxisTitleRotate",value:function(e,t){var i=this.w,n=new w(this.ctx),a={width:0,height:0},r={width:0,height:0},s=i.globals.dom.baseEl.querySelector(" .apexcharts-yaxis[rel='".concat(e,"'] .apexcharts-yaxis-texts-g"));null!==s&&(a=s.getBoundingClientRect());var o=i.globals.dom.baseEl.querySelector(".apexcharts-yaxis[rel='".concat(e,"'] .apexcharts-yaxis-title text"));if(null!==o&&(r=o.getBoundingClientRect()),null!==o){var l=this.xPaddingForYAxisTitle(e,a,r,t);o.setAttribute("x",l.xPos-(t?10:0))}if(null!==o){var c=n.rotateAroundCenter(o);o.setAttribute("transform","rotate(".concat(t?-1*i.config.yaxis[e].title.rotate:i.config.yaxis[e].title.rotate," ").concat(c.x," ").concat(c.y,")"))}}},{key:"xPaddingForYAxisTitle",value:function(e,t,i,n){var a=this.w,r=0,s=0,o=10;return void 0===a.config.yaxis[e].title.text||e<0?{xPos:s,padd:0}:(n?(s=t.width+a.config.yaxis[e].title.offsetX+i.width/2+o/2,0===(r+=1)&&(s-=o/2)):(s=-1*t.width+a.config.yaxis[e].title.offsetX+o/2+i.width/2,a.globals.isBarHorizontal&&(o=25,s=-1*t.width-a.config.yaxis[e].title.offsetX-o)),{xPos:s,padd:o})}},{key:"setYAxisXPosition",value:function(e,t){var i=this.w,n=0,a=0,r=18,s=1;i.config.yaxis.length>1&&(this.multipleYs=!0),i.config.yaxis.map((function(o,l){var c=i.globals.ignoreYAxisIndexes.indexOf(l)>-1||!o.show||o.floating||0===e[l].width,u=e[l].width+t[l].width;o.opposite?i.globals.isBarHorizontal?(a=i.globals.gridWidth+i.globals.translateX-1,i.globals.translateYAxisX[l]=a-o.labels.offsetX):(a=i.globals.gridWidth+i.globals.translateX+s,c||(s=s+u+20),i.globals.translateYAxisX[l]=a-o.labels.offsetX+20):(n=i.globals.translateX-r,c||(r=r+u+20),i.globals.translateYAxisX[l]=n+o.labels.offsetX)}))}},{key:"setYAxisTextAlignments",value:function(){var e=this.w,t=e.globals.dom.baseEl.getElementsByClassName("apexcharts-yaxis");(t=x.listToArray(t)).forEach((function(t,i){var n=e.config.yaxis[i];if(n&&void 0!==n.labels.align){var a=e.globals.dom.baseEl.querySelector(".apexcharts-yaxis[rel='".concat(i,"'] .apexcharts-yaxis-texts-g")),r=e.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis[rel='".concat(i,"'] .apexcharts-yaxis-label"));r=x.listToArray(r);var s=a.getBoundingClientRect();"left"===n.labels.align?(r.forEach((function(e,t){e.setAttribute("text-anchor","start")})),n.opposite||a.setAttribute("transform","translate(-".concat(s.width,", 0)"))):"center"===n.labels.align?(r.forEach((function(e,t){e.setAttribute("text-anchor","middle")})),a.setAttribute("transform","translate(".concat(s.width/2*(n.opposite?1:-1),", 0)"))):"right"===n.labels.align&&(r.forEach((function(e,t){e.setAttribute("text-anchor","end")})),n.opposite&&a.setAttribute("transform","translate(".concat(s.width,", 0)")))}}))}}]),e}(),J=function(){function e(t){o(this,e),this.ctx=t,this.w=t.w,this.documentEvent=x.bind(this.documentEvent,this)}return c(e,[{key:"addEventListener",value:function(e,t){var i=this.w;i.globals.events.hasOwnProperty(e)?i.globals.events[e].push(t):i.globals.events[e]=[t]}},{key:"removeEventListener",value:function(e,t){var i=this.w;if(i.globals.events.hasOwnProperty(e)){var n=i.globals.events[e].indexOf(t);-1!==n&&i.globals.events[e].splice(n,1)}}},{key:"fireEvent",value:function(e,t){var i=this.w;if(i.globals.events.hasOwnProperty(e)){t&&t.length||(t=[]);for(var n=i.globals.events[e],a=n.length,r=0;r<a;r++)n[r].apply(null,t)}}},{key:"setupEventHandlers",value:function(){var e=this,t=this.w,i=this.ctx,n=t.globals.dom.baseEl.querySelector(t.globals.chartClass);this.ctx.eventList.forEach((function(e){n.addEventListener(e,(function(e){var n=Object.assign({},t,{seriesIndex:t.globals.capturedSeriesIndex,dataPointIndex:t.globals.capturedDataPointIndex});"mousemove"===e.type||"touchmove"===e.type?"function"==typeof t.config.chart.events.mouseMove&&t.config.chart.events.mouseMove(e,i,n):"mouseleave"===e.type||"touchleave"===e.type?"function"==typeof t.config.chart.events.mouseLeave&&t.config.chart.events.mouseLeave(e,i,n):("mouseup"===e.type&&1===e.which||"touchend"===e.type)&&("function"==typeof t.config.chart.events.click&&t.config.chart.events.click(e,i,n),i.ctx.events.fireEvent("click",[e,i,n]))}),{capture:!1,passive:!0})})),this.ctx.eventList.forEach((function(i){t.globals.dom.baseEl.addEventListener(i,e.documentEvent,{passive:!0})})),this.ctx.core.setupBrushHandler()}},{key:"documentEvent",value:function(e){var t=this.w,i=e.target.className;if("click"===e.type){var n=t.globals.dom.baseEl.querySelector(".apexcharts-menu");n&&n.classList.contains("apexcharts-menu-open")&&"apexcharts-menu-icon"!==i&&n.classList.remove("apexcharts-menu-open")}t.globals.clientX="touchmove"===e.type?e.touches[0].clientX:e.clientX,t.globals.clientY="touchmove"===e.type?e.touches[0].clientY:e.clientY}}]),e}(),ee=function(){function e(t){o(this,e),this.ctx=t,this.w=t.w}return c(e,[{key:"setCurrentLocaleValues",value:function(e){var t=this.w.config.chart.locales;window.Apex.chart&&window.Apex.chart.locales&&window.Apex.chart.locales.length>0&&(t=this.w.config.chart.locales.concat(window.Apex.chart.locales));var i=t.filter((function(t){return t.name===e}))[0];if(!i)throw new Error("Wrong locale name provided. Please make sure you set the correct locale name in options");var n=x.extend(P,i);this.w.globals.locale=n.options}}]),e}(),te=function(){function e(t){o(this,e),this.ctx=t,this.w=t.w}return c(e,[{key:"drawAxis",value:function(e,t){var i,n,a=this.w.globals,r=this.w.config,s=new q(this.ctx),o=new K(this.ctx);a.axisCharts&&"radar"!==e&&(a.isBarHorizontal?(n=o.drawYaxisInversed(0),i=s.drawXaxisInversed(0),a.dom.elGraphical.add(i),a.dom.elGraphical.add(n)):(i=s.drawXaxis(),a.dom.elGraphical.add(i),r.yaxis.map((function(e,t){-1===a.ignoreYAxisIndexes.indexOf(t)&&(n=o.drawYaxis(t),a.dom.Paper.add(n))}))))}}]),e}(),ie=function(){function e(t){o(this,e),this.ctx=t,this.w=t.w}return c(e,[{key:"drawXCrosshairs",value:function(){var e=this.w,t=new w(this.ctx),i=new y(this.ctx),n=e.config.xaxis.crosshairs.fill.gradient,a=e.config.xaxis.crosshairs.dropShadow,r=e.config.xaxis.crosshairs.fill.type,s=n.colorFrom,o=n.colorTo,l=n.opacityFrom,c=n.opacityTo,u=n.stops,h=a.enabled,d=a.left,f=a.top,p=a.blur,g=a.color,m=a.opacity,v=e.config.xaxis.crosshairs.fill.color;if(e.config.xaxis.crosshairs.show){"gradient"===r&&(v=t.drawGradient("vertical",s,o,l,c,null,u,null));var b=t.drawRect();1===e.config.xaxis.crosshairs.width&&(b=t.drawLine());var k=e.globals.gridHeight;(!x.isNumber(k)||k<0)&&(k=0);var S=e.config.xaxis.crosshairs.width;(!x.isNumber(S)||S<0)&&(S=0),b.attr({class:"apexcharts-xcrosshairs",x:0,y:0,y2:k,width:S,height:k,fill:v,filter:"none","fill-opacity":e.config.xaxis.crosshairs.opacity,stroke:e.config.xaxis.crosshairs.stroke.color,"stroke-width":e.config.xaxis.crosshairs.stroke.width,"stroke-dasharray":e.config.xaxis.crosshairs.stroke.dashArray}),h&&(b=i.dropShadow(b,{left:d,top:f,blur:p,color:g,opacity:m})),e.globals.dom.elGraphical.add(b)}}},{key:"drawYCrosshairs",value:function(){var e=this.w,t=new w(this.ctx),i=e.config.yaxis[0].crosshairs,n=e.globals.barPadForNumericAxis;if(e.config.yaxis[0].crosshairs.show){var a=t.drawLine(-n,0,e.globals.gridWidth+n,0,i.stroke.color,i.stroke.dashArray,i.stroke.width);a.attr({class:"apexcharts-ycrosshairs"}),e.globals.dom.elGraphical.add(a)}var r=t.drawLine(-n,0,e.globals.gridWidth+n,0,i.stroke.color,0,0);r.attr({class:"apexcharts-ycrosshairs-hidden"}),e.globals.dom.elGraphical.add(r)}}]),e}(),ne=function(){function e(t){o(this,e),this.ctx=t,this.w=t.w}return c(e,[{key:"checkResponsiveConfig",value:function(e){var t=this,i=this.w,n=i.config;if(0!==n.responsive.length){var a=n.responsive.slice();a.sort((function(e,t){return e.breakpoint>t.breakpoint?1:t.breakpoint>e.breakpoint?-1:0})).reverse();var r=new B({}),s=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=a[0].breakpoint,s=window.innerWidth>0?window.innerWidth:screen.width;if(s>n){var o=A.extendArrayProps(r,i.globals.initialConfig,i);e=x.extend(o,e),e=x.extend(i.config,e),t.overrideResponsiveOptions(e)}else for(var l=0;l<a.length;l++)s<a[l].breakpoint&&(e=A.extendArrayProps(r,a[l].options,i),e=x.extend(i.config,e),t.overrideResponsiveOptions(e))};if(e){var o=A.extendArrayProps(r,e,i);o=x.extend(i.config,o),s(o=x.extend(o,e))}else s({})}}},{key:"overrideResponsiveOptions",value:function(e){var t=new B(e).init({responsiveOverride:!0});this.w.config=t}}]),e}(),ae=function(){function e(t){o(this,e),this.ctx=t,this.colors=[],this.w=t.w;var i=this.w;this.isColorFn=!1,this.isHeatmapDistributed="treemap"===i.config.chart.type&&i.config.plotOptions.treemap.distributed||"heatmap"===i.config.chart.type&&i.config.plotOptions.heatmap.distributed,this.isBarDistributed=i.config.plotOptions.bar.distributed&&("bar"===i.config.chart.type||"rangeBar"===i.config.chart.type)}return c(e,[{key:"init",value:function(){this.setDefaultColors()}},{key:"setDefaultColors",value:function(){var e=this,t=this.w,i=new x;if(t.globals.dom.elWrap.classList.add("apexcharts-theme-".concat(t.config.theme.mode)),void 0===t.config.colors?t.globals.colors=this.predefined():(t.globals.colors=t.config.colors,Array.isArray(t.config.colors)&&t.config.colors.length>0&&"function"==typeof t.config.colors[0]&&(t.globals.colors=t.config.series.map((function(i,n){var a=t.config.colors[n];return a||(a=t.config.colors[0]),"function"==typeof a?(e.isColorFn=!0,a({value:t.globals.axisCharts?t.globals.series[n][0]?t.globals.series[n][0]:0:t.globals.series[n],seriesIndex:n,dataPointIndex:n,w:t})):a})))),t.globals.seriesColors.map((function(e,i){e&&(t.globals.colors[i]=e)})),t.config.theme.monochrome.enabled){var n=[],a=t.globals.series.length;(this.isBarDistributed||this.isHeatmapDistributed)&&(a=t.globals.series[0].length*t.globals.series.length);for(var r=t.config.theme.monochrome.color,s=1/(a/t.config.theme.monochrome.shadeIntensity),o=t.config.theme.monochrome.shadeTo,l=0,c=0;c<a;c++){var u=void 0;"dark"===o?(u=i.shadeColor(-1*l,r),l+=s):(u=i.shadeColor(l,r),l+=s),n.push(u)}t.globals.colors=n.slice()}var h=t.globals.colors.slice();this.pushExtraColors(t.globals.colors),["fill","stroke"].forEach((function(i){void 0===t.config[i].colors?t.globals[i].colors=e.isColorFn?t.config.colors:h:t.globals[i].colors=t.config[i].colors.slice(),e.pushExtraColors(t.globals[i].colors)})),void 0===t.config.dataLabels.style.colors?t.globals.dataLabels.style.colors=h:t.globals.dataLabels.style.colors=t.config.dataLabels.style.colors.slice(),this.pushExtraColors(t.globals.dataLabels.style.colors,50),void 0===t.config.plotOptions.radar.polygons.fill.colors?t.globals.radarPolygons.fill.colors=["dark"===t.config.theme.mode?"#424242":"none"]:t.globals.radarPolygons.fill.colors=t.config.plotOptions.radar.polygons.fill.colors.slice(),this.pushExtraColors(t.globals.radarPolygons.fill.colors,20),void 0===t.config.markers.colors?t.globals.markers.colors=h:t.globals.markers.colors=t.config.markers.colors.slice(),this.pushExtraColors(t.globals.markers.colors)}},{key:"pushExtraColors",value:function(e,t){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,n=this.w,a=t||n.globals.series.length;if(null===i&&(i=this.isBarDistributed||this.isHeatmapDistributed||"heatmap"===n.config.chart.type&&n.config.plotOptions.heatmap.colorScale.inverse),i&&n.globals.series.length&&(a=n.globals.series[n.globals.maxValsInArrayIndex].length*n.globals.series.length),e.length<a)for(var r=a-e.length,s=0;s<r;s++)e.push(e[s])}},{key:"updateThemeOptions",value:function(e){e.chart=e.chart||{},e.tooltip=e.tooltip||{};var t=e.theme.mode||"light",i=e.theme.palette?e.theme.palette:"dark"===t?"palette4":"palette1",n=e.chart.foreColor?e.chart.foreColor:"dark"===t?"#f6f7f8":"#373d3f";return e.tooltip.theme=t,e.chart.foreColor=n,e.theme.palette=i,e}},{key:"predefined",value:function(){switch(this.w.config.theme.palette){case"palette1":default:this.colors=["#008FFB","#00E396","#FEB019","#FF4560","#775DD0"];break;case"palette2":this.colors=["#3f51b5","#03a9f4","#4caf50","#f9ce1d","#FF9800"];break;case"palette3":this.colors=["#33b2df","#546E7A","#d4526e","#13d8aa","#A5978B"];break;case"palette4":this.colors=["#4ecdc4","#c7f464","#81D4FA","#fd6a6a","#546E7A"];break;case"palette5":this.colors=["#2b908f","#f9a3a4","#90ee7e","#fa4443","#69d2e7"];break;case"palette6":this.colors=["#449DD1","#F86624","#EA3546","#662E9B","#C5D86D"];break;case"palette7":this.colors=["#D7263D","#1B998B","#2E294E","#F46036","#E2C044"];break;case"palette8":this.colors=["#662E9B","#F86624","#F9C80E","#EA3546","#43BCCD"];break;case"palette9":this.colors=["#5C4742","#A5978B","#8D5B4C","#5A2A27","#C4BBAF"];break;case"palette10":this.colors=["#A300D6","#7D02EB","#5653FE","#2983FF","#00B1F2"]}return this.colors}}]),e}(),re=function(){function e(t){o(this,e),this.ctx=t,this.w=t.w}return c(e,[{key:"draw",value:function(){this.drawTitleSubtitle("title"),this.drawTitleSubtitle("subtitle")}},{key:"drawTitleSubtitle",value:function(e){var t=this.w,i="title"===e?t.config.title:t.config.subtitle,n=t.globals.svgWidth/2,a=i.offsetY,r="middle";if("left"===i.align?(n=10,r="start"):"right"===i.align&&(n=t.globals.svgWidth-10,r="end"),n+=i.offsetX,a=a+parseInt(i.style.fontSize,10)+i.margin/2,void 0!==i.text){var s=new w(this.ctx).drawText({x:n,y:a,text:i.text,textAnchor:r,fontSize:i.style.fontSize,fontFamily:i.style.fontFamily,fontWeight:i.style.fontWeight,foreColor:i.style.color,opacity:1});s.node.setAttribute("class","apexcharts-".concat(e,"-text")),t.globals.dom.Paper.add(s)}}}]),e}(),se=function(){function e(t){o(this,e),this.w=t.w,this.dCtx=t}return c(e,[{key:"getTitleSubtitleCoords",value:function(e){var t=this.w,i=0,n=0,a="title"===e?t.config.title.floating:t.config.subtitle.floating,r=t.globals.dom.baseEl.querySelector(".apexcharts-".concat(e,"-text"));if(null!==r&&!a){var s=r.getBoundingClientRect();i=s.width,n=t.globals.axisCharts?s.height+5:s.height}return{width:i,height:n}}},{key:"getLegendsRect",value:function(){var e=this.w,t=e.globals.dom.baseEl.querySelector(".apexcharts-legend");e.config.legend.height||"top"!==e.config.legend.position&&"bottom"!==e.config.legend.position||(t.style.maxHeight=e.globals.svgHeight/2+"px");var i=Object.assign({},x.getBoundingClientRect(t));return null!==t&&!e.config.legend.floating&&e.config.legend.show?this.dCtx.lgRect={x:i.x,y:i.y,height:i.height,width:0===i.height?0:i.width}:this.dCtx.lgRect={x:0,y:0,height:0,width:0},"left"!==e.config.legend.position&&"right"!==e.config.legend.position||1.5*this.dCtx.lgRect.width>e.globals.svgWidth&&(this.dCtx.lgRect.width=e.globals.svgWidth/1.5),this.dCtx.lgRect}},{key:"getLargestStringFromMultiArr",value:function(e,t){var i=e;if(this.w.globals.isMultiLineX){var n=t.map((function(e,t){return Array.isArray(e)?e.length:1})),a=Math.max.apply(Math,m(n));i=t[n.indexOf(a)]}return i}}]),e}(),oe=function(){function e(t){o(this,e),this.w=t.w,this.dCtx=t}return c(e,[{key:"getxAxisLabelsCoords",value:function(){var e,t=this.w,i=t.globals.labels.slice();if(t.config.xaxis.convertedCatToNumeric&&0===i.length&&(i=t.globals.categoryLabels),t.globals.timescaleLabels.length>0){var n=this.getxAxisTimeScaleLabelsCoords();e={width:n.width,height:n.height},t.globals.rotateXLabels=!1}else{this.dCtx.lgWidthForSideLegends="left"!==t.config.legend.position&&"right"!==t.config.legend.position||t.config.legend.floating?0:this.dCtx.lgRect.width;var a=t.globals.xLabelFormatter,r=x.getLargestStringFromArr(i),s=this.dCtx.dimHelpers.getLargestStringFromMultiArr(r,i);t.globals.isBarHorizontal&&(s=r=t.globals.yAxisScale[0].result.reduce((function(e,t){return e.length>t.length?e:t}),0));var o=new V(this.dCtx.ctx),l=r;r=o.xLabelFormat(a,r,l,{i:void 0,dateFormatter:new X(this.dCtx.ctx).formatDate,w:t}),s=o.xLabelFormat(a,s,l,{i:void 0,dateFormatter:new X(this.dCtx.ctx).formatDate,w:t}),(t.config.xaxis.convertedCatToNumeric&&void 0===r||""===String(r).trim())&&(s=r="1");var c=new w(this.dCtx.ctx),u=c.getTextRects(r,t.config.xaxis.labels.style.fontSize),h=u;if(r!==s&&(h=c.getTextRects(s,t.config.xaxis.labels.style.fontSize)),(e={width:u.width>=h.width?u.width:h.width,height:u.height>=h.height?u.height:h.height}).width*i.length>t.globals.svgWidth-this.dCtx.lgWidthForSideLegends-this.dCtx.yAxisWidth-this.dCtx.gridPad.left-this.dCtx.gridPad.right&&0!==t.config.xaxis.labels.rotate||t.config.xaxis.labels.rotateAlways){if(!t.globals.isBarHorizontal){t.globals.rotateXLabels=!0;var d=function(e){return c.getTextRects(e,t.config.xaxis.labels.style.fontSize,t.config.xaxis.labels.style.fontFamily,"rotate(".concat(t.config.xaxis.labels.rotate," 0 0)"),!1)};u=d(r),r!==s&&(h=d(s)),e.height=(u.height>h.height?u.height:h.height)/1.5,e.width=u.width>h.width?u.width:h.width}}else t.globals.rotateXLabels=!1}return t.config.xaxis.labels.show||(e={width:0,height:0}),{width:e.width,height:e.height}}},{key:"getxAxisTitleCoords",value:function(){var e=this.w,t=0,i=0;if(void 0!==e.config.xaxis.title.text){var n=new w(this.dCtx.ctx).getTextRects(e.config.xaxis.title.text,e.config.xaxis.title.style.fontSize);t=n.width,i=n.height}return{width:t,height:i}}},{key:"getxAxisTimeScaleLabelsCoords",value:function(){var e,t=this.w;this.dCtx.timescaleLabels=t.globals.timescaleLabels.slice();var i=this.dCtx.timescaleLabels.map((function(e){return e.value})),n=i.reduce((function(e,t){return void 0===e?(console.error("You have possibly supplied invalid Date format. Please supply a valid JavaScript Date"),0):e.length>t.length?e:t}),0);return 1.05*(e=new w(this.dCtx.ctx).getTextRects(n,t.config.xaxis.labels.style.fontSize)).width*i.length>t.globals.gridWidth&&0!==t.config.xaxis.labels.rotate&&(t.globals.overlappingXLabels=!0),e}},{key:"additionalPaddingXLabels",value:function(e){var t=this,i=this.w,n=i.globals,a=i.config,r=a.xaxis.type,s=e.width;n.skipLastTimelinelabel=!1,n.skipFirstTimelinelabel=!1;var o=i.config.yaxis[0].opposite&&i.globals.isBarHorizontal,l=function(e,o){(function(e){return-1!==n.collapsedSeriesIndices.indexOf(e)})(o)||function(e){if(t.dCtx.timescaleLabels&&t.dCtx.timescaleLabels.length){var o=t.dCtx.timescaleLabels[0],l=t.dCtx.timescaleLabels[t.dCtx.timescaleLabels.length-1].position+s/1.75-t.dCtx.yAxisWidthRight,c=o.position-s/1.75+t.dCtx.yAxisWidthLeft,u="right"===i.config.legend.position&&t.dCtx.lgRect.width>0?t.dCtx.lgRect.width:0;l>n.svgWidth-n.translateX-u&&(n.skipLastTimelinelabel=!0),c<-(e.show&&!e.floating||"bar"!==a.chart.type&&"candlestick"!==a.chart.type&&"rangeBar"!==a.chart.type&&"boxPlot"!==a.chart.type?10:s/1.75)&&(n.skipFirstTimelinelabel=!0)}else"datetime"===r?t.dCtx.gridPad.right<s&&!n.rotateXLabels&&(n.skipLastTimelinelabel=!0):"datetime"!==r&&t.dCtx.gridPad.right<s/2-t.dCtx.yAxisWidthRight&&!n.rotateXLabels&&!i.config.xaxis.labels.trim&&("between"!==i.config.xaxis.tickPlacement||i.globals.isBarHorizontal)&&(t.dCtx.xPadRight=s/2+1)}(e)};a.yaxis.forEach((function(e,i){o?(t.dCtx.gridPad.left<s&&(t.dCtx.xPadLeft=s/2+1),t.dCtx.xPadRight=s/2+1):l(e,i)}))}}]),e}(),le=function(){function e(t){o(this,e),this.w=t.w,this.dCtx=t}return c(e,[{key:"getyAxisLabelsCoords",value:function(){var e=this,t=this.w,i=[],n=10,a=new G(this.dCtx.ctx);return t.config.yaxis.map((function(r,s){var o=t.globals.yAxisScale[s],l=0;if(!a.isYAxisHidden(s)&&r.labels.show&&void 0!==r.labels.minWidth&&(l=r.labels.minWidth),!a.isYAxisHidden(s)&&r.labels.show&&o.result.length){var c=t.globals.yLabelFormatters[s],u=o.niceMin===Number.MIN_VALUE?0:o.niceMin,h=String(u).length>String(o.niceMax).length?u:o.niceMax,d=c(h,{seriesIndex:s,dataPointIndex:-1,w:t}),f=d;if(void 0!==d&&0!==d.length||(d=h),t.globals.isBarHorizontal){n=0;var p=t.globals.labels.slice();d=c(d=x.getLargestStringFromArr(p),{seriesIndex:s,dataPointIndex:-1,w:t}),f=e.dCtx.dimHelpers.getLargestStringFromMultiArr(d,p)}var g=new w(e.dCtx.ctx),m="rotate(".concat(r.labels.rotate," 0 0)"),v=g.getTextRects(d,r.labels.style.fontSize,r.labels.style.fontFamily,m,!1),b=v;d!==f&&(b=g.getTextRects(f,r.labels.style.fontSize,r.labels.style.fontFamily,m,!1)),i.push({width:(l>b.width||l>v.width?l:b.width>v.width?b.width:v.width)+n,height:b.height>v.height?b.height:v.height})}else i.push({width:0,height:0})})),i}},{key:"getyAxisTitleCoords",value:function(){var e=this,t=this.w,i=[];return t.config.yaxis.map((function(t,n){if(t.show&&void 0!==t.title.text){var a=new w(e.dCtx.ctx),r="rotate(".concat(t.title.rotate," 0 0)"),s=a.getTextRects(t.title.text,t.title.style.fontSize,t.title.style.fontFamily,r,!1);i.push({width:s.width,height:s.height})}else i.push({width:0,height:0})})),i}},{key:"getTotalYAxisWidth",value:function(){var e=this.w,t=0,i=0,n=0,a=e.globals.yAxisScale.length>1?10:0,r=new G(this.dCtx.ctx),s=function(s,o){var l=e.config.yaxis[o].floating,c=0;s.width>0&&!l?(c=s.width+a,function(t){return e.globals.ignoreYAxisIndexes.indexOf(t)>-1}(o)&&(c=c-s.width-a)):c=l||r.isYAxisHidden(o)?0:5,e.config.yaxis[o].opposite?n+=c:i+=c,t+=c};return e.globals.yLabelsCoords.map((function(e,t){s(e,t)})),e.globals.yTitleCoords.map((function(e,t){s(e,t)})),e.globals.isBarHorizontal&&!e.config.yaxis[0].floating&&(t=e.globals.yLabelsCoords[0].width+e.globals.yTitleCoords[0].width+15),this.dCtx.yAxisWidthLeft=i,this.dCtx.yAxisWidthRight=n,t}}]),e}(),ce=function(){function e(t){o(this,e),this.w=t.w,this.dCtx=t}return c(e,[{key:"gridPadForColumnsInNumericAxis",value:function(e){var t=this.w;if(t.globals.noData||t.globals.allSeriesCollapsed)return 0;var i=function(e){return"bar"===e||"rangeBar"===e||"candlestick"===e||"boxPlot"===e},n=t.config.chart.type,a=0,r=i(n)?t.config.series.length:1;if(t.globals.comboBarCount>0&&(r=t.globals.comboBarCount),t.globals.collapsedSeries.forEach((function(e){i(e.type)&&(r-=1)})),t.config.chart.stacked&&(r=1),(i(n)||t.globals.comboBarCount>0)&&t.globals.isXNumeric&&!t.globals.isBarHorizontal&&r>0){var s,o,l=Math.abs(t.globals.initialMaxX-t.globals.initialMinX);l<=3&&(l=t.globals.dataPoints),s=l/e,t.globals.minXDiff&&t.globals.minXDiff/s>0&&(o=t.globals.minXDiff/s),o>e/2&&(o/=2),(a=o/r*parseInt(t.config.plotOptions.bar.columnWidth,10)/100)<1&&(a=1),a=a/(r>1?1:1.5)+5,t.globals.barPadForNumericAxis=a}return a}},{key:"gridPadFortitleSubtitle",value:function(){var e=this,t=this.w,i=t.globals,n=this.dCtx.isSparkline||!t.globals.axisCharts?0:10;["title","subtitle"].forEach((function(i){void 0!==t.config[i].text?n+=t.config[i].margin:n+=e.dCtx.isSparkline||!t.globals.axisCharts?0:5})),!t.config.legend.show||"bottom"!==t.config.legend.position||t.config.legend.floating||t.globals.axisCharts||(n+=10);var a=this.dCtx.dimHelpers.getTitleSubtitleCoords("title"),r=this.dCtx.dimHelpers.getTitleSubtitleCoords("subtitle");i.gridHeight=i.gridHeight-a.height-r.height-n,i.translateY=i.translateY+a.height+r.height+n}},{key:"setGridXPosForDualYAxis",value:function(e,t){var i=this.w,n=new G(this.dCtx.ctx);i.config.yaxis.map((function(a,r){-1!==i.globals.ignoreYAxisIndexes.indexOf(r)||a.floating||n.isYAxisHidden(r)||(a.opposite&&(i.globals.translateX=i.globals.translateX-(t[r].width+e[r].width)-parseInt(i.config.yaxis[r].labels.style.fontSize,10)/1.2-12),i.globals.translateX<2&&(i.globals.translateX=2))}))}}]),e}(),ue=function(){function e(t){o(this,e),this.ctx=t,this.w=t.w,this.lgRect={},this.yAxisWidth=0,this.yAxisWidthLeft=0,this.yAxisWidthRight=0,this.xAxisHeight=0,this.isSparkline=this.w.config.chart.sparkline.enabled,this.dimHelpers=new se(this),this.dimYAxis=new le(this),this.dimXAxis=new oe(this),this.dimGrid=new ce(this),this.lgWidthForSideLegends=0,this.gridPad=this.w.config.grid.padding,this.xPadRight=0,this.xPadLeft=0}return c(e,[{key:"plotCoords",value:function(){var e=this.w.globals;this.lgRect=this.dimHelpers.getLegendsRect(),e.axisCharts?this.setDimensionsForAxisCharts():this.setDimensionsForNonAxisCharts(),this.dimGrid.gridPadFortitleSubtitle(),e.gridHeight=e.gridHeight-this.gridPad.top-this.gridPad.bottom,e.gridWidth=e.gridWidth-this.gridPad.left-this.gridPad.right-this.xPadRight-this.xPadLeft;var t=this.dimGrid.gridPadForColumnsInNumericAxis(e.gridWidth);e.gridWidth=e.gridWidth-2*t,e.translateX=e.translateX+this.gridPad.left+this.xPadLeft+(t>0?t+4:0),e.translateY=e.translateY+this.gridPad.top}},{key:"setDimensionsForAxisCharts",value:function(){var e=this,t=this.w,i=t.globals,n=this.dimYAxis.getyAxisLabelsCoords(),a=this.dimYAxis.getyAxisTitleCoords();t.globals.yLabelsCoords=[],t.globals.yTitleCoords=[],t.config.yaxis.map((function(e,i){t.globals.yLabelsCoords.push({width:n[i].width,index:i}),t.globals.yTitleCoords.push({width:a[i].width,index:i})})),this.yAxisWidth=this.dimYAxis.getTotalYAxisWidth();var r=this.dimXAxis.getxAxisLabelsCoords(),s=this.dimXAxis.getxAxisTitleCoords();this.conditionalChecksForAxisCoords(r,s),i.translateXAxisY=t.globals.rotateXLabels?this.xAxisHeight/8:-4,i.translateXAxisX=t.globals.rotateXLabels&&t.globals.isXNumeric&&t.config.xaxis.labels.rotate<=-45?-this.xAxisWidth/4:0,t.globals.isBarHorizontal&&(i.rotateXLabels=!1,i.translateXAxisY=parseInt(t.config.xaxis.labels.style.fontSize,10)/1.5*-1),i.translateXAxisY=i.translateXAxisY+t.config.xaxis.labels.offsetY,i.translateXAxisX=i.translateXAxisX+t.config.xaxis.labels.offsetX;var o=this.yAxisWidth,l=this.xAxisHeight;i.xAxisLabelsHeight=this.xAxisHeight-s.height,i.xAxisLabelsWidth=this.xAxisWidth,i.xAxisHeight=this.xAxisHeight;var c=10;("radar"===t.config.chart.type||this.isSparkline)&&(o=0,l=i.goldenPadding),this.isSparkline&&(this.lgRect={height:0,width:0}),(this.isSparkline||"treemap"===t.config.chart.type)&&(o=0,l=0,c=0),this.isSparkline||this.dimXAxis.additionalPaddingXLabels(r);var u=function(){i.translateX=o,i.gridHeight=i.svgHeight-e.lgRect.height-l-(e.isSparkline||"treemap"===t.config.chart.type?0:t.globals.rotateXLabels?10:15),i.gridWidth=i.svgWidth-o};switch("top"===t.config.xaxis.position&&(c=i.xAxisHeight-t.config.xaxis.axisTicks.height-5),t.config.legend.position){case"bottom":i.translateY=c,u();break;case"top":i.translateY=this.lgRect.height+c,u();break;case"left":i.translateY=c,i.translateX=this.lgRect.width+o,i.gridHeight=i.svgHeight-l-12,i.gridWidth=i.svgWidth-this.lgRect.width-o;break;case"right":i.translateY=c,i.translateX=o,i.gridHeight=i.svgHeight-l-12,i.gridWidth=i.svgWidth-this.lgRect.width-o-5;break;default:throw new Error("Legend position not supported")}this.dimGrid.setGridXPosForDualYAxis(a,n),new K(this.ctx).setYAxisXPosition(n,a)}},{key:"setDimensionsForNonAxisCharts",value:function(){var e=this.w,t=e.globals,i=e.config,n=0;e.config.legend.show&&!e.config.legend.floating&&(n=20);var a="pie"===i.chart.type||"polarArea"===i.chart.type||"donut"===i.chart.type?"pie":"radialBar",r=i.plotOptions[a].offsetY,s=i.plotOptions[a].offsetX;if(!i.legend.show||i.legend.floating)return t.gridHeight=t.svgHeight-i.grid.padding.left+i.grid.padding.right,t.gridWidth=t.gridHeight,t.translateY=r,void(t.translateX=s+(t.svgWidth-t.gridWidth)/2);switch(i.legend.position){case"bottom":t.gridHeight=t.svgHeight-this.lgRect.height-t.goldenPadding,t.gridWidth=t.svgWidth,t.translateY=r-10,t.translateX=s+(t.svgWidth-t.gridWidth)/2;break;case"top":t.gridHeight=t.svgHeight-this.lgRect.height-t.goldenPadding,t.gridWidth=t.svgWidth,t.translateY=this.lgRect.height+r+10,t.translateX=s+(t.svgWidth-t.gridWidth)/2;break;case"left":t.gridWidth=t.svgWidth-this.lgRect.width-n,t.gridHeight="auto"!==i.chart.height?t.svgHeight:t.gridWidth,t.translateY=r,t.translateX=s+this.lgRect.width+n;break;case"right":t.gridWidth=t.svgWidth-this.lgRect.width-n-5,t.gridHeight="auto"!==i.chart.height?t.svgHeight:t.gridWidth,t.translateY=r,t.translateX=s+10;break;default:throw new Error("Legend position not supported")}}},{key:"conditionalChecksForAxisCoords",value:function(e,t){var i=this.w,n=e.height+t.height,a=i.globals.isMultiLineX?1.2:i.globals.LINE_HEIGHT_RATIO,r=i.globals.rotateXLabels?22:10,s=i.globals.rotateXLabels&&"bottom"===i.config.legend.position?10:0;this.xAxisHeight=n*a+r+s,this.xAxisWidth=e.width,this.xAxisHeight-t.height>i.config.xaxis.labels.maxHeight&&(this.xAxisHeight=i.config.xaxis.labels.maxHeight),i.config.xaxis.labels.minHeight&&this.xAxisHeight<i.config.xaxis.labels.minHeight&&(this.xAxisHeight=i.config.xaxis.labels.minHeight),i.config.xaxis.floating&&(this.xAxisHeight=0);var o=0,l=0;i.config.yaxis.forEach((function(e){o+=e.labels.minWidth,l+=e.labels.maxWidth})),this.yAxisWidth<o&&(this.yAxisWidth=o),this.yAxisWidth>l&&(this.yAxisWidth=l)}}]),e}(),he=function(){function e(t){o(this,e),this.w=t.w,this.lgCtx=t}return c(e,[{key:"getLegendStyles",value:function(){var e=document.createElement("style");e.setAttribute("type","text/css");var t=document.createTextNode("\t\n    \t\n      .apexcharts-legend {\t\n        display: flex;\t\n        overflow: auto;\t\n        padding: 0 10px;\t\n      }\t\n      .apexcharts-legend.apx-legend-position-bottom, .apexcharts-legend.apx-legend-position-top {\t\n        flex-wrap: wrap\t\n      }\t\n      .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {\t\n        flex-direction: column;\t\n        bottom: 0;\t\n      }\t\n      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-left, .apexcharts-legend.apx-legend-position-top.apexcharts-align-left, .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {\t\n        justify-content: flex-start;\t\n      }\t\n      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-center, .apexcharts-legend.apx-legend-position-top.apexcharts-align-center {\t\n        justify-content: center;  \t\n      }\t\n      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-right, .apexcharts-legend.apx-legend-position-top.apexcharts-align-right {\t\n        justify-content: flex-end;\t\n      }\t\n      .apexcharts-legend-series {\t\n        cursor: pointer;\t\n        line-height: normal;\t\n      }\t\n      .apexcharts-legend.apx-legend-position-bottom .apexcharts-legend-series, .apexcharts-legend.apx-legend-position-top .apexcharts-legend-series{\t\n        display: flex;\t\n        align-items: center;\t\n      }\t\n      .apexcharts-legend-text {\t\n        position: relative;\t\n        font-size: 14px;\t\n      }\t\n      .apexcharts-legend-text *, .apexcharts-legend-marker * {\t\n        pointer-events: none;\t\n      }\t\n      .apexcharts-legend-marker {\t\n        position: relative;\t\n        display: inline-block;\t\n        cursor: pointer;\t\n        margin-right: 3px;\t\n        border-style: solid;\n      }\t\n      \t\n      .apexcharts-legend.apexcharts-align-right .apexcharts-legend-series, .apexcharts-legend.apexcharts-align-left .apexcharts-legend-series{\t\n        display: inline-block;\t\n      }\t\n      .apexcharts-legend-series.apexcharts-no-click {\t\n        cursor: auto;\t\n      }\t\n      .apexcharts-legend .apexcharts-hidden-zero-series, .apexcharts-legend .apexcharts-hidden-null-series {\t\n        display: none !important;\t\n      }\t\n      .apexcharts-inactive-legend {\t\n        opacity: 0.45;\t\n      }");return e.appendChild(t),e}},{key:"getLegendBBox",value:function(){var e=this.w.globals.dom.baseEl.querySelector(".apexcharts-legend").getBoundingClientRect(),t=e.width;return{clwh:e.height,clww:t}}},{key:"appendToForeignObject",value:function(){var e=this.w.globals;e.dom.elLegendForeign=document.createElementNS(e.SVGNS,"foreignObject");var t=e.dom.elLegendForeign;t.setAttribute("x",0),t.setAttribute("y",0),t.setAttribute("width",e.svgWidth),t.setAttribute("height",e.svgHeight),e.dom.elLegendWrap.setAttribute("xmlns","http://www.w3.org/1999/xhtml"),t.appendChild(e.dom.elLegendWrap),t.appendChild(this.getLegendStyles()),e.dom.Paper.node.insertBefore(t,e.dom.elGraphical.node)}},{key:"toggleDataSeries",value:function(e,t){var i=this,n=this.w;if(n.globals.axisCharts||"radialBar"===n.config.chart.type){n.globals.resized=!0;var a=null,r=null;n.globals.risingSeries=[],n.globals.axisCharts?(a=n.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(e,"']")),r=parseInt(a.getAttribute("data:realIndex"),10)):(a=n.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(e+1,"']")),r=parseInt(a.getAttribute("rel"),10)-1),t?[{cs:n.globals.collapsedSeries,csi:n.globals.collapsedSeriesIndices},{cs:n.globals.ancillaryCollapsedSeries,csi:n.globals.ancillaryCollapsedSeriesIndices}].forEach((function(e){i.riseCollapsedSeries(e.cs,e.csi,r)})):this.hideSeries({seriesEl:a,realIndex:r})}else{var s=n.globals.dom.Paper.select(" .apexcharts-series[rel='".concat(e+1,"'] path")),o=n.config.chart.type;if("pie"===o||"polarArea"===o||"donut"===o){var l=n.config.plotOptions.pie.donut.labels;new w(this.lgCtx.ctx).pathMouseDown(s.members[0],null),this.lgCtx.ctx.pie.printDataLabelsInner(s.members[0].node,l)}s.fire("click")}}},{key:"hideSeries",value:function(e){var t=e.seriesEl,i=e.realIndex,n=this.w,a=x.clone(n.config.series);if(n.globals.axisCharts){var r=!1;if(n.config.yaxis[i]&&n.config.yaxis[i].show&&n.config.yaxis[i].showAlways&&(r=!0,n.globals.ancillaryCollapsedSeriesIndices.indexOf(i)<0&&(n.globals.ancillaryCollapsedSeries.push({index:i,data:a[i].data.slice(),type:t.parentNode.className.baseVal.split("-")[1]}),n.globals.ancillaryCollapsedSeriesIndices.push(i))),!r){n.globals.collapsedSeries.push({index:i,data:a[i].data.slice(),type:t.parentNode.className.baseVal.split("-")[1]}),n.globals.collapsedSeriesIndices.push(i);var s=n.globals.risingSeries.indexOf(i);n.globals.risingSeries.splice(s,1)}}else n.globals.collapsedSeries.push({index:i,data:a[i]}),n.globals.collapsedSeriesIndices.push(i);for(var o=t.childNodes,l=0;l<o.length;l++)o[l].classList.contains("apexcharts-series-markers-wrap")&&(o[l].classList.contains("apexcharts-hide")?o[l].classList.remove("apexcharts-hide"):o[l].classList.add("apexcharts-hide"));n.globals.allSeriesCollapsed=n.globals.collapsedSeries.length===n.config.series.length,a=this._getSeriesBasedOnCollapsedState(a),this.lgCtx.ctx.updateHelpers._updateSeries(a,n.config.chart.animations.dynamicAnimation.enabled)}},{key:"riseCollapsedSeries",value:function(e,t,i){var n=this.w,a=x.clone(n.config.series);if(e.length>0){for(var r=0;r<e.length;r++)e[r].index===i&&(n.globals.axisCharts?(a[i].data=e[r].data.slice(),e.splice(r,1),t.splice(r,1),n.globals.risingSeries.push(i)):(a[i]=e[r].data,e.splice(r,1),t.splice(r,1),n.globals.risingSeries.push(i)));a=this._getSeriesBasedOnCollapsedState(a),this.lgCtx.ctx.updateHelpers._updateSeries(a,n.config.chart.animations.dynamicAnimation.enabled)}}},{key:"_getSeriesBasedOnCollapsedState",value:function(e){var t=this.w;return t.globals.axisCharts?e.forEach((function(i,n){t.globals.collapsedSeriesIndices.indexOf(n)>-1&&(e[n].data=[])})):e.forEach((function(i,n){t.globals.collapsedSeriesIndices.indexOf(n)>-1&&(e[n]=0)})),e}}]),e}(),de=function(){function e(t,i){o(this,e),this.ctx=t,this.w=t.w,this.onLegendClick=this.onLegendClick.bind(this),this.onLegendHovered=this.onLegendHovered.bind(this),this.isBarsDistributed="bar"===this.w.config.chart.type&&this.w.config.plotOptions.bar.distributed&&1===this.w.config.series.length,this.legendHelpers=new he(this)}return c(e,[{key:"init",value:function(){var e=this.w,t=e.globals,i=e.config;if((i.legend.showForSingleSeries&&1===t.series.length||this.isBarsDistributed||t.series.length>1||!t.axisCharts)&&i.legend.show){for(;t.dom.elLegendWrap.firstChild;)t.dom.elLegendWrap.removeChild(t.dom.elLegendWrap.firstChild);this.drawLegends(),x.isIE11()?document.getElementsByTagName("head")[0].appendChild(this.legendHelpers.getLegendStyles()):this.legendHelpers.appendToForeignObject(),"bottom"===i.legend.position||"top"===i.legend.position?this.legendAlignHorizontal():"right"!==i.legend.position&&"left"!==i.legend.position||this.legendAlignVertical()}}},{key:"drawLegends",value:function(){var e=this,t=this.w,i=t.config.legend.fontFamily,n=t.globals.seriesNames,a=t.globals.colors.slice();if("heatmap"===t.config.chart.type){var r=t.config.plotOptions.heatmap.colorScale.ranges;n=r.map((function(e){return e.name?e.name:e.from+" - "+e.to})),a=r.map((function(e){return e.color}))}else this.isBarsDistributed&&(n=t.globals.labels.slice());t.config.legend.customLegendItems.length&&(n=t.config.legend.customLegendItems);for(var s=t.globals.legendFormatter,o=t.config.legend.inverseOrder,l=o?n.length-1:0;o?l>=0:l<=n.length-1;o?l--:l++){var c=s(n[l],{seriesIndex:l,w:t}),u=!1,h=!1;if(t.globals.collapsedSeries.length>0)for(var d=0;d<t.globals.collapsedSeries.length;d++)t.globals.collapsedSeries[d].index===l&&(u=!0);if(t.globals.ancillaryCollapsedSeriesIndices.length>0)for(var f=0;f<t.globals.ancillaryCollapsedSeriesIndices.length;f++)t.globals.ancillaryCollapsedSeriesIndices[f]===l&&(h=!0);var p=document.createElement("span");p.classList.add("apexcharts-legend-marker");var g=t.config.legend.markers.offsetX,m=t.config.legend.markers.offsetY,v=t.config.legend.markers.height,b=t.config.legend.markers.width,y=t.config.legend.markers.strokeWidth,k=t.config.legend.markers.strokeColor,S=t.config.legend.markers.radius,C=p.style;C.background=a[l],C.color=a[l],C.setProperty("background",a[l],"important"),t.config.legend.markers.fillColors&&t.config.legend.markers.fillColors[l]&&(C.background=t.config.legend.markers.fillColors[l]),void 0!==t.globals.seriesColors[l]&&(C.background=t.globals.seriesColors[l],C.color=t.globals.seriesColors[l]),C.height=Array.isArray(v)?parseFloat(v[l])+"px":parseFloat(v)+"px",C.width=Array.isArray(b)?parseFloat(b[l])+"px":parseFloat(b)+"px",C.left=(Array.isArray(g)?parseFloat(g[l]):parseFloat(g))+"px",C.top=(Array.isArray(m)?parseFloat(m[l]):parseFloat(m))+"px",C.borderWidth=Array.isArray(y)?y[l]:y,C.borderColor=Array.isArray(k)?k[l]:k,C.borderRadius=Array.isArray(S)?parseFloat(S[l])+"px":parseFloat(S)+"px",t.config.legend.markers.customHTML&&(Array.isArray(t.config.legend.markers.customHTML)?t.config.legend.markers.customHTML[l]&&(p.innerHTML=t.config.legend.markers.customHTML[l]()):p.innerHTML=t.config.legend.markers.customHTML()),w.setAttrs(p,{rel:l+1,"data:collapsed":u||h}),(u||h)&&p.classList.add("apexcharts-inactive-legend");var E=document.createElement("div"),P=document.createElement("span");P.classList.add("apexcharts-legend-text"),P.innerHTML=Array.isArray(c)?c.join(" "):c;var T=t.config.legend.labels.useSeriesColors?t.globals.colors[l]:t.config.legend.labels.colors;T||(T=t.config.chart.foreColor),P.style.color=T,P.style.fontSize=parseFloat(t.config.legend.fontSize)+"px",P.style.fontWeight=t.config.legend.fontWeight,P.style.fontFamily=i||t.config.chart.fontFamily,w.setAttrs(P,{rel:l+1,i:l,"data:default-text":encodeURIComponent(c),"data:collapsed":u||h}),E.appendChild(p),E.appendChild(P);var L=new A(this.ctx);t.config.legend.showForZeroSeries||0===L.getSeriesTotalByIndex(l)&&L.seriesHaveSameValues(l)&&!L.isSeriesNull(l)&&-1===t.globals.collapsedSeriesIndices.indexOf(l)&&-1===t.globals.ancillaryCollapsedSeriesIndices.indexOf(l)&&E.classList.add("apexcharts-hidden-zero-series"),t.config.legend.showForNullSeries||L.isSeriesNull(l)&&-1===t.globals.collapsedSeriesIndices.indexOf(l)&&-1===t.globals.ancillaryCollapsedSeriesIndices.indexOf(l)&&E.classList.add("apexcharts-hidden-null-series"),t.globals.dom.elLegendWrap.appendChild(E),t.globals.dom.elLegendWrap.classList.add("apexcharts-align-".concat(t.config.legend.horizontalAlign)),t.globals.dom.elLegendWrap.classList.add("apx-legend-position-"+t.config.legend.position),E.classList.add("apexcharts-legend-series"),E.style.margin="".concat(t.config.legend.itemMargin.vertical,"px ").concat(t.config.legend.itemMargin.horizontal,"px"),t.globals.dom.elLegendWrap.style.width=t.config.legend.width?t.config.legend.width+"px":"",t.globals.dom.elLegendWrap.style.height=t.config.legend.height?t.config.legend.height+"px":"",w.setAttrs(E,{rel:l+1,seriesName:x.escapeString(n[l]),"data:collapsed":u||h}),(u||h)&&E.classList.add("apexcharts-inactive-legend"),t.config.legend.onItemClick.toggleDataSeries||E.classList.add("apexcharts-no-click")}t.globals.dom.elWrap.addEventListener("click",e.onLegendClick,!0),t.config.legend.onItemHover.highlightDataSeries&&0===t.config.legend.customLegendItems.length&&(t.globals.dom.elWrap.addEventListener("mousemove",e.onLegendHovered,!0),t.globals.dom.elWrap.addEventListener("mouseout",e.onLegendHovered,!0))}},{key:"setLegendWrapXY",value:function(e,t){var i=this.w,n=i.globals.dom.baseEl.querySelector(".apexcharts-legend"),a=n.getBoundingClientRect(),r=0,s=0;if("bottom"===i.config.legend.position)s+=i.globals.svgHeight-a.height/2;else if("top"===i.config.legend.position){var o=new ue(this.ctx),l=o.dimHelpers.getTitleSubtitleCoords("title").height,c=o.dimHelpers.getTitleSubtitleCoords("subtitle").height;s=s+(l>0?l-10:0)+(c>0?c-10:0)}n.style.position="absolute",r=r+e+i.config.legend.offsetX,s=s+t+i.config.legend.offsetY,n.style.left=r+"px",n.style.top=s+"px","bottom"===i.config.legend.position?(n.style.top="auto",n.style.bottom=5-i.config.legend.offsetY+"px"):"right"===i.config.legend.position&&(n.style.left="auto",n.style.right=25+i.config.legend.offsetX+"px"),["width","height"].forEach((function(e){n.style[e]&&(n.style[e]=parseInt(i.config.legend[e],10)+"px")}))}},{key:"legendAlignHorizontal",value:function(){var e=this.w;e.globals.dom.baseEl.querySelector(".apexcharts-legend").style.right=0;var t=this.legendHelpers.getLegendBBox(),i=new ue(this.ctx),n=i.dimHelpers.getTitleSubtitleCoords("title"),a=i.dimHelpers.getTitleSubtitleCoords("subtitle"),r=0;"bottom"===e.config.legend.position?r=-t.clwh/1.8:"top"===e.config.legend.position&&(r=n.height+a.height+e.config.title.margin+e.config.subtitle.margin-10),this.setLegendWrapXY(20,r)}},{key:"legendAlignVertical",value:function(){var e=this.w,t=this.legendHelpers.getLegendBBox(),i=0;"left"===e.config.legend.position&&(i=20),"right"===e.config.legend.position&&(i=e.globals.svgWidth-t.clww-10),this.setLegendWrapXY(i,20)}},{key:"onLegendHovered",value:function(e){var t=this.w,i=e.target.classList.contains("apexcharts-legend-text")||e.target.classList.contains("apexcharts-legend-marker");if("heatmap"===t.config.chart.type||this.isBarsDistributed){if(i){var n=parseInt(e.target.getAttribute("rel"),10)-1;this.ctx.events.fireEvent("legendHover",[this.ctx,n,this.w]),new F(this.ctx).highlightRangeInSeries(e,e.target)}}else!e.target.classList.contains("apexcharts-inactive-legend")&&i&&new F(this.ctx).toggleSeriesOnHover(e,e.target)}},{key:"onLegendClick",value:function(e){var t=this.w;if(!t.config.legend.customLegendItems.length&&(e.target.classList.contains("apexcharts-legend-text")||e.target.classList.contains("apexcharts-legend-marker"))){var i=parseInt(e.target.getAttribute("rel"),10)-1,n="true"===e.target.getAttribute("data:collapsed"),a=this.w.config.chart.events.legendClick;"function"==typeof a&&a(this.ctx,i,this.w),this.ctx.events.fireEvent("legendClick",[this.ctx,i,this.w]);var r=this.w.config.legend.markers.onClick;"function"==typeof r&&e.target.classList.contains("apexcharts-legend-marker")&&(r(this.ctx,i,this.w),this.ctx.events.fireEvent("legendMarkerClick",[this.ctx,i,this.w])),"treemap"!==t.config.chart.type&&"heatmap"!==t.config.chart.type&&!this.isBarsDistributed&&t.config.legend.onItemClick.toggleDataSeries&&this.legendHelpers.toggleDataSeries(i,n)}}}]),e}(),fe=function(){function e(t){o(this,e),this.ctx=t,this.w=t.w;var i=this.w;this.ev=this.w.config.chart.events,this.selectedClass="apexcharts-selected",this.localeValues=this.w.globals.locale.toolbar,this.minX=i.globals.minX,this.maxX=i.globals.maxX}return c(e,[{key:"createToolbar",value:function(){var e=this,t=this.w,i=function(){return document.createElement("div")},n=i();if(n.setAttribute("class","apexcharts-toolbar"),n.style.top=t.config.chart.toolbar.offsetY+"px",n.style.right=3-t.config.chart.toolbar.offsetX+"px",t.globals.dom.elWrap.appendChild(n),this.elZoom=i(),this.elZoomIn=i(),this.elZoomOut=i(),this.elPan=i(),this.elSelection=i(),this.elZoomReset=i(),this.elMenuIcon=i(),this.elMenu=i(),this.elCustomIcons=[],this.t=t.config.chart.toolbar.tools,Array.isArray(this.t.customIcons))for(var a=0;a<this.t.customIcons.length;a++)this.elCustomIcons.push(i());var r=[],s=function(i,n,a){var s=i.toLowerCase();e.t[s]&&t.config.chart.zoom.enabled&&r.push({el:n,icon:"string"==typeof e.t[s]?e.t[s]:a,title:e.localeValues[i],class:"apexcharts-".concat(s,"-icon")})};s("zoomIn",this.elZoomIn,'<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">\n    <path d="M0 0h24v24H0z" fill="none"/>\n    <path d="M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>\n</svg>\n'),s("zoomOut",this.elZoomOut,'<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">\n    <path d="M0 0h24v24H0z" fill="none"/>\n    <path d="M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>\n</svg>\n');var o=function(i){e.t[i]&&t.config.chart[i].enabled&&r.push({el:"zoom"===i?e.elZoom:e.elSelection,icon:"string"==typeof e.t[i]?e.t[i]:"zoom"===i?'<svg xmlns="http://www.w3.org/2000/svg" fill="#000000" height="24" viewBox="0 0 24 24" width="24">\n    <path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/>\n    <path d="M0 0h24v24H0V0z" fill="none"/>\n    <path d="M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z"/>\n</svg>':'<svg fill="#6E8192" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">\n    <path d="M0 0h24v24H0z" fill="none"/>\n    <path d="M3 5h2V3c-1.1 0-2 .9-2 2zm0 8h2v-2H3v2zm4 8h2v-2H7v2zM3 9h2V7H3v2zm10-6h-2v2h2V3zm6 0v2h2c0-1.1-.9-2-2-2zM5 21v-2H3c0 1.1.9 2 2 2zm-2-4h2v-2H3v2zM9 3H7v2h2V3zm2 18h2v-2h-2v2zm8-8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zm0-12h2V7h-2v2zm0 8h2v-2h-2v2zm-4 4h2v-2h-2v2zm0-16h2V3h-2v2z"/>\n</svg>',title:e.localeValues["zoom"===i?"selectionZoom":"selection"],class:t.globals.isTouchDevice?"apexcharts-element-hidden":"apexcharts-".concat(i,"-icon")})};o("zoom"),o("selection"),this.t.pan&&t.config.chart.zoom.enabled&&r.push({el:this.elPan,icon:"string"==typeof this.t.pan?this.t.pan:'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" fill="#000000" height="24" viewBox="0 0 24 24" width="24">\n    <defs>\n        <path d="M0 0h24v24H0z" id="a"/>\n    </defs>\n    <clipPath id="b">\n        <use overflow="visible" xlink:href="#a"/>\n    </clipPath>\n    <path clip-path="url(#b)" d="M23 5.5V20c0 2.2-1.8 4-4 4h-7.3c-1.08 0-2.1-.43-2.85-1.19L1 14.83s1.26-1.23 1.3-1.25c.22-.19.49-.29.79-.29.22 0 .42.06.6.16.04.01 4.31 2.46 4.31 2.46V4c0-.83.67-1.5 1.5-1.5S11 3.17 11 4v7h1V1.5c0-.83.67-1.5 1.5-1.5S15 .67 15 1.5V11h1V2.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5V11h1V5.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5z"/>\n</svg>',title:this.localeValues.pan,class:t.globals.isTouchDevice?"apexcharts-element-hidden":"apexcharts-pan-icon"}),s("reset",this.elZoomReset,'<svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">\n    <path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"/>\n    <path d="M0 0h24v24H0z" fill="none"/>\n</svg>'),this.t.download&&r.push({el:this.elMenuIcon,icon:"string"==typeof this.t.download?this.t.download:'<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"/><path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"/></svg>',title:this.localeValues.menu,class:"apexcharts-menu-icon"});for(var l=0;l<this.elCustomIcons.length;l++)r.push({el:this.elCustomIcons[l],icon:this.t.customIcons[l].icon,title:this.t.customIcons[l].title,index:this.t.customIcons[l].index,class:"apexcharts-toolbar-custom-icon "+this.t.customIcons[l].class});r.forEach((function(e,t){e.index&&x.moveIndexInArray(r,t,e.index)}));for(var c=0;c<r.length;c++)w.setAttrs(r[c].el,{class:r[c].class,title:r[c].title}),r[c].el.innerHTML=r[c].icon,n.appendChild(r[c].el);this._createHamburgerMenu(n),t.globals.zoomEnabled?this.elZoom.classList.add(this.selectedClass):t.globals.panEnabled?this.elPan.classList.add(this.selectedClass):t.globals.selectionEnabled&&this.elSelection.classList.add(this.selectedClass),this.addToolbarEventListeners()}},{key:"_createHamburgerMenu",value:function(e){this.elMenuItems=[],e.appendChild(this.elMenu),w.setAttrs(this.elMenu,{class:"apexcharts-menu"});var t=[{name:"exportSVG",title:this.localeValues.exportToSVG},{name:"exportPNG",title:this.localeValues.exportToPNG},{name:"exportCSV",title:this.localeValues.exportToCSV}];this.w.globals.allSeriesHasEqualX||t.splice(2,1);for(var i=0;i<t.length;i++)this.elMenuItems.push(document.createElement("div")),this.elMenuItems[i].innerHTML=t[i].title,w.setAttrs(this.elMenuItems[i],{class:"apexcharts-menu-item ".concat(t[i].name),title:t[i].title}),this.elMenu.appendChild(this.elMenuItems[i])}},{key:"addToolbarEventListeners",value:function(){var e=this;this.elZoomReset.addEventListener("click",this.handleZoomReset.bind(this)),this.elSelection.addEventListener("click",this.toggleZoomSelection.bind(this,"selection")),this.elZoom.addEventListener("click",this.toggleZoomSelection.bind(this,"zoom")),this.elZoomIn.addEventListener("click",this.handleZoomIn.bind(this)),this.elZoomOut.addEventListener("click",this.handleZoomOut.bind(this)),this.elPan.addEventListener("click",this.togglePanning.bind(this)),this.elMenuIcon.addEventListener("click",this.toggleMenu.bind(this)),this.elMenuItems.forEach((function(t){t.classList.contains("exportSVG")?t.addEventListener("click",e.handleDownload.bind(e,"svg")):t.classList.contains("exportPNG")?t.addEventListener("click",e.handleDownload.bind(e,"png")):t.classList.contains("exportCSV")&&t.addEventListener("click",e.handleDownload.bind(e,"csv"))}));for(var t=0;t<this.t.customIcons.length;t++)this.elCustomIcons[t].addEventListener("click",this.t.customIcons[t].click.bind(this,this.ctx,this.ctx.w))}},{key:"toggleZoomSelection",value:function(e){this.ctx.getSyncedCharts().forEach((function(t){t.ctx.toolbar.toggleOtherControls();var i="selection"===e?t.ctx.toolbar.elSelection:t.ctx.toolbar.elZoom,n="selection"===e?"selectionEnabled":"zoomEnabled";t.w.globals[n]=!t.w.globals[n],i.classList.contains(t.ctx.toolbar.selectedClass)?i.classList.remove(t.ctx.toolbar.selectedClass):i.classList.add(t.ctx.toolbar.selectedClass)}))}},{key:"getToolbarIconsReference",value:function(){var e=this.w;this.elZoom||(this.elZoom=e.globals.dom.baseEl.querySelector(".apexcharts-zoom-icon")),this.elPan||(this.elPan=e.globals.dom.baseEl.querySelector(".apexcharts-pan-icon")),this.elSelection||(this.elSelection=e.globals.dom.baseEl.querySelector(".apexcharts-selection-icon"))}},{key:"enableZoomPanFromToolbar",value:function(e){this.toggleOtherControls(),"pan"===e?this.w.globals.panEnabled=!0:this.w.globals.zoomEnabled=!0;var t="pan"===e?this.elPan:this.elZoom,i="pan"===e?this.elZoom:this.elPan;t&&t.classList.add(this.selectedClass),i&&i.classList.remove(this.selectedClass)}},{key:"togglePanning",value:function(){this.ctx.getSyncedCharts().forEach((function(e){e.ctx.toolbar.toggleOtherControls(),e.w.globals.panEnabled=!e.w.globals.panEnabled,e.ctx.toolbar.elPan.classList.contains(e.ctx.toolbar.selectedClass)?e.ctx.toolbar.elPan.classList.remove(e.ctx.toolbar.selectedClass):e.ctx.toolbar.elPan.classList.add(e.ctx.toolbar.selectedClass)}))}},{key:"toggleOtherControls",value:function(){var e=this,t=this.w;t.globals.panEnabled=!1,t.globals.zoomEnabled=!1,t.globals.selectionEnabled=!1,this.getToolbarIconsReference(),[this.elPan,this.elSelection,this.elZoom].forEach((function(t){t&&t.classList.remove(e.selectedClass)}))}},{key:"handleZoomIn",value:function(){var e=this.w;e.globals.isRangeBar&&(this.minX=e.globals.minY,this.maxX=e.globals.maxY);var t=(this.minX+this.maxX)/2,i=(this.minX+t)/2,n=(this.maxX+t)/2,a=this._getNewMinXMaxX(i,n);e.globals.disableZoomIn||this.zoomUpdateOptions(a.minX,a.maxX)}},{key:"handleZoomOut",value:function(){var e=this.w;if(e.globals.isRangeBar&&(this.minX=e.globals.minY,this.maxX=e.globals.maxY),!("datetime"===e.config.xaxis.type&&new Date(this.minX).getUTCFullYear()<1e3)){var t=(this.minX+this.maxX)/2,i=this.minX-(t-this.minX),n=this.maxX-(t-this.maxX),a=this._getNewMinXMaxX(i,n);e.globals.disableZoomOut||this.zoomUpdateOptions(a.minX,a.maxX)}}},{key:"_getNewMinXMaxX",value:function(e,t){var i=this.w.config.xaxis.convertedCatToNumeric;return{minX:i?Math.floor(e):e,maxX:i?Math.floor(t):t}}},{key:"zoomUpdateOptions",value:function(e,t){var i=this.w;if(void 0!==e||void 0!==t){if(!(i.config.xaxis.convertedCatToNumeric&&(e<1&&(e=1,t=i.globals.dataPoints),t-e<2))){var n={min:e,max:t},a=this.getBeforeZoomRange(n);a&&(n=a.xaxis);var r={xaxis:n},s=x.clone(i.globals.initialConfig.yaxis);i.config.chart.zoom.autoScaleYaxis&&(s=new Z(this.ctx).autoScaleY(this.ctx,s,{xaxis:n})),i.config.chart.group||(r.yaxis=s),this.w.globals.zoomed=!0,this.ctx.updateHelpers._updateOptions(r,!1,this.w.config.chart.animations.dynamicAnimation.enabled),this.zoomCallback(n,s)}}else this.handleZoomReset()}},{key:"zoomCallback",value:function(e,t){"function"==typeof this.ev.zoomed&&this.ev.zoomed(this.ctx,{xaxis:e,yaxis:t})}},{key:"getBeforeZoomRange",value:function(e,t){var i=null;return"function"==typeof this.ev.beforeZoom&&(i=this.ev.beforeZoom(this,{xaxis:e,yaxis:t})),i}},{key:"toggleMenu",value:function(){var e=this;window.setTimeout((function(){e.elMenu.classList.contains("apexcharts-menu-open")?e.elMenu.classList.remove("apexcharts-menu-open"):e.elMenu.classList.add("apexcharts-menu-open")}),0)}},{key:"handleDownload",value:function(e){var t=this.w,i=new U(this.ctx);switch(e){case"svg":i.exportToSVG(this.ctx);break;case"png":i.exportToPng(this.ctx);break;case"csv":i.exportToCSV({series:t.config.series,columnDelimiter:t.config.chart.toolbar.export.csv.columnDelimiter})}}},{key:"handleZoomReset",value:function(e){this.ctx.getSyncedCharts().forEach((function(e){var t=e.w;if(t.globals.lastXAxis.min=void 0,t.globals.lastXAxis.max=void 0,e.updateHelpers.revertDefaultAxisMinMax(),"function"==typeof t.config.chart.events.beforeResetZoom){var i=t.config.chart.events.beforeResetZoom(e,t);i&&e.updateHelpers.revertDefaultAxisMinMax(i)}"function"==typeof t.config.chart.events.zoomed&&e.ctx.toolbar.zoomCallback({min:t.config.xaxis.min,max:t.config.xaxis.max}),t.globals.zoomed=!1;var n=e.ctx.series.emptyCollapsedSeries(x.clone(t.globals.initialSeries));e.updateHelpers._updateSeries(n,t.config.chart.animations.dynamicAnimation.enabled)}))}},{key:"destroy",value:function(){this.elZoom=null,this.elZoomIn=null,this.elZoomOut=null,this.elPan=null,this.elSelection=null,this.elZoomReset=null,this.elMenuIcon=null}}]),e}(),pe=function(e){h(i,fe);var t=g(i);function i(e){var n;return o(this,i),(n=t.call(this,e)).ctx=e,n.w=e.w,n.dragged=!1,n.graphics=new w(n.ctx),n.eventList=["mousedown","mouseleave","mousemove","touchstart","touchmove","mouseup","touchend"],n.clientX=0,n.clientY=0,n.startX=0,n.endX=0,n.dragX=0,n.startY=0,n.endY=0,n.dragY=0,n.moveDirection="none",n}return c(i,[{key:"init",value:function(e){var t=this,i=e.xyRatios,n=this.w,a=this;this.xyRatios=i,this.zoomRect=this.graphics.drawRect(0,0,0,0),this.selectionRect=this.graphics.drawRect(0,0,0,0),this.gridRect=n.globals.dom.baseEl.querySelector(".apexcharts-grid"),this.zoomRect.node.classList.add("apexcharts-zoom-rect"),this.selectionRect.node.classList.add("apexcharts-selection-rect"),n.globals.dom.elGraphical.add(this.zoomRect),n.globals.dom.elGraphical.add(this.selectionRect),"x"===n.config.chart.selection.type?this.slDraggableRect=this.selectionRect.draggable({minX:0,minY:0,maxX:n.globals.gridWidth,maxY:n.globals.gridHeight}).on("dragmove",this.selectionDragging.bind(this,"dragging")):"y"===n.config.chart.selection.type?this.slDraggableRect=this.selectionRect.draggable({minX:0,maxX:n.globals.gridWidth}).on("dragmove",this.selectionDragging.bind(this,"dragging")):this.slDraggableRect=this.selectionRect.draggable().on("dragmove",this.selectionDragging.bind(this,"dragging")),this.preselectedSelection(),this.hoverArea=n.globals.dom.baseEl.querySelector("".concat(n.globals.chartClass," .apexcharts-svg")),this.hoverArea.classList.add("apexcharts-zoomable"),this.eventList.forEach((function(e){t.hoverArea.addEventListener(e,a.svgMouseEvents.bind(a,i),{capture:!1,passive:!0})}))}},{key:"destroy",value:function(){this.slDraggableRect&&(this.slDraggableRect.draggable(!1),this.slDraggableRect.off(),this.selectionRect.off()),this.selectionRect=null,this.zoomRect=null,this.gridRect=null}},{key:"svgMouseEvents",value:function(e,t){var i=this.w,n=this,a=this.ctx.toolbar,r=i.globals.zoomEnabled?i.config.chart.zoom.type:i.config.chart.selection.type,s=i.config.chart.toolbar.autoSelected;if(t.shiftKey?(this.shiftWasPressed=!0,a.enableZoomPanFromToolbar("pan"===s?"zoom":"pan")):this.shiftWasPressed&&(a.enableZoomPanFromToolbar(s),this.shiftWasPressed=!1),t.target){var o,l=t.target.classList;if(t.target.parentNode&&null!==t.target.parentNode&&(o=t.target.parentNode.classList),!(l.contains("apexcharts-selection-rect")||l.contains("apexcharts-legend-marker")||l.contains("apexcharts-legend-text")||o&&o.contains("apexcharts-toolbar"))){if(n.clientX="touchmove"===t.type||"touchstart"===t.type?t.touches[0].clientX:"touchend"===t.type?t.changedTouches[0].clientX:t.clientX,n.clientY="touchmove"===t.type||"touchstart"===t.type?t.touches[0].clientY:"touchend"===t.type?t.changedTouches[0].clientY:t.clientY,"mousedown"===t.type&&1===t.which){var c=n.gridRect.getBoundingClientRect();n.startX=n.clientX-c.left,n.startY=n.clientY-c.top,n.dragged=!1,n.w.globals.mousedown=!0}if(("mousemove"===t.type&&1===t.which||"touchmove"===t.type)&&(n.dragged=!0,i.globals.panEnabled?(i.globals.selection=null,n.w.globals.mousedown&&n.panDragging({context:n,zoomtype:r,xyRatios:e})):(n.w.globals.mousedown&&i.globals.zoomEnabled||n.w.globals.mousedown&&i.globals.selectionEnabled)&&(n.selection=n.selectionDrawing({context:n,zoomtype:r}))),"mouseup"===t.type||"touchend"===t.type||"mouseleave"===t.type){var u=n.gridRect.getBoundingClientRect();n.w.globals.mousedown&&(n.endX=n.clientX-u.left,n.endY=n.clientY-u.top,n.dragX=Math.abs(n.endX-n.startX),n.dragY=Math.abs(n.endY-n.startY),(i.globals.zoomEnabled||i.globals.selectionEnabled)&&n.selectionDrawn({context:n,zoomtype:r}),i.globals.panEnabled&&i.config.xaxis.convertedCatToNumeric&&n.delayedPanScrolled()),i.globals.zoomEnabled&&n.hideSelectionRect(this.selectionRect),n.dragged=!1,n.w.globals.mousedown=!1}this.makeSelectionRectDraggable()}}}},{key:"makeSelectionRectDraggable",value:function(){var e=this.w;if(this.selectionRect){var t=this.selectionRect.node.getBoundingClientRect();t.width>0&&t.height>0&&this.slDraggableRect.selectize({points:"l, r",pointSize:8,pointType:"rect"}).resize({constraint:{minX:0,minY:0,maxX:e.globals.gridWidth,maxY:e.globals.gridHeight}}).on("resizing",this.selectionDragging.bind(this,"resizing"))}}},{key:"preselectedSelection",value:function(){var e=this.w,t=this.xyRatios;if(!e.globals.zoomEnabled)if(void 0!==e.globals.selection&&null!==e.globals.selection)this.drawSelectionRect(e.globals.selection);else if(void 0!==e.config.chart.selection.xaxis.min&&void 0!==e.config.chart.selection.xaxis.max){var i=(e.config.chart.selection.xaxis.min-e.globals.minX)/t.xRatio,n={x:i,y:0,width:e.globals.gridWidth-(e.globals.maxX-e.config.chart.selection.xaxis.max)/t.xRatio-i,height:e.globals.gridHeight,translateX:0,translateY:0,selectionEnabled:!0};this.drawSelectionRect(n),this.makeSelectionRectDraggable(),"function"==typeof e.config.chart.events.selection&&e.config.chart.events.selection(this.ctx,{xaxis:{min:e.config.chart.selection.xaxis.min,max:e.config.chart.selection.xaxis.max},yaxis:{}})}}},{key:"drawSelectionRect",value:function(e){var t=e.x,i=e.y,n=e.width,a=e.height,r=e.translateX,s=void 0===r?0:r,o=e.translateY,l=void 0===o?0:o,c=this.w,u=this.zoomRect,h=this.selectionRect;if(this.dragged||null!==c.globals.selection){var d={transform:"translate("+s+", "+l+")"};c.globals.zoomEnabled&&this.dragged&&(n<0&&(n=1),u.attr({x:t,y:i,width:n,height:a,fill:c.config.chart.zoom.zoomedArea.fill.color,"fill-opacity":c.config.chart.zoom.zoomedArea.fill.opacity,stroke:c.config.chart.zoom.zoomedArea.stroke.color,"stroke-width":c.config.chart.zoom.zoomedArea.stroke.width,"stroke-opacity":c.config.chart.zoom.zoomedArea.stroke.opacity}),w.setAttrs(u.node,d)),c.globals.selectionEnabled&&(h.attr({x:t,y:i,width:n>0?n:0,height:a>0?a:0,fill:c.config.chart.selection.fill.color,"fill-opacity":c.config.chart.selection.fill.opacity,stroke:c.config.chart.selection.stroke.color,"stroke-width":c.config.chart.selection.stroke.width,"stroke-dasharray":c.config.chart.selection.stroke.dashArray,"stroke-opacity":c.config.chart.selection.stroke.opacity}),w.setAttrs(h.node,d))}}},{key:"hideSelectionRect",value:function(e){e&&e.attr({x:0,y:0,width:0,height:0})}},{key:"selectionDrawing",value:function(e){var t,i=e.context,n=e.zoomtype,a=this.w,r=i,s=this.gridRect.getBoundingClientRect(),o=r.startX-1,l=r.startY,c=!1,u=!1,h=r.clientX-s.left-o,d=r.clientY-s.top-l;return Math.abs(h+o)>a.globals.gridWidth?h=a.globals.gridWidth-o:r.clientX-s.left<0&&(h=o),o>r.clientX-s.left&&(c=!0,h=Math.abs(h)),l>r.clientY-s.top&&(u=!0,d=Math.abs(d)),t="x"===n?{x:c?o-h:o,y:0,width:h,height:a.globals.gridHeight}:"y"===n?{x:0,y:u?l-d:l,width:a.globals.gridWidth,height:d}:{x:c?o-h:o,y:u?l-d:l,width:h,height:d},r.drawSelectionRect(t),r.selectionDragging("resizing"),t}},{key:"selectionDragging",value:function(e,t){var i=this,n=this.w,a=this.xyRatios,r=this.selectionRect,s=0;"resizing"===e&&(s=30);var o=function(e){return parseFloat(r.node.getAttribute(e))},l={x:o("x"),y:o("y"),width:o("width"),height:o("height")};n.globals.selection=l,"function"==typeof n.config.chart.events.selection&&n.globals.selectionEnabled&&(clearTimeout(this.w.globals.selectionResizeTimer),this.w.globals.selectionResizeTimer=window.setTimeout((function(){var e=i.gridRect.getBoundingClientRect(),t=r.node.getBoundingClientRect(),s={xaxis:{min:n.globals.xAxisScale.niceMin+(t.left-e.left)*a.xRatio,max:n.globals.xAxisScale.niceMin+(t.right-e.left)*a.xRatio},yaxis:{min:n.globals.yAxisScale[0].niceMin+(e.bottom-t.bottom)*a.yRatio[0],max:n.globals.yAxisScale[0].niceMax-(t.top-e.top)*a.yRatio[0]}};n.config.chart.events.selection(i.ctx,s),n.config.chart.brush.enabled&&void 0!==n.config.chart.events.brushScrolled&&n.config.chart.events.brushScrolled(i.ctx,s)}),s))}},{key:"selectionDrawn",value:function(e){var t=e.context,i=e.zoomtype,n=this.w,a=t,r=this.xyRatios,s=this.ctx.toolbar;if(a.startX>a.endX){var o=a.startX;a.startX=a.endX,a.endX=o}if(a.startY>a.endY){var l=a.startY;a.startY=a.endY,a.endY=l}var c=void 0,u=void 0;n.globals.isRangeBar?(c=n.globals.yAxisScale[0].niceMin+a.startX*r.invertedYRatio,u=n.globals.yAxisScale[0].niceMin+a.endX*r.invertedYRatio):(c=n.globals.xAxisScale.niceMin+a.startX*r.xRatio,u=n.globals.xAxisScale.niceMin+a.endX*r.xRatio);var h=[],d=[];if(n.config.yaxis.forEach((function(e,t){h.push(n.globals.yAxisScale[t].niceMax-r.yRatio[t]*a.startY),d.push(n.globals.yAxisScale[t].niceMax-r.yRatio[t]*a.endY)})),a.dragged&&(a.dragX>10||a.dragY>10)&&c!==u)if(n.globals.zoomEnabled){var f=x.clone(n.globals.initialConfig.yaxis),p=x.clone(n.globals.initialConfig.xaxis);if(n.globals.zoomed=!0,n.config.xaxis.convertedCatToNumeric&&(c=Math.floor(c),u=Math.floor(u),c<1&&(c=1,u=n.globals.dataPoints),u-c<2&&(u=c+1)),"xy"!==i&&"x"!==i||(p={min:c,max:u}),"xy"!==i&&"y"!==i||f.forEach((function(e,t){f[t].min=d[t],f[t].max=h[t]})),n.config.chart.zoom.autoScaleYaxis){var g=new Z(a.ctx);f=g.autoScaleY(a.ctx,f,{xaxis:p})}if(s){var m=s.getBeforeZoomRange(p,f);m&&(p=m.xaxis?m.xaxis:p,f=m.yaxis?m.yaxis:f)}var v={xaxis:p};n.config.chart.group||(v.yaxis=f),a.ctx.updateHelpers._updateOptions(v,!1,a.w.config.chart.animations.dynamicAnimation.enabled),"function"==typeof n.config.chart.events.zoomed&&s.zoomCallback(p,f)}else if(n.globals.selectionEnabled){var b,y=null;b={min:c,max:u},"xy"!==i&&"y"!==i||(y=x.clone(n.config.yaxis)).forEach((function(e,t){y[t].min=d[t],y[t].max=h[t]})),n.globals.selection=a.selection,"function"==typeof n.config.chart.events.selection&&n.config.chart.events.selection(a.ctx,{xaxis:b,yaxis:y})}}},{key:"panDragging",value:function(e){var t=e.context,i=this.w,n=t;if(void 0!==i.globals.lastClientPosition.x){var a=i.globals.lastClientPosition.x-n.clientX,r=i.globals.lastClientPosition.y-n.clientY;Math.abs(a)>Math.abs(r)&&a>0?this.moveDirection="left":Math.abs(a)>Math.abs(r)&&a<0?this.moveDirection="right":Math.abs(r)>Math.abs(a)&&r>0?this.moveDirection="up":Math.abs(r)>Math.abs(a)&&r<0&&(this.moveDirection="down")}i.globals.lastClientPosition={x:n.clientX,y:n.clientY};var s=i.globals.isRangeBar?i.globals.minY:i.globals.minX,o=i.globals.isRangeBar?i.globals.maxY:i.globals.maxX;i.config.xaxis.convertedCatToNumeric||n.panScrolled(s,o)}},{key:"delayedPanScrolled",value:function(){var e=this.w,t=e.globals.minX,i=e.globals.maxX,n=(e.globals.maxX-e.globals.minX)/2;"left"===this.moveDirection?(t=e.globals.minX+n,i=e.globals.maxX+n):"right"===this.moveDirection&&(t=e.globals.minX-n,i=e.globals.maxX-n),t=Math.floor(t),i=Math.floor(i),this.updateScrolledChart({xaxis:{min:t,max:i}},t,i)}},{key:"panScrolled",value:function(e,t){var i=this.w,n=this.xyRatios,a=x.clone(i.globals.initialConfig.yaxis),r=n.xRatio,s=i.globals.minX,o=i.globals.maxX;i.globals.isRangeBar&&(r=n.invertedYRatio,s=i.globals.minY,o=i.globals.maxY),"left"===this.moveDirection?(e=s+i.globals.gridWidth/15*r,t=o+i.globals.gridWidth/15*r):"right"===this.moveDirection&&(e=s-i.globals.gridWidth/15*r,t=o-i.globals.gridWidth/15*r),i.globals.isRangeBar||(e<i.globals.initialMinX||t>i.globals.initialMaxX)&&(e=s,t=o);var l={min:e,max:t};i.config.chart.zoom.autoScaleYaxis&&(a=new Z(this.ctx).autoScaleY(this.ctx,a,{xaxis:l}));var c={xaxis:{min:e,max:t}};i.config.chart.group||(c.yaxis=a),this.updateScrolledChart(c,e,t)}},{key:"updateScrolledChart",value:function(e,t,i){var n=this.w;this.ctx.updateHelpers._updateOptions(e,!1,!1),"function"==typeof n.config.chart.events.scrolled&&n.config.chart.events.scrolled(this.ctx,{xaxis:{min:t,max:i}})}}]),i}(),ge=function(){function e(t){o(this,e),this.w=t.w,this.ttCtx=t,this.ctx=t.ctx}return c(e,[{key:"getNearestValues",value:function(e){var t=e.hoverArea,i=e.elGrid,n=e.clientX,a=e.clientY,r=this.w,s=i.getBoundingClientRect(),o=s.width,l=s.height,c=o/(r.globals.dataPoints-1),u=l/r.globals.dataPoints,h=this.hasBars();!r.globals.comboCharts&&!h||r.config.xaxis.convertedCatToNumeric||(c=o/r.globals.dataPoints);var d=n-s.left-r.globals.barPadForNumericAxis,f=a-s.top;d<0||f<0||d>o||f>l?(t.classList.remove("hovering-zoom"),t.classList.remove("hovering-pan")):r.globals.zoomEnabled?(t.classList.remove("hovering-pan"),t.classList.add("hovering-zoom")):r.globals.panEnabled&&(t.classList.remove("hovering-zoom"),t.classList.add("hovering-pan"));var p=Math.round(d/c),g=Math.floor(f/u);h&&!r.config.xaxis.convertedCatToNumeric&&(p=Math.ceil(d/c),p-=1);for(var m,v=null,b=null,y=[],w=0;w<r.globals.seriesXvalues.length;w++)y.push([r.globals.seriesXvalues[w][0]-1e-6].concat(r.globals.seriesXvalues[w]));if(y=y.map((function(e){return e.filter((function(e){return e}))})),m=r.globals.seriesYvalues.map((function(e){return e.filter((function(e){return x.isNumber(e)}))})),r.globals.isXNumeric){var k=this.ttCtx.getElGrid().getBoundingClientRect(),S=d*(k.width/o),A=f*(k.height/l);v=(b=this.closestInMultiArray(S,A,y,m)).index,p=b.j,null!==v&&(y=r.globals.seriesXvalues[v],p=(b=this.closestInArray(S,y)).index)}return r.globals.capturedSeriesIndex=null===v?-1:v,(!p||p<1)&&(p=0),r.globals.isBarHorizontal?r.globals.capturedDataPointIndex=g:r.globals.capturedDataPointIndex=p,{capturedSeries:v,j:r.globals.isBarHorizontal?g:p,hoverX:d,hoverY:f}}},{key:"closestInMultiArray",value:function(e,t,i,n){var a=this.w,r=0,s=null,o=-1;a.globals.series.length>1?r=this.getFirstActiveXArray(i):s=0;var l=n[r][0],c=i[r][0],u=Math.abs(e-c),h=Math.abs(t-l),d=h+u;return n.map((function(a,r){a.map((function(a,l){var c=Math.abs(t-n[r][l]),f=Math.abs(e-i[r][l]),p=f+c;p<d&&(d=p,u=f,h=c,s=r,o=l)}))})),{index:s,j:o}}},{key:"getFirstActiveXArray",value:function(e){for(var t=this.w,i=0,n=e.map((function(e,t){return e.length>0?t:-1})),a=0;a<n.length;a++)if(-1!==n[a]&&-1===t.globals.collapsedSeriesIndices.indexOf(a)&&-1===t.globals.ancillaryCollapsedSeriesIndices.indexOf(a)){i=n[a];break}return i}},{key:"closestInArray",value:function(e,t){for(var i=t[0],n=null,a=Math.abs(e-i),r=0;r<t.length;r++){var s=Math.abs(e-t[r]);s<a&&(a=s,n=r)}return{index:n}}},{key:"isXoverlap",value:function(e){var t=[],i=this.w.globals.seriesX.filter((function(e){return void 0!==e[0]}));if(i.length>0)for(var n=0;n<i.length-1;n++)void 0!==i[n][e]&&void 0!==i[n+1][e]&&i[n][e]!==i[n+1][e]&&t.push("unEqual");return 0===t.length}},{key:"isInitialSeriesSameLen",value:function(){for(var e=!0,t=this.w.globals.initialSeries,i=0;i<t.length-1;i++)if(t[i].data.length!==t[i+1].data.length){e=!1;break}return e}},{key:"getBarsHeight",value:function(e){return m(e).reduce((function(e,t){return e+t.getBBox().height}),0)}},{key:"getElMarkers",value:function(){return this.w.globals.dom.baseEl.querySelectorAll(" .apexcharts-series-markers")}},{key:"getAllMarkers",value:function(){var e=this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series-markers-wrap");(e=m(e)).sort((function(e,t){return Number(t.getAttribute("data:realIndex"))<Number(e.getAttribute("data:realIndex"))?0:-1}));var t=[];return e.forEach((function(e){t.push(e.querySelector(".apexcharts-marker"))})),t}},{key:"hasMarkers",value:function(){return this.getElMarkers().length>0}},{key:"getElBars",value:function(){return this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-bar-series,  .apexcharts-candlestick-series, .apexcharts-boxPlot-series, .apexcharts-rangebar-series")}},{key:"hasBars",value:function(){return this.getElBars().length>0}},{key:"getHoverMarkerSize",value:function(e){var t=this.w,i=t.config.markers.hover.size;return void 0===i&&(i=t.globals.markers.size[e]+t.config.markers.hover.sizeOffset),i}},{key:"toggleAllTooltipSeriesGroups",value:function(e){var t=this.w,i=this.ttCtx;0===i.allTooltipSeriesGroups.length&&(i.allTooltipSeriesGroups=t.globals.dom.baseEl.querySelectorAll(".apexcharts-tooltip-series-group"));for(var n=i.allTooltipSeriesGroups,a=0;a<n.length;a++)"enable"===e?(n[a].classList.add("apexcharts-active"),n[a].style.display=t.config.tooltip.items.display):(n[a].classList.remove("apexcharts-active"),n[a].style.display="none")}}]),e}(),me=function(){function e(t){o(this,e),this.w=t.w,this.ctx=t.ctx,this.ttCtx=t,this.tooltipUtil=new ge(t)}return c(e,[{key:"drawSeriesTexts",value:function(e){var t=e.shared,i=void 0===t||t,n=e.ttItems,a=e.i,r=void 0===a?0:a,s=e.j,o=void 0===s?null:s,l=e.y1,c=e.y2,u=e.e,h=this.w;void 0!==h.config.tooltip.custom?this.handleCustomTooltip({i:r,j:o,y1:l,y2:c,w:h}):this.toggleActiveInactiveSeries(i);var d=this.getValuesToPrint({i:r,j:o});this.printLabels({i:r,j:o,values:d,ttItems:n,shared:i,e:u});var f=this.ttCtx.getElTooltip();this.ttCtx.tooltipRect.ttWidth=f.getBoundingClientRect().width,this.ttCtx.tooltipRect.ttHeight=f.getBoundingClientRect().height}},{key:"printLabels",value:function(e){var t,i=this,n=e.i,a=e.j,s=e.values,o=e.ttItems,l=e.shared,c=e.e,u=this.w,h=[],d=function(e){return u.globals.seriesGoals[e]&&u.globals.seriesGoals[e][a]&&Array.isArray(u.globals.seriesGoals[e][a])},f=s.xVal,p=s.zVal,g=s.xAxisTTVal,m="",v=u.globals.colors[n];null!==a&&u.config.plotOptions.bar.distributed&&(v=u.globals.colors[a]);for(var x=function(e,s){var x=i.getFormatters(n);m=i.getSeriesName({fn:x.yLbTitleFormatter,index:n,seriesIndex:n,j:a}),"treemap"===u.config.chart.type&&(m=x.yLbTitleFormatter(String(u.config.series[n].data[a].x),{series:u.globals.series,seriesIndex:n,dataPointIndex:a,w:u}));var b=u.config.tooltip.inverseOrder?s:e;if(u.globals.axisCharts){var y=function(e){return x.yLbFormatter(u.globals.series[e][a],{series:u.globals.series,seriesIndex:e,dataPointIndex:a,w:u})};l?(x=i.getFormatters(b),m=i.getSeriesName({fn:x.yLbTitleFormatter,index:b,seriesIndex:n,j:a}),v=u.globals.colors[b],t=y(b),d(b)&&(h=u.globals.seriesGoals[b][a].map((function(e){return{attrs:e,val:x.yLbFormatter(e.value,{seriesIndex:b,dataPointIndex:a,w:u})}})))):(c&&c.target&&c.target.getAttribute("fill")&&(v=c.target.getAttribute("fill")),t=y(n),d(n)&&Array.isArray(u.globals.seriesGoals[n][a])&&(h=u.globals.seriesGoals[n][a].map((function(e){return{attrs:e,val:x.yLbFormatter(e.value,{seriesIndex:n,dataPointIndex:a,w:u})}}))))}null===a&&(t=x.yLbFormatter(u.globals.series[n],r(r({},u),{},{seriesIndex:n,dataPointIndex:n}))),i.DOMHandling({i:n,t:b,j:a,ttItems:o,values:{val:t,goalVals:h,xVal:f,xAxisTTVal:g,zVal:p},seriesName:m,shared:l,pColor:v})},b=0,y=u.globals.series.length-1;b<u.globals.series.length;b++,y--)x(b,y)}},{key:"getFormatters",value:function(e){var t,i=this.w,n=i.globals.yLabelFormatters[e];return void 0!==i.globals.ttVal?Array.isArray(i.globals.ttVal)?(n=i.globals.ttVal[e]&&i.globals.ttVal[e].formatter,t=i.globals.ttVal[e]&&i.globals.ttVal[e].title&&i.globals.ttVal[e].title.formatter):(n=i.globals.ttVal.formatter,"function"==typeof i.globals.ttVal.title.formatter&&(t=i.globals.ttVal.title.formatter)):t=i.config.tooltip.y.title.formatter,"function"!=typeof n&&(n=i.globals.yLabelFormatters[0]?i.globals.yLabelFormatters[0]:function(e){return e}),"function"!=typeof t&&(t=function(e){return e}),{yLbFormatter:n,yLbTitleFormatter:t}}},{key:"getSeriesName",value:function(e){var t=e.fn,i=e.index,n=e.seriesIndex,a=e.j,r=this.w;return t(String(r.globals.seriesNames[i]),{series:r.globals.series,seriesIndex:n,dataPointIndex:a,w:r})}},{key:"DOMHandling",value:function(e){e.i;var t=e.t,i=e.j,n=e.ttItems,a=e.values,r=e.seriesName,s=e.shared,o=e.pColor,l=this.w,c=this.ttCtx,u=a.val,h=a.goalVals,d=a.xVal,f=a.xAxisTTVal,p=a.zVal,g=null;g=n[t].children,l.config.tooltip.fillSeriesColor&&(n[t].style.backgroundColor=o,g[0].style.display="none"),c.showTooltipTitle&&(null===c.tooltipTitle&&(c.tooltipTitle=l.globals.dom.baseEl.querySelector(".apexcharts-tooltip-title")),c.tooltipTitle.innerHTML=d),c.isXAxisTooltipEnabled&&(c.xaxisTooltipText.innerHTML=""!==f?f:d);var m=n[t].querySelector(".apexcharts-tooltip-text-y-label");m&&(m.innerHTML=r||"");var v=n[t].querySelector(".apexcharts-tooltip-text-y-value");v&&(v.innerHTML=void 0!==u?u:""),g[0]&&g[0].classList.contains("apexcharts-tooltip-marker")&&(l.config.tooltip.marker.fillColors&&Array.isArray(l.config.tooltip.marker.fillColors)&&(o=l.config.tooltip.marker.fillColors[t]),g[0].style.backgroundColor=o),l.config.tooltip.marker.show||(g[0].style.display="none");var x=n[t].querySelector(".apexcharts-tooltip-text-goals-label"),b=n[t].querySelector(".apexcharts-tooltip-text-goals-value");if(h.length&&l.globals.seriesGoals[t]){var y=function(){var e="<div >",t="<div>";h.forEach((function(i,n){e+=' <div style="display: flex"><span class="apexcharts-tooltip-marker" style="background-color: '.concat(i.attrs.strokeColor,'; height: 3px; border-radius: 0; top: 5px;"></span> ').concat(i.attrs.name,"</div>"),t+="<div>".concat(i.val,"</div>")})),x.innerHTML=e+"</div>",b.innerHTML=t+"</div>"};s?l.globals.seriesGoals[t][i]&&Array.isArray(l.globals.seriesGoals[t][i])?y():(x.innerHTML="",b.innerHTML=""):y()}else x.innerHTML="",b.innerHTML="";null!==p&&(n[t].querySelector(".apexcharts-tooltip-text-z-label").innerHTML=l.config.tooltip.z.title,n[t].querySelector(".apexcharts-tooltip-text-z-value").innerHTML=void 0!==p?p:""),s&&g[0]&&(null==u||l.globals.ancillaryCollapsedSeriesIndices.indexOf(t)>-1||l.globals.collapsedSeriesIndices.indexOf(t)>-1?g[0].parentNode.style.display="none":g[0].parentNode.style.display=l.config.tooltip.items.display)}},{key:"toggleActiveInactiveSeries",value:function(e){var t=this.w;if(e)this.tooltipUtil.toggleAllTooltipSeriesGroups("enable");else{this.tooltipUtil.toggleAllTooltipSeriesGroups("disable");var i=t.globals.dom.baseEl.querySelector(".apexcharts-tooltip-series-group");i&&(i.classList.add("apexcharts-active"),i.style.display=t.config.tooltip.items.display)}}},{key:"getValuesToPrint",value:function(e){var t=e.i,i=e.j,n=this.w,a=this.ctx.series.filteredSeriesX(),r="",s="",o=null,l=null,c={series:n.globals.series,seriesIndex:t,dataPointIndex:i,w:n},u=n.globals.ttZFormatter;null===i?l=n.globals.series[t]:n.globals.isXNumeric&&"treemap"!==n.config.chart.type?(r=a[t][i],0===a[t].length&&(r=a[this.tooltipUtil.getFirstActiveXArray(a)][i])):r=void 0!==n.globals.labels[i]?n.globals.labels[i]:"";var h=r;return r=n.globals.isXNumeric&&"datetime"===n.config.xaxis.type?new V(this.ctx).xLabelFormat(n.globals.ttKeyFormatter,h,h,{i:void 0,dateFormatter:new X(this.ctx).formatDate,w:this.w}):n.globals.isBarHorizontal?n.globals.yLabelFormatters[0](h,c):n.globals.xLabelFormatter(h,c),void 0!==n.config.tooltip.x.formatter&&(r=n.globals.ttKeyFormatter(h,c)),n.globals.seriesZ.length>0&&n.globals.seriesZ[t].length>0&&(o=u(n.globals.seriesZ[t][i],n)),s="function"==typeof n.config.xaxis.tooltip.formatter?n.globals.xaxisTooltipFormatter(h,c):r,{val:Array.isArray(l)?l.join(" "):l,xVal:Array.isArray(r)?r.join(" "):r,xAxisTTVal:Array.isArray(s)?s.join(" "):s,zVal:o}}},{key:"handleCustomTooltip",value:function(e){var t=e.i,i=e.j,n=e.y1,a=e.y2,r=e.w,s=this.ttCtx.getElTooltip(),o=r.config.tooltip.custom;Array.isArray(o)&&o[t]&&(o=o[t]),s.innerHTML=o({ctx:this.ctx,series:r.globals.series,seriesIndex:t,dataPointIndex:i,y1:n,y2:a,w:r})}}]),e}(),ve=function(){function e(t){o(this,e),this.ttCtx=t,this.ctx=t.ctx,this.w=t.w}return c(e,[{key:"moveXCrosshairs",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,i=this.ttCtx,n=this.w,a=i.getElXCrosshairs(),r=e-i.xcrosshairsWidth/2,s=n.globals.labels.slice().length;if(null!==t&&(r=n.globals.gridWidth/s*t),null===a||n.globals.isBarHorizontal||(a.setAttribute("x",r),a.setAttribute("x1",r),a.setAttribute("x2",r),a.setAttribute("y2",n.globals.gridHeight),a.classList.add("apexcharts-active")),r<0&&(r=0),r>n.globals.gridWidth&&(r=n.globals.gridWidth),i.isXAxisTooltipEnabled){var o=r;"tickWidth"!==n.config.xaxis.crosshairs.width&&"barWidth"!==n.config.xaxis.crosshairs.width||(o=r+i.xcrosshairsWidth/2),this.moveXAxisTooltip(o)}}},{key:"moveYCrosshairs",value:function(e){var t=this.ttCtx;null!==t.ycrosshairs&&w.setAttrs(t.ycrosshairs,{y1:e,y2:e}),null!==t.ycrosshairsHidden&&w.setAttrs(t.ycrosshairsHidden,{y1:e,y2:e})}},{key:"moveXAxisTooltip",value:function(e){var t=this.w,i=this.ttCtx;if(null!==i.xaxisTooltip&&0!==i.xcrosshairsWidth){i.xaxisTooltip.classList.add("apexcharts-active");var n,a=i.xaxisOffY+t.config.xaxis.tooltip.offsetY+t.globals.translateY+1+t.config.xaxis.offsetY;e-=i.xaxisTooltip.getBoundingClientRect().width/2,isNaN(e)||(e+=t.globals.translateX,n=new w(this.ctx).getTextRects(i.xaxisTooltipText.innerHTML),i.xaxisTooltipText.style.minWidth=n.width+"px",i.xaxisTooltip.style.left=e+"px",i.xaxisTooltip.style.top=a+"px")}}},{key:"moveYAxisTooltip",value:function(e){var t=this.w,i=this.ttCtx;null===i.yaxisTTEls&&(i.yaxisTTEls=t.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxistooltip"));var n=parseInt(i.ycrosshairsHidden.getAttribute("y1"),10),a=t.globals.translateY+n,r=i.yaxisTTEls[e].getBoundingClientRect().height,s=t.globals.translateYAxisX[e]-2;t.config.yaxis[e].opposite&&(s-=26),a-=r/2,-1===t.globals.ignoreYAxisIndexes.indexOf(e)?(i.yaxisTTEls[e].classList.add("apexcharts-active"),i.yaxisTTEls[e].style.top=a+"px",i.yaxisTTEls[e].style.left=s+t.config.yaxis[e].tooltip.offsetX+"px"):i.yaxisTTEls[e].classList.remove("apexcharts-active")}},{key:"moveTooltip",value:function(e,t){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,n=this.w,a=this.ttCtx,r=a.getElTooltip(),s=a.tooltipRect,o=null!==i?parseFloat(i):1,l=parseFloat(e)+o+5,c=parseFloat(t)+o/2;if(l>n.globals.gridWidth/2&&(l=l-s.ttWidth-o-15),l>n.globals.gridWidth-s.ttWidth-10&&(l=n.globals.gridWidth-s.ttWidth),l<-20&&(l=-20),n.config.tooltip.followCursor){var u=a.getElGrid(),h=u.getBoundingClientRect();c=a.e.clientY+n.globals.translateY-h.top-s.ttHeight/2}else n.globals.isBarHorizontal||(s.ttHeight/2+c>n.globals.gridHeight&&(c=n.globals.gridHeight-s.ttHeight+n.globals.translateY),c<0&&(c=0));isNaN(l)||(l+=n.globals.translateX,r.style.left=l+"px",r.style.top=c+"px")}},{key:"moveMarkers",value:function(e,t){var i=this.w,n=this.ttCtx;if(i.globals.markers.size[e]>0)for(var a=i.globals.dom.baseEl.querySelectorAll(" .apexcharts-series[data\\:realIndex='".concat(e,"'] .apexcharts-marker")),r=0;r<a.length;r++)parseInt(a[r].getAttribute("rel"),10)===t&&(n.marker.resetPointsSize(),n.marker.enlargeCurrentPoint(t,a[r]));else n.marker.resetPointsSize(),this.moveDynamicPointOnHover(t,e)}},{key:"moveDynamicPointOnHover",value:function(e,t){var i,n,a=this.w,r=this.ttCtx,s=a.globals.pointsArray,o=r.tooltipUtil.getHoverMarkerSize(t),l=a.config.series[t].type;if(!l||"column"!==l&&"candlestick"!==l&&"boxPlot"!==l){i=s[t][e][0],n=s[t][e][1]?s[t][e][1]:0;var c=a.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(t,"'] .apexcharts-series-markers circle"));c&&n<a.globals.gridHeight&&n>0&&(c.setAttribute("r",o),c.setAttribute("cx",i),c.setAttribute("cy",n)),this.moveXCrosshairs(i),r.fixedTooltip||this.moveTooltip(i,n,o)}}},{key:"moveDynamicPointsOnHover",value:function(e){var t,i=this.ttCtx,n=i.w,a=0,r=0,s=n.globals.pointsArray;t=new F(this.ctx).getActiveConfigSeriesIndex(!0);var o=i.tooltipUtil.getHoverMarkerSize(t);s[t]&&(a=s[t][e][0],r=s[t][e][1]);var l=i.tooltipUtil.getAllMarkers();if(null!==l)for(var c=0;c<n.globals.series.length;c++){var u=s[c];if(n.globals.comboCharts&&void 0===u&&l.splice(c,0,null),u&&u.length){var h=s[c][e][1];l[c].setAttribute("cx",a),null!==h&&!isNaN(h)&&h<n.globals.gridHeight+o&&h+o>0?(l[c]&&l[c].setAttribute("r",o),l[c]&&l[c].setAttribute("cy",h)):l[c]&&l[c].setAttribute("r",0)}}if(this.moveXCrosshairs(a),!i.fixedTooltip){var d=r||n.globals.gridHeight;this.moveTooltip(a,d,o)}}},{key:"moveStickyTooltipOverBars",value:function(e){var t=this.w,i=this.ttCtx,n=t.globals.columnSeries?t.globals.columnSeries.length:t.globals.series.length,a=n>=2&&n%2==0?Math.floor(n/2):Math.floor(n/2)+1;t.globals.isBarHorizontal&&(a=new F(this.ctx).getActiveConfigSeriesIndex(!1,"desc")+1);var r=t.globals.dom.baseEl.querySelector(".apexcharts-bar-series .apexcharts-series[rel='".concat(a,"'] path[j='").concat(e,"'], .apexcharts-candlestick-series .apexcharts-series[rel='").concat(a,"'] path[j='").concat(e,"'], .apexcharts-boxPlot-series .apexcharts-series[rel='").concat(a,"'] path[j='").concat(e,"'], .apexcharts-rangebar-series .apexcharts-series[rel='").concat(a,"'] path[j='").concat(e,"']")),s=r?parseFloat(r.getAttribute("cx")):0,o=r?parseFloat(r.getAttribute("cy")):0,l=r?parseFloat(r.getAttribute("barWidth")):0,c=r?parseFloat(r.getAttribute("barHeight")):0,u=i.getElGrid().getBoundingClientRect(),h=r.classList.contains("apexcharts-candlestick-area")||r.classList.contains("apexcharts-boxPlot-area");if(t.globals.isXNumeric?(r&&!h&&(s-=n%2!=0?l/2:0),r&&h&&t.globals.comboCharts&&(s-=l/2)):t.globals.isBarHorizontal||(s=i.xAxisTicksPositions[e-1]+i.dataPointsDividedWidth/2,isNaN(s)&&(s=i.xAxisTicksPositions[e]-i.dataPointsDividedWidth/2)),t.globals.isBarHorizontal?o+=c/3:o=i.e.clientY-u.top-i.tooltipRect.ttHeight/2,t.globals.isBarHorizontal||this.moveXCrosshairs(s),!i.fixedTooltip){var d=o||t.globals.gridHeight;this.moveTooltip(s,d)}}}]),e}(),xe=function(){function e(t){o(this,e),this.w=t.w,this.ttCtx=t,this.ctx=t.ctx,this.tooltipPosition=new ve(t)}return c(e,[{key:"drawDynamicPoints",value:function(){var e=this.w,t=new w(this.ctx),i=new M(this.ctx),n=e.globals.dom.baseEl.querySelectorAll(".apexcharts-series");n=m(n),e.config.chart.stacked&&n.sort((function(e,t){return parseFloat(e.getAttribute("data:realIndex"))-parseFloat(t.getAttribute("data:realIndex"))}));for(var a=0;a<n.length;a++){var r=n[a].querySelector(".apexcharts-series-markers-wrap");if(null!==r){var s=void 0,o="apexcharts-marker w".concat((Math.random()+1).toString(36).substring(4));"line"!==e.config.chart.type&&"area"!==e.config.chart.type||e.globals.comboCharts||e.config.tooltip.intersect||(o+=" no-pointer-events");var l=i.getMarkerConfig({cssClass:o,seriesIndex:Number(r.getAttribute("data:realIndex"))});(s=t.drawMarker(0,0,l)).node.setAttribute("default-marker-size",0);var c=document.createElementNS(e.globals.SVGNS,"g");c.classList.add("apexcharts-series-markers"),c.appendChild(s.node),r.appendChild(c)}}}},{key:"enlargeCurrentPoint",value:function(e,t){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=this.w;"bubble"!==a.config.chart.type&&this.newPointSize(e,t);var r=t.getAttribute("cx"),s=t.getAttribute("cy");if(null!==i&&null!==n&&(r=i,s=n),this.tooltipPosition.moveXCrosshairs(r),!this.fixedTooltip){if("radar"===a.config.chart.type){var o=this.ttCtx.getElGrid(),l=o.getBoundingClientRect();r=this.ttCtx.e.clientX-l.left}this.tooltipPosition.moveTooltip(r,s,a.config.markers.hover.size)}}},{key:"enlargePoints",value:function(e){for(var t=this.w,i=this,n=this.ttCtx,a=e,r=t.globals.dom.baseEl.querySelectorAll(".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker"),s=t.config.markers.hover.size,o=0;o<r.length;o++){var l=r[o].getAttribute("rel"),c=r[o].getAttribute("index");if(void 0===s&&(s=t.globals.markers.size[c]+t.config.markers.hover.sizeOffset),a===parseInt(l,10)){i.newPointSize(a,r[o]);var u=r[o].getAttribute("cx"),h=r[o].getAttribute("cy");i.tooltipPosition.moveXCrosshairs(u),n.fixedTooltip||i.tooltipPosition.moveTooltip(u,h,s)}else i.oldPointSize(r[o])}}},{key:"newPointSize",value:function(e,t){var i=this.w,n=i.config.markers.hover.size,a=0===e?t.parentNode.firstChild:t.parentNode.lastChild;if("0"!==a.getAttribute("default-marker-size")){var r=parseInt(a.getAttribute("index"),10);void 0===n&&(n=i.globals.markers.size[r]+i.config.markers.hover.sizeOffset),n<0&&(n=0),a.setAttribute("r",n)}}},{key:"oldPointSize",value:function(e){var t=parseFloat(e.getAttribute("default-marker-size"));e.setAttribute("r",t)}},{key:"resetPointsSize",value:function(){for(var e=this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker"),t=0;t<e.length;t++){var i=parseFloat(e[t].getAttribute("default-marker-size"));x.isNumber(i)&&i>=0?e[t].setAttribute("r",i):e[t].setAttribute("r",0)}}}]),e}(),be=function(){function e(t){o(this,e),this.w=t.w,this.ttCtx=t}return c(e,[{key:"getAttr",value:function(e,t){return parseFloat(e.target.getAttribute(t))}},{key:"handleHeatTreeTooltip",value:function(e){var t=e.e,i=e.opt,n=e.x,a=e.y,r=e.type,s=this.ttCtx,o=this.w;if(t.target.classList.contains("apexcharts-".concat(r,"-rect"))){var l=this.getAttr(t,"i"),c=this.getAttr(t,"j"),u=this.getAttr(t,"cx"),h=this.getAttr(t,"cy"),d=this.getAttr(t,"width"),f=this.getAttr(t,"height");if(s.tooltipLabels.drawSeriesTexts({ttItems:i.ttItems,i:l,j:c,shared:!1,e:t}),o.globals.capturedSeriesIndex=l,o.globals.capturedDataPointIndex=c,n=u+s.tooltipRect.ttWidth/2+d,a=h+s.tooltipRect.ttHeight/2-f/2,s.tooltipPosition.moveXCrosshairs(u+d/2),n>o.globals.gridWidth/2&&(n=u-s.tooltipRect.ttWidth/2+d),s.w.config.tooltip.followCursor){var p=o.globals.dom.elWrap.getBoundingClientRect();n=o.globals.clientX-p.left-(n>o.globals.gridWidth/2?s.tooltipRect.ttWidth:0),a=o.globals.clientY-p.top}}return{x:n,y:a}}},{key:"handleMarkerTooltip",value:function(e){var t,i,n=e.e,a=e.opt,r=e.x,s=e.y,o=this.w,l=this.ttCtx;if(n.target.classList.contains("apexcharts-marker")){var c=parseInt(a.paths.getAttribute("cx"),10),u=parseInt(a.paths.getAttribute("cy"),10),h=parseFloat(a.paths.getAttribute("val"));if(i=parseInt(a.paths.getAttribute("rel"),10),t=parseInt(a.paths.parentNode.parentNode.parentNode.getAttribute("rel"),10)-1,l.intersect){var d=x.findAncestor(a.paths,"apexcharts-series");d&&(t=parseInt(d.getAttribute("data:realIndex"),10))}if(l.tooltipLabels.drawSeriesTexts({ttItems:a.ttItems,i:t,j:i,shared:!l.showOnIntersect&&o.config.tooltip.shared,e:n}),"mouseup"===n.type&&l.markerClick(n,t,i),o.globals.capturedSeriesIndex=t,o.globals.capturedDataPointIndex=i,r=c,s=u+o.globals.translateY-1.4*l.tooltipRect.ttHeight,l.w.config.tooltip.followCursor){var f=l.getElGrid().getBoundingClientRect();s=l.e.clientY+o.globals.translateY-f.top}h<0&&(s=u),l.marker.enlargeCurrentPoint(i,a.paths,r,s)}return{x:r,y:s}}},{key:"handleBarTooltip",value:function(e){var t,i,n=e.e,a=e.opt,r=this.w,s=this.ttCtx,o=s.getElTooltip(),l=0,c=0,u=0,h=this.getBarTooltipXY({e:n,opt:a});t=h.i;var d=h.barHeight,f=h.j;r.globals.capturedSeriesIndex=t,r.globals.capturedDataPointIndex=f,r.globals.isBarHorizontal&&s.tooltipUtil.hasBars()||!r.config.tooltip.shared?(c=h.x,u=h.y,i=Array.isArray(r.config.stroke.width)?r.config.stroke.width[t]:r.config.stroke.width,l=c):r.globals.comboCharts||r.config.tooltip.shared||(l/=2),isNaN(u)?u=r.globals.svgHeight-s.tooltipRect.ttHeight:u<0&&(u=0);var p=parseInt(a.paths.parentNode.getAttribute("data:realIndex"),10),g=r.globals.isMultipleYAxis?r.config.yaxis[p]&&r.config.yaxis[p].reversed:r.config.yaxis[0].reversed;if(c+s.tooltipRect.ttWidth>r.globals.gridWidth&&!g?c-=s.tooltipRect.ttWidth:c<0&&(c=0),s.w.config.tooltip.followCursor){var m=s.getElGrid().getBoundingClientRect();u=s.e.clientY-m.top}null===s.tooltip&&(s.tooltip=r.globals.dom.baseEl.querySelector(".apexcharts-tooltip")),r.config.tooltip.shared||(r.globals.comboBarCount>0?s.tooltipPosition.moveXCrosshairs(l+i/2):s.tooltipPosition.moveXCrosshairs(l)),!s.fixedTooltip&&(!r.config.tooltip.shared||r.globals.isBarHorizontal&&s.tooltipUtil.hasBars())&&(g&&(c-=s.tooltipRect.ttWidth)<0&&(c=0),!g||r.globals.isBarHorizontal&&s.tooltipUtil.hasBars()||(u=u+d-2*(r.globals.series[t][f]<0?d:0)),s.tooltipRect.ttHeight+u>r.globals.gridHeight?u=r.globals.gridHeight-s.tooltipRect.ttHeight+r.globals.translateY:(u=u+r.globals.translateY-s.tooltipRect.ttHeight/2)<0&&(u=0),o.style.left=c+r.globals.translateX+"px",o.style.top=u+"px")}},{key:"getBarTooltipXY",value:function(e){var t=e.e,i=e.opt,n=this.w,a=null,r=this.ttCtx,s=0,o=0,l=0,c=0,u=0,h=t.target.classList;if(h.contains("apexcharts-bar-area")||h.contains("apexcharts-candlestick-area")||h.contains("apexcharts-boxPlot-area")||h.contains("apexcharts-rangebar-area")){var d=t.target,f=d.getBoundingClientRect(),p=i.elGrid.getBoundingClientRect(),g=f.height;u=f.height;var m=f.width,v=parseInt(d.getAttribute("cx"),10),x=parseInt(d.getAttribute("cy"),10);c=parseFloat(d.getAttribute("barWidth"));var b="touchmove"===t.type?t.touches[0].clientX:t.clientX;a=parseInt(d.getAttribute("j"),10),s=parseInt(d.parentNode.getAttribute("rel"),10)-1;var y=d.getAttribute("data-range-y1"),w=d.getAttribute("data-range-y2");n.globals.comboCharts&&(s=parseInt(d.parentNode.getAttribute("data:realIndex"),10)),r.tooltipLabels.drawSeriesTexts({ttItems:i.ttItems,i:s,j:a,y1:y?parseInt(y,10):null,y2:w?parseInt(w,10):null,shared:!r.showOnIntersect&&n.config.tooltip.shared,e:t}),n.config.tooltip.followCursor?n.globals.isBarHorizontal?(o=b-p.left+15,l=x-r.dataPointsDividedHeight+g/2-r.tooltipRect.ttHeight/2):(o=n.globals.isXNumeric?v-m/2:v-r.dataPointsDividedWidth+m/2,l=t.clientY-p.top-r.tooltipRect.ttHeight/2-15):n.globals.isBarHorizontal?((o=v)<r.xyRatios.baseLineInvertedY&&(o=v-r.tooltipRect.ttWidth),l=x-r.dataPointsDividedHeight+g/2-r.tooltipRect.ttHeight/2):(o=n.globals.isXNumeric?v-m/2:v-r.dataPointsDividedWidth+m/2,l=x)}return{x:o,y:l,barHeight:u,barWidth:c,i:s,j:a}}}]),e}(),ye=function(){function e(t){o(this,e),this.w=t.w,this.ttCtx=t}return c(e,[{key:"drawXaxisTooltip",value:function(){var e=this.w,t=this.ttCtx,i="bottom"===e.config.xaxis.position;t.xaxisOffY=i?e.globals.gridHeight+1:-e.globals.xAxisHeight-e.config.xaxis.axisTicks.height+3;var n=i?"apexcharts-xaxistooltip apexcharts-xaxistooltip-bottom":"apexcharts-xaxistooltip apexcharts-xaxistooltip-top",a=e.globals.dom.elWrap;t.isXAxisTooltipEnabled&&null===e.globals.dom.baseEl.querySelector(".apexcharts-xaxistooltip")&&(t.xaxisTooltip=document.createElement("div"),t.xaxisTooltip.setAttribute("class",n+" apexcharts-theme-"+e.config.tooltip.theme),a.appendChild(t.xaxisTooltip),t.xaxisTooltipText=document.createElement("div"),t.xaxisTooltipText.classList.add("apexcharts-xaxistooltip-text"),t.xaxisTooltipText.style.fontFamily=e.config.xaxis.tooltip.style.fontFamily||e.config.chart.fontFamily,t.xaxisTooltipText.style.fontSize=e.config.xaxis.tooltip.style.fontSize,t.xaxisTooltip.appendChild(t.xaxisTooltipText))}},{key:"drawYaxisTooltip",value:function(){for(var e=this.w,t=this.ttCtx,i=function(i){var n=e.config.yaxis[i].opposite||e.config.yaxis[i].crosshairs.opposite;t.yaxisOffX=n?e.globals.gridWidth+1:1;var a="apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(i,n?" apexcharts-yaxistooltip-right":" apexcharts-yaxistooltip-left");e.globals.yAxisSameScaleIndices.map((function(t,n){t.map((function(t,n){n===i&&(a+=e.config.yaxis[n].show?" ":" apexcharts-yaxistooltip-hidden")}))}));var r=e.globals.dom.elWrap;null===e.globals.dom.baseEl.querySelector(".apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(i))&&(t.yaxisTooltip=document.createElement("div"),t.yaxisTooltip.setAttribute("class",a+" apexcharts-theme-"+e.config.tooltip.theme),r.appendChild(t.yaxisTooltip),0===i&&(t.yaxisTooltipText=[]),t.yaxisTooltipText[i]=document.createElement("div"),t.yaxisTooltipText[i].classList.add("apexcharts-yaxistooltip-text"),t.yaxisTooltip.appendChild(t.yaxisTooltipText[i]))},n=0;n<e.config.yaxis.length;n++)i(n)}},{key:"setXCrosshairWidth",value:function(){var e=this.w,t=this.ttCtx,i=t.getElXCrosshairs();if(t.xcrosshairsWidth=parseInt(e.config.xaxis.crosshairs.width,10),e.globals.comboCharts){var n=e.globals.dom.baseEl.querySelector(".apexcharts-bar-area");if(null!==n&&"barWidth"===e.config.xaxis.crosshairs.width){var a=parseFloat(n.getAttribute("barWidth"));t.xcrosshairsWidth=a}else if("tickWidth"===e.config.xaxis.crosshairs.width){var r=e.globals.labels.length;t.xcrosshairsWidth=e.globals.gridWidth/r}}else if("tickWidth"===e.config.xaxis.crosshairs.width){var s=e.globals.labels.length;t.xcrosshairsWidth=e.globals.gridWidth/s}else if("barWidth"===e.config.xaxis.crosshairs.width){var o=e.globals.dom.baseEl.querySelector(".apexcharts-bar-area");if(null!==o){var l=parseFloat(o.getAttribute("barWidth"));t.xcrosshairsWidth=l}else t.xcrosshairsWidth=1}e.globals.isBarHorizontal&&(t.xcrosshairsWidth=0),null!==i&&t.xcrosshairsWidth>0&&i.setAttribute("width",t.xcrosshairsWidth)}},{key:"handleYCrosshair",value:function(){var e=this.w,t=this.ttCtx;t.ycrosshairs=e.globals.dom.baseEl.querySelector(".apexcharts-ycrosshairs"),t.ycrosshairsHidden=e.globals.dom.baseEl.querySelector(".apexcharts-ycrosshairs-hidden")}},{key:"drawYaxisTooltipText",value:function(e,t,i){var n=this.ttCtx,a=this.w,r=a.globals.yLabelFormatters[e];if(n.yaxisTooltips[e]){var s=n.getElGrid().getBoundingClientRect(),o=(t-s.top)*i.yRatio[e],l=a.globals.maxYArr[e]-a.globals.minYArr[e],c=a.globals.minYArr[e]+(l-o);n.tooltipPosition.moveYCrosshairs(t-s.top),n.yaxisTooltipText[e].innerHTML=r(c),n.tooltipPosition.moveYAxisTooltip(e)}}}]),e}(),we=function(){function e(t){o(this,e),this.ctx=t,this.w=t.w;var i=this.w;this.tConfig=i.config.tooltip,this.tooltipUtil=new ge(this),this.tooltipLabels=new me(this),this.tooltipPosition=new ve(this),this.marker=new xe(this),this.intersect=new be(this),this.axesTooltip=new ye(this),this.showOnIntersect=this.tConfig.intersect,this.showTooltipTitle=this.tConfig.x.show,this.fixedTooltip=this.tConfig.fixed.enabled,this.xaxisTooltip=null,this.yaxisTTEls=null,this.isBarShared=!i.globals.isBarHorizontal&&this.tConfig.shared,this.lastHoverTime=Date.now()}return c(e,[{key:"getElTooltip",value:function(e){return e||(e=this),e.w.globals.dom.baseEl?e.w.globals.dom.baseEl.querySelector(".apexcharts-tooltip"):null}},{key:"getElXCrosshairs",value:function(){return this.w.globals.dom.baseEl.querySelector(".apexcharts-xcrosshairs")}},{key:"getElGrid",value:function(){return this.w.globals.dom.baseEl.querySelector(".apexcharts-grid")}},{key:"drawTooltip",value:function(e){var t=this.w;this.xyRatios=e,this.isXAxisTooltipEnabled=t.config.xaxis.tooltip.enabled&&t.globals.axisCharts,this.yaxisTooltips=t.config.yaxis.map((function(e,i){return!!(e.show&&e.tooltip.enabled&&t.globals.axisCharts)})),this.allTooltipSeriesGroups=[],t.globals.axisCharts||(this.showTooltipTitle=!1);var i=document.createElement("div");if(i.classList.add("apexcharts-tooltip"),i.classList.add("apexcharts-theme-".concat(this.tConfig.theme)),t.globals.dom.elWrap.appendChild(i),t.globals.axisCharts){this.axesTooltip.drawXaxisTooltip(),this.axesTooltip.drawYaxisTooltip(),this.axesTooltip.setXCrosshairWidth(),this.axesTooltip.handleYCrosshair();var n=new q(this.ctx);this.xAxisTicksPositions=n.getXAxisTicksPositions()}if(!t.globals.comboCharts&&!this.tConfig.intersect&&"rangeBar"!==t.config.chart.type||this.tConfig.shared||(this.showOnIntersect=!0),0!==t.config.markers.size&&0!==t.globals.markers.largestSize||this.marker.drawDynamicPoints(this),t.globals.collapsedSeries.length!==t.globals.series.length){this.dataPointsDividedHeight=t.globals.gridHeight/t.globals.dataPoints,this.dataPointsDividedWidth=t.globals.gridWidth/t.globals.dataPoints,this.showTooltipTitle&&(this.tooltipTitle=document.createElement("div"),this.tooltipTitle.classList.add("apexcharts-tooltip-title"),this.tooltipTitle.style.fontFamily=this.tConfig.style.fontFamily||t.config.chart.fontFamily,this.tooltipTitle.style.fontSize=this.tConfig.style.fontSize,i.appendChild(this.tooltipTitle));var a=t.globals.series.length;(t.globals.xyCharts||t.globals.comboCharts)&&this.tConfig.shared&&(a=this.showOnIntersect?1:t.globals.series.length),this.legendLabels=t.globals.dom.baseEl.querySelectorAll(".apexcharts-legend-text"),this.ttItems=this.createTTElements(a),this.addSVGEvents()}}},{key:"createTTElements",value:function(e){for(var t=this,i=this.w,n=[],a=this.getElTooltip(),r=function(r){var s=document.createElement("div");s.classList.add("apexcharts-tooltip-series-group"),s.style.order=i.config.tooltip.inverseOrder?e-r:r+1,t.tConfig.shared&&t.tConfig.enabledOnSeries&&Array.isArray(t.tConfig.enabledOnSeries)&&t.tConfig.enabledOnSeries.indexOf(r)<0&&s.classList.add("apexcharts-tooltip-series-group-hidden");var o=document.createElement("span");o.classList.add("apexcharts-tooltip-marker"),o.style.backgroundColor=i.globals.colors[r],s.appendChild(o);var l=document.createElement("div");l.classList.add("apexcharts-tooltip-text"),l.style.fontFamily=t.tConfig.style.fontFamily||i.config.chart.fontFamily,l.style.fontSize=t.tConfig.style.fontSize,["y","goals","z"].forEach((function(e){var t=document.createElement("div");t.classList.add("apexcharts-tooltip-".concat(e,"-group"));var i=document.createElement("span");i.classList.add("apexcharts-tooltip-text-".concat(e,"-label")),t.appendChild(i);var n=document.createElement("span");n.classList.add("apexcharts-tooltip-text-".concat(e,"-value")),t.appendChild(n),l.appendChild(t)})),s.appendChild(l),a.appendChild(s),n.push(s)},s=0;s<e;s++)r(s);return n}},{key:"addSVGEvents",value:function(){var e=this.w,t=e.config.chart.type,i=this.getElTooltip(),n=!("bar"!==t&&"candlestick"!==t&&"boxPlot"!==t&&"rangeBar"!==t),a="area"===t||"line"===t||"scatter"===t||"bubble"===t||"radar"===t,r=e.globals.dom.Paper.node,s=this.getElGrid();s&&(this.seriesBound=s.getBoundingClientRect());var o,l=[],c=[],u={hoverArea:r,elGrid:s,tooltipEl:i,tooltipY:l,tooltipX:c,ttItems:this.ttItems};if(e.globals.axisCharts&&(a?o=e.globals.dom.baseEl.querySelectorAll(".apexcharts-series[data\\:longestSeries='true'] .apexcharts-marker"):n?o=e.globals.dom.baseEl.querySelectorAll(".apexcharts-series .apexcharts-bar-area, .apexcharts-series .apexcharts-candlestick-area, .apexcharts-series .apexcharts-boxPlot-area, .apexcharts-series .apexcharts-rangebar-area"):"heatmap"!==t&&"treemap"!==t||(o=e.globals.dom.baseEl.querySelectorAll(".apexcharts-series .apexcharts-heatmap, .apexcharts-series .apexcharts-treemap")),o&&o.length))for(var h=0;h<o.length;h++)l.push(o[h].getAttribute("cy")),c.push(o[h].getAttribute("cx"));if(e.globals.xyCharts&&!this.showOnIntersect||e.globals.comboCharts&&!this.showOnIntersect||n&&this.tooltipUtil.hasBars()&&this.tConfig.shared)this.addPathsEventListeners([r],u);else if(n&&!e.globals.comboCharts||a&&this.showOnIntersect)this.addDatapointEventsListeners(u);else if(!e.globals.axisCharts||"heatmap"===t||"treemap"===t){var d=e.globals.dom.baseEl.querySelectorAll(".apexcharts-series");this.addPathsEventListeners(d,u)}if(this.showOnIntersect){var f=e.globals.dom.baseEl.querySelectorAll(".apexcharts-line-series .apexcharts-marker, .apexcharts-area-series .apexcharts-marker");f.length>0&&this.addPathsEventListeners(f,u),this.tooltipUtil.hasBars()&&!this.tConfig.shared&&this.addDatapointEventsListeners(u)}}},{key:"drawFixedTooltipRect",value:function(){var e=this.w,t=this.getElTooltip(),i=t.getBoundingClientRect(),n=i.width+10,a=i.height+10,r=this.tConfig.fixed.offsetX,s=this.tConfig.fixed.offsetY,o=this.tConfig.fixed.position.toLowerCase();return o.indexOf("right")>-1&&(r=r+e.globals.svgWidth-n+10),o.indexOf("bottom")>-1&&(s=s+e.globals.svgHeight-a-10),t.style.left=r+"px",t.style.top=s+"px",{x:r,y:s,ttWidth:n,ttHeight:a}}},{key:"addDatapointEventsListeners",value:function(e){var t=this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series-markers .apexcharts-marker, .apexcharts-bar-area, .apexcharts-candlestick-area, .apexcharts-boxPlot-area, .apexcharts-rangebar-area");this.addPathsEventListeners(t,e)}},{key:"addPathsEventListeners",value:function(e,t){for(var i=this,n=function(n){var a={paths:e[n],tooltipEl:t.tooltipEl,tooltipY:t.tooltipY,tooltipX:t.tooltipX,elGrid:t.elGrid,hoverArea:t.hoverArea,ttItems:t.ttItems};["mousemove","mouseup","touchmove","mouseout","touchend"].map((function(t){return e[n].addEventListener(t,i.onSeriesHover.bind(i,a),{capture:!1,passive:!0})}))},a=0;a<e.length;a++)n(a)}},{key:"onSeriesHover",value:function(e,t){var i=this,n=Date.now()-this.lastHoverTime;n>=100?this.seriesHover(e,t):(clearTimeout(this.seriesHoverTimeout),this.seriesHoverTimeout=setTimeout((function(){i.seriesHover(e,t)}),100-n))}},{key:"seriesHover",value:function(e,t){var i=this;this.lastHoverTime=Date.now();var n=[],a=this.w;a.config.chart.group&&(n=this.ctx.getGroupedCharts()),a.globals.axisCharts&&(a.globals.minX===-1/0&&a.globals.maxX===1/0||0===a.globals.dataPoints)||(n.length?n.forEach((function(n){var a=i.getElTooltip(n),r={paths:e.paths,tooltipEl:a,tooltipY:e.tooltipY,tooltipX:e.tooltipX,elGrid:e.elGrid,hoverArea:e.hoverArea,ttItems:n.w.globals.tooltip.ttItems};n.w.globals.minX===i.w.globals.minX&&n.w.globals.maxX===i.w.globals.maxX&&n.w.globals.tooltip.seriesHoverByContext({chartCtx:n,ttCtx:n.w.globals.tooltip,opt:r,e:t})})):this.seriesHoverByContext({chartCtx:this.ctx,ttCtx:this.w.globals.tooltip,opt:e,e:t}))}},{key:"seriesHoverByContext",value:function(e){var t=e.chartCtx,i=e.ttCtx,n=e.opt,a=e.e,r=t.w,s=this.getElTooltip();s&&(i.tooltipRect={x:0,y:0,ttWidth:s.getBoundingClientRect().width,ttHeight:s.getBoundingClientRect().height},i.e=a,!i.tooltipUtil.hasBars()||r.globals.comboCharts||i.isBarShared||this.tConfig.onDatasetHover.highlightDataSeries&&new F(t).toggleSeriesOnHover(a,a.target.parentNode),i.fixedTooltip&&i.drawFixedTooltipRect(),r.globals.axisCharts?i.axisChartsTooltips({e:a,opt:n,tooltipRect:i.tooltipRect}):i.nonAxisChartsTooltips({e:a,opt:n,tooltipRect:i.tooltipRect}))}},{key:"axisChartsTooltips",value:function(e){var t,i,n=e.e,a=e.opt,r=this.w,s=a.elGrid.getBoundingClientRect(),o="touchmove"===n.type?n.touches[0].clientX:n.clientX,l="touchmove"===n.type?n.touches[0].clientY:n.clientY;if(this.clientY=l,this.clientX=o,r.globals.capturedSeriesIndex=-1,r.globals.capturedDataPointIndex=-1,l<s.top||l>s.top+s.height)this.handleMouseOut(a);else{if(Array.isArray(this.tConfig.enabledOnSeries)&&!r.config.tooltip.shared){var c=parseInt(a.paths.getAttribute("index"),10);if(this.tConfig.enabledOnSeries.indexOf(c)<0)return void this.handleMouseOut(a)}var u=this.getElTooltip(),h=this.getElXCrosshairs(),d=r.globals.xyCharts||"bar"===r.config.chart.type&&!r.globals.isBarHorizontal&&this.tooltipUtil.hasBars()&&this.tConfig.shared||r.globals.comboCharts&&this.tooltipUtil.hasBars();if("mousemove"===n.type||"touchmove"===n.type||"mouseup"===n.type){if(r.globals.collapsedSeries.length+r.globals.ancillaryCollapsedSeries.length===r.globals.series.length)return;null!==h&&h.classList.add("apexcharts-active");var f=this.yaxisTooltips.filter((function(e){return!0===e}));if(null!==this.ycrosshairs&&f.length&&this.ycrosshairs.classList.add("apexcharts-active"),d&&!this.showOnIntersect)this.handleStickyTooltip(n,o,l,a);else if("heatmap"===r.config.chart.type||"treemap"===r.config.chart.type){var p=this.intersect.handleHeatTreeTooltip({e:n,opt:a,x:t,y:i,type:r.config.chart.type});t=p.x,i=p.y,u.style.left=t+"px",u.style.top=i+"px"}else this.tooltipUtil.hasBars()&&this.intersect.handleBarTooltip({e:n,opt:a}),this.tooltipUtil.hasMarkers()&&this.intersect.handleMarkerTooltip({e:n,opt:a,x:t,y:i});if(this.yaxisTooltips.length)for(var g=0;g<r.config.yaxis.length;g++)this.axesTooltip.drawYaxisTooltipText(g,l,this.xyRatios);a.tooltipEl.classList.add("apexcharts-active")}else"mouseout"!==n.type&&"touchend"!==n.type||this.handleMouseOut(a)}}},{key:"nonAxisChartsTooltips",value:function(e){var t=e.e,i=e.opt,n=e.tooltipRect,a=this.w,r=i.paths.getAttribute("rel"),s=this.getElTooltip(),o=a.globals.dom.elWrap.getBoundingClientRect();if("mousemove"===t.type||"touchmove"===t.type){s.classList.add("apexcharts-active"),this.tooltipLabels.drawSeriesTexts({ttItems:i.ttItems,i:parseInt(r,10)-1,shared:!1});var l=a.globals.clientX-o.left-n.ttWidth/2,c=a.globals.clientY-o.top-n.ttHeight-10;if(s.style.left=l+"px",s.style.top=c+"px",a.config.legend.tooltipHoverFormatter){var u=r-1,h=(0,a.config.legend.tooltipHoverFormatter)(this.legendLabels[u].getAttribute("data:default-text"),{seriesIndex:u,dataPointIndex:u,w:a});this.legendLabels[u].innerHTML=h}}else"mouseout"!==t.type&&"touchend"!==t.type||(s.classList.remove("apexcharts-active"),a.config.legend.tooltipHoverFormatter&&this.legendLabels.forEach((function(e){var t=e.getAttribute("data:default-text");e.innerHTML=decodeURIComponent(t)})))}},{key:"handleStickyTooltip",value:function(e,t,i,n){var a=this.w,r=this.tooltipUtil.getNearestValues({context:this,hoverArea:n.hoverArea,elGrid:n.elGrid,clientX:t,clientY:i}),s=r.j,o=r.capturedSeries,l=n.elGrid.getBoundingClientRect();r.hoverX<0||r.hoverX>l.width?this.handleMouseOut(n):null!==o?this.handleStickyCapturedSeries(e,o,n,s):(this.tooltipUtil.isXoverlap(s)||a.globals.isBarHorizontal)&&this.create(e,this,0,s,n.ttItems)}},{key:"handleStickyCapturedSeries",value:function(e,t,i,n){var a=this.w;this.tConfig.shared||null!==a.globals.series[t][n]?void 0!==a.globals.series[t][n]?this.tConfig.shared&&this.tooltipUtil.isXoverlap(n)&&this.tooltipUtil.isInitialSeriesSameLen()?this.create(e,this,t,n,i.ttItems):this.create(e,this,t,n,i.ttItems,!1):this.tooltipUtil.isXoverlap(n)&&this.create(e,this,0,n,i.ttItems):this.handleMouseOut(i)}},{key:"deactivateHoverFilter",value:function(){for(var e=this.w,t=new w(this.ctx),i=e.globals.dom.Paper.select(".apexcharts-bar-area"),n=0;n<i.length;n++)t.pathMouseLeave(i[n])}},{key:"handleMouseOut",value:function(e){var t=this.w,i=this.getElXCrosshairs();if(e.tooltipEl.classList.remove("apexcharts-active"),this.deactivateHoverFilter(),"bubble"!==t.config.chart.type&&this.marker.resetPointsSize(),null!==i&&i.classList.remove("apexcharts-active"),null!==this.ycrosshairs&&this.ycrosshairs.classList.remove("apexcharts-active"),this.isXAxisTooltipEnabled&&this.xaxisTooltip.classList.remove("apexcharts-active"),this.yaxisTooltips.length){null===this.yaxisTTEls&&(this.yaxisTTEls=t.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxistooltip"));for(var n=0;n<this.yaxisTTEls.length;n++)this.yaxisTTEls[n].classList.remove("apexcharts-active")}t.config.legend.tooltipHoverFormatter&&this.legendLabels.forEach((function(e){var t=e.getAttribute("data:default-text");e.innerHTML=decodeURIComponent(t)}))}},{key:"markerClick",value:function(e,t,i){var n=this.w;"function"==typeof n.config.chart.events.markerClick&&n.config.chart.events.markerClick(e,this.ctx,{seriesIndex:t,dataPointIndex:i,w:n}),this.ctx.events.fireEvent("markerClick",[e,this.ctx,{seriesIndex:t,dataPointIndex:i,w:n}])}},{key:"create",value:function(e,t,i,n,a){var r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,s=this.w,o=t;"mouseup"===e.type&&this.markerClick(e,i,n),null===r&&(r=this.tConfig.shared);var l=this.tooltipUtil.hasMarkers(),c=this.tooltipUtil.getElBars();if(s.config.legend.tooltipHoverFormatter){var u=s.config.legend.tooltipHoverFormatter,h=Array.from(this.legendLabels);h.forEach((function(e){var t=e.getAttribute("data:default-text");e.innerHTML=decodeURIComponent(t)}));for(var d=0;d<h.length;d++){var f=h[d],p=parseInt(f.getAttribute("i"),10),g=decodeURIComponent(f.getAttribute("data:default-text")),m=u(g,{seriesIndex:r?p:i,dataPointIndex:n,w:s});if(r)f.innerHTML=s.globals.collapsedSeriesIndices.indexOf(p)<0?m:g;else if(f.innerHTML=p===i?m:g,i===p)break}}if(r){if(o.tooltipLabels.drawSeriesTexts({ttItems:a,i,j:n,shared:!this.showOnIntersect&&this.tConfig.shared}),l&&(s.globals.markers.largestSize>0?o.marker.enlargePoints(n):o.tooltipPosition.moveDynamicPointsOnHover(n)),this.tooltipUtil.hasBars()&&(this.barSeriesHeight=this.tooltipUtil.getBarsHeight(c),this.barSeriesHeight>0)){var v=new w(this.ctx),x=s.globals.dom.Paper.select(".apexcharts-bar-area[j='".concat(n,"']"));this.deactivateHoverFilter(),this.tooltipPosition.moveStickyTooltipOverBars(n);for(var b=0;b<x.length;b++)v.pathMouseEnter(x[b])}}else o.tooltipLabels.drawSeriesTexts({shared:!1,ttItems:a,i,j:n}),this.tooltipUtil.hasBars()&&o.tooltipPosition.moveStickyTooltipOverBars(n),l&&o.tooltipPosition.moveMarkers(i,n)}}]),e}(),ke=function(e){h(i,D);var t=g(i);function i(){return o(this,i),t.apply(this,arguments)}return c(i,[{key:"draw",value:function(e,t){var i=this,n=this.w;this.graphics=new w(this.ctx),this.bar=new D(this.ctx,this.xyRatios);var a=new A(this.ctx,n);e=a.getLogSeries(e),this.yRatio=a.getLogYRatios(this.yRatio),this.barHelpers.initVariables(e),"100%"===n.config.chart.stackType&&(e=n.globals.seriesPercent.slice()),this.series=e,this.totalItems=0,this.prevY=[],this.prevX=[],this.prevYF=[],this.prevXF=[],this.prevYVal=[],this.prevXVal=[],this.xArrj=[],this.xArrjF=[],this.xArrjVal=[],this.yArrj=[],this.yArrjF=[],this.yArrjVal=[];for(var s=0;s<e.length;s++)e[s].length>0&&(this.totalItems+=e[s].length);for(var o=this.graphics.group({class:"apexcharts-bar-series apexcharts-plot-series"}),l=0,c=0,u=function(a,s){var u=void 0,h=void 0,d=void 0,f=void 0,p=[],g=[],m=n.globals.comboCharts?t[a]:a;i.yRatio.length>1&&(i.yaxisIndex=m),i.isReversed=n.config.yaxis[i.yaxisIndex]&&n.config.yaxis[i.yaxisIndex].reversed;var v=i.graphics.group({class:"apexcharts-series",seriesName:x.escapeString(n.globals.seriesNames[m]),rel:a+1,"data:realIndex":m});i.ctx.series.addCollapsedClassToSeries(v,m);var b=i.graphics.group({class:"apexcharts-datalabels","data:realIndex":m}),y=0,w=0,k=i.initialPositions(l,c,u,h,d,f);c=k.y,y=k.barHeight,h=k.yDivision,f=k.zeroW,l=k.x,w=k.barWidth,u=k.xDivision,d=k.zeroH,i.yArrj=[],i.yArrjF=[],i.yArrjVal=[],i.xArrj=[],i.xArrjF=[],i.xArrjVal=[],1===i.prevY.length&&i.prevY[0].every((function(e){return isNaN(e)}))&&(i.prevY[0]=i.prevY[0].map((function(e){return d})),i.prevYF[0]=i.prevYF[0].map((function(e){return 0})));for(var S=0;S<n.globals.dataPoints;S++){var A=i.barHelpers.getStrokeWidth(a,S,m),C={indexes:{i:a,j:S,realIndex:m,bc:s},strokeWidth:A,x:l,y:c,elSeries:v},E=null;i.isHorizontal?(E=i.drawStackedBarPaths(r(r({},C),{},{zeroW:f,barHeight:y,yDivision:h})),w=i.series[a][S]/i.invertedYRatio):(E=i.drawStackedColumnPaths(r(r({},C),{},{xDivision:u,barWidth:w,zeroH:d})),y=i.series[a][S]/i.yRatio[i.yaxisIndex]),c=E.y,l=E.x,p.push(l),g.push(c);var P=i.barHelpers.getPathFillColor(e,a,S,m);v=i.renderSeries({realIndex:m,pathFill:P,j:S,i:a,pathFrom:E.pathFrom,pathTo:E.pathTo,strokeWidth:A,elSeries:v,x:l,y:c,series:e,barHeight:y,barWidth:w,elDataLabelsWrap:b,type:"bar",visibleSeries:0})}n.globals.seriesXvalues[m]=p,n.globals.seriesYvalues[m]=g,i.prevY.push(i.yArrj),i.prevYF.push(i.yArrjF),i.prevYVal.push(i.yArrjVal),i.prevX.push(i.xArrj),i.prevXF.push(i.xArrjF),i.prevXVal.push(i.xArrjVal),o.add(v)},h=0,d=0;h<e.length;h++,d++)u(h,d);return o}},{key:"initialPositions",value:function(e,t,i,n,a,r){var s,o,l=this.w;return this.isHorizontal?(s=(s=n=l.globals.gridHeight/l.globals.dataPoints)*parseInt(l.config.plotOptions.bar.barHeight,10)/100,r=this.baseLineInvertedY+l.globals.padHorizontal+(this.isReversed?l.globals.gridWidth:0)-(this.isReversed?2*this.baseLineInvertedY:0),t=(n-s)/2):(o=i=l.globals.gridWidth/l.globals.dataPoints,o=l.globals.isXNumeric&&l.globals.dataPoints>1?(i=l.globals.minXDiff/this.xRatio)*parseInt(this.barOptions.columnWidth,10)/100:o*parseInt(l.config.plotOptions.bar.columnWidth,10)/100,a=this.baseLineY[this.yaxisIndex]+(this.isReversed?l.globals.gridHeight:0)-(this.isReversed?2*this.baseLineY[this.yaxisIndex]:0),e=l.globals.padHorizontal+(i-o)/2),{x:e,y:t,yDivision:n,xDivision:i,barHeight:s,barWidth:o,zeroH:a,zeroW:r}}},{key:"drawStackedBarPaths",value:function(e){for(var t,i=e.indexes,n=e.barHeight,a=e.strokeWidth,r=e.zeroW,s=e.x,o=e.y,l=e.yDivision,c=e.elSeries,u=this.w,h=o,d=i.i,f=i.j,p=0,g=0;g<this.prevXF.length;g++)p+=this.prevXF[g][f];if(d>0){var m=r;this.prevXVal[d-1][f]<0?m=this.series[d][f]>=0?this.prevX[d-1][f]+p-2*(this.isReversed?p:0):this.prevX[d-1][f]:this.prevXVal[d-1][f]>=0&&(m=this.series[d][f]>=0?this.prevX[d-1][f]:this.prevX[d-1][f]-p+2*(this.isReversed?p:0)),t=m}else t=r;s=null===this.series[d][f]?t:t+this.series[d][f]/this.invertedYRatio-2*(this.isReversed?this.series[d][f]/this.invertedYRatio:0);var v=this.barHelpers.getBarpaths({barYPosition:h,barHeight:n,x1:t,x2:s,strokeWidth:a,series:this.series,realIndex:i.realIndex,i:d,j:f,w:u});return this.barHelpers.barBackground({j:f,i:d,y1:h,y2:n,elSeries:c}),o+=l,{pathTo:v.pathTo,pathFrom:v.pathFrom,x:s,y:o}}},{key:"drawStackedColumnPaths",value:function(e){var t=e.indexes,i=e.x,n=e.y,a=e.xDivision,r=e.barWidth,s=e.zeroH;e.strokeWidth;var o=e.elSeries,l=this.w,c=t.i,u=t.j,h=t.bc;if(l.globals.isXNumeric){var d=l.globals.seriesX[c][u];d||(d=0),i=(d-l.globals.minX)/this.xRatio-r/2}for(var f,p=i,g=0,m=0;m<this.prevYF.length;m++)g+=isNaN(this.prevYF[m][u])?0:this.prevYF[m][u];if(c>0&&!l.globals.isXNumeric||c>0&&l.globals.isXNumeric&&l.globals.seriesX[c-1][u]===l.globals.seriesX[c][u]){var v,x,b=Math.min(this.yRatio.length+1,c+1);if(void 0!==this.prevY[c-1])for(var y=1;y<b;y++)if(!isNaN(this.prevY[c-y][u])){x=this.prevY[c-y][u];break}for(var w=1;w<b;w++){if(this.prevYVal[c-w][u]<0){v=this.series[c][u]>=0?x-g+2*(this.isReversed?g:0):x;break}if(this.prevYVal[c-w][u]>=0){v=this.series[c][u]>=0?x:x+g-2*(this.isReversed?g:0);break}}void 0===v&&(v=l.globals.gridHeight),f=this.prevYF[0].every((function(e){return 0===e}))&&this.prevYF.slice(1,c).every((function(e){return e.every((function(e){return isNaN(e)}))}))?l.globals.gridHeight-s:v}else f=l.globals.gridHeight-s;n=f-this.series[c][u]/this.yRatio[this.yaxisIndex]+2*(this.isReversed?this.series[c][u]/this.yRatio[this.yaxisIndex]:0);var k=this.barHelpers.getColumnPaths({barXPosition:p,barWidth:r,y1:f,y2:n,yRatio:this.yRatio[this.yaxisIndex],strokeWidth:this.strokeWidth,series:this.series,realIndex:t.realIndex,i:c,j:u,w:l});return this.barHelpers.barBackground({bc:h,j:u,i:c,x1:p,x2:r,elSeries:o}),i+=a,{pathTo:k.pathTo,pathFrom:k.pathFrom,x:l.globals.isXNumeric?i-a:i,y:n}}}]),i}(),Se=function(e){h(i,D);var t=g(i);function i(){return o(this,i),t.apply(this,arguments)}return c(i,[{key:"draw",value:function(e,t){var i=this,n=this.w,a=new w(this.ctx),s=new I(this.ctx);this.candlestickOptions=this.w.config.plotOptions.candlestick,this.boxOptions=this.w.config.plotOptions.boxPlot,this.isHorizontal=n.config.plotOptions.bar.horizontal;var o=new A(this.ctx,n);e=o.getLogSeries(e),this.series=e,this.yRatio=o.getLogYRatios(this.yRatio),this.barHelpers.initVariables(e);for(var l=a.group({class:"apexcharts-".concat(n.config.chart.type,"-series apexcharts-plot-series")}),c=function(o){i.isBoxPlot="boxPlot"===n.config.chart.type||"boxPlot"===n.config.series[o].type;var c,u,h,d,f,p,g=void 0,m=void 0,v=[],b=[],y=n.globals.comboCharts?t[o]:o,w=a.group({class:"apexcharts-series",seriesName:x.escapeString(n.globals.seriesNames[y]),rel:o+1,"data:realIndex":y});i.ctx.series.addCollapsedClassToSeries(w,y),e[o].length>0&&(i.visibleI=i.visibleI+1),i.yRatio.length>1&&(i.yaxisIndex=y);var k=i.barHelpers.initialPositions();m=k.y,f=k.barHeight,u=k.yDivision,d=k.zeroW,g=k.x,p=k.barWidth,c=k.xDivision,h=k.zeroH,b.push(g+p/2);for(var S=a.group({class:"apexcharts-datalabels","data:realIndex":y}),A=function(t){var a=i.barHelpers.getStrokeWidth(o,t,y),l=null,x={indexes:{i:o,j:t,realIndex:y},x:g,y:m,strokeWidth:a,elSeries:w};l=i.isHorizontal?i.drawHorizontalBoxPaths(r(r({},x),{},{yDivision:u,barHeight:f,zeroW:d})):i.drawVerticalBoxPaths(r(r({},x),{},{xDivision:c,barWidth:p,zeroH:h})),m=l.y,g=l.x,t>0&&b.push(g+p/2),v.push(m),l.pathTo.forEach((function(r,c){var u=!i.isBoxPlot&&i.candlestickOptions.wick.useFillColor?l.color[c]:n.globals.stroke.colors[o],h=s.fillPath({seriesNumber:y,dataPointIndex:t,color:l.color[c],value:e[o][t]});i.renderSeries({realIndex:y,pathFill:h,lineFill:u,j:t,i:o,pathFrom:l.pathFrom,pathTo:r,strokeWidth:a,elSeries:w,x:g,y:m,series:e,barHeight:f,barWidth:p,elDataLabelsWrap:S,visibleSeries:i.visibleI,type:n.config.chart.type})}))},C=0;C<n.globals.dataPoints;C++)A(C);n.globals.seriesXvalues[y]=b,n.globals.seriesYvalues[y]=v,l.add(w)},u=0;u<e.length;u++)c(u);return l}},{key:"drawVerticalBoxPaths",value:function(e){var t=e.indexes,i=e.x;e.y;var n=e.xDivision,a=e.barWidth,r=e.zeroH,s=e.strokeWidth,o=this.w,l=new w(this.ctx),c=t.i,u=t.j,h=!0,d=o.config.plotOptions.candlestick.colors.upward,f=o.config.plotOptions.candlestick.colors.downward,p="";this.isBoxPlot&&(p=[this.boxOptions.colors.lower,this.boxOptions.colors.upper]);var g=this.yRatio[this.yaxisIndex],m=t.realIndex,v=this.getOHLCValue(m,u),x=r,b=r;v.o>v.c&&(h=!1);var y=Math.min(v.o,v.c),k=Math.max(v.o,v.c),S=v.m;o.globals.isXNumeric&&(i=(o.globals.seriesX[m][u]-o.globals.minX)/this.xRatio-a/2);var A=i+a*this.visibleI;void 0===this.series[c][u]||null===this.series[c][u]?(y=r,k=r):(y=r-y/g,k=r-k/g,x=r-v.h/g,b=r-v.l/g,S=r-v.m/g);var C=l.move(A,r),E=l.move(A+a/2,y);return o.globals.previousPaths.length>0&&(E=this.getPreviousPath(m,u,!0)),C=this.isBoxPlot?[l.move(A,y)+l.line(A+a/2,y)+l.line(A+a/2,x)+l.line(A+a/4,x)+l.line(A+a-a/4,x)+l.line(A+a/2,x)+l.line(A+a/2,y)+l.line(A+a,y)+l.line(A+a,S)+l.line(A,S)+l.line(A,y+s/2),l.move(A,S)+l.line(A+a,S)+l.line(A+a,k)+l.line(A+a/2,k)+l.line(A+a/2,b)+l.line(A+a-a/4,b)+l.line(A+a/4,b)+l.line(A+a/2,b)+l.line(A+a/2,k)+l.line(A,k)+l.line(A,S)+"z"]:[l.move(A,k)+l.line(A+a/2,k)+l.line(A+a/2,x)+l.line(A+a/2,k)+l.line(A+a,k)+l.line(A+a,y)+l.line(A+a/2,y)+l.line(A+a/2,b)+l.line(A+a/2,y)+l.line(A,y)+l.line(A,k-s/2)],E+=l.move(A,y),o.globals.isXNumeric||(i+=n),{pathTo:C,pathFrom:E,x:i,y:k,barXPosition:A,color:this.isBoxPlot?p:h?[d]:[f]}}},{key:"drawHorizontalBoxPaths",value:function(e){var t=e.indexes;e.x;var i=e.y,n=e.yDivision,a=e.barHeight,r=e.zeroW,s=e.strokeWidth,o=this.w,l=new w(this.ctx),c=t.i,u=t.j,h=this.boxOptions.colors.lower;this.isBoxPlot&&(h=[this.boxOptions.colors.lower,this.boxOptions.colors.upper]);var d=this.invertedYRatio,f=t.realIndex,p=this.getOHLCValue(f,u),g=r,m=r,v=Math.min(p.o,p.c),x=Math.max(p.o,p.c),b=p.m;o.globals.isXNumeric&&(i=(o.globals.seriesX[f][u]-o.globals.minX)/this.invertedXRatio-a/2);var y=i+a*this.visibleI;void 0===this.series[c][u]||null===this.series[c][u]?(v=r,x=r):(v=r+v/d,x=r+x/d,g=r+p.h/d,m=r+p.l/d,b=r+p.m/d);var k=l.move(r,y),S=l.move(v,y+a/2);return o.globals.previousPaths.length>0&&(S=this.getPreviousPath(f,u,!0)),k=[l.move(v,y)+l.line(v,y+a/2)+l.line(g,y+a/2)+l.line(g,y+a/2-a/4)+l.line(g,y+a/2+a/4)+l.line(g,y+a/2)+l.line(v,y+a/2)+l.line(v,y+a)+l.line(b,y+a)+l.line(b,y)+l.line(v+s/2,y),l.move(b,y)+l.line(b,y+a)+l.line(x,y+a)+l.line(x,y+a/2)+l.line(m,y+a/2)+l.line(m,y+a-a/4)+l.line(m,y+a/4)+l.line(m,y+a/2)+l.line(x,y+a/2)+l.line(x,y)+l.line(b,y)+"z"],S+=l.move(v,y),o.globals.isXNumeric||(i+=n),{pathTo:k,pathFrom:S,x,y:i,barYPosition:y,color:h}}},{key:"getOHLCValue",value:function(e,t){var i=this.w;return{o:this.isBoxPlot?i.globals.seriesCandleH[e][t]:i.globals.seriesCandleO[e][t],h:this.isBoxPlot?i.globals.seriesCandleO[e][t]:i.globals.seriesCandleH[e][t],m:i.globals.seriesCandleM[e][t],l:this.isBoxPlot?i.globals.seriesCandleC[e][t]:i.globals.seriesCandleL[e][t],c:this.isBoxPlot?i.globals.seriesCandleL[e][t]:i.globals.seriesCandleC[e][t]}}}]),i}(),Ae=function(){function e(t){o(this,e),this.ctx=t,this.w=t.w}return c(e,[{key:"checkColorRange",value:function(){var e=this.w,t=!1,i=e.config.plotOptions[e.config.chart.type];return i.colorScale.ranges.length>0&&i.colorScale.ranges.map((function(e,i){e.from<=0&&(t=!0)})),t}},{key:"getShadeColor",value:function(e,t,i,n){var a=this.w,r=1,s=a.config.plotOptions[e].shadeIntensity,o=this.determineColor(e,t,i);a.globals.hasNegs||n?r=a.config.plotOptions[e].reverseNegativeShade?o.percent<0?o.percent/100*(1.25*s):(1-o.percent/100)*(1.25*s):o.percent<=0?1-(1+o.percent/100)*s:(1-o.percent/100)*s:(r=1-o.percent/100,"treemap"===e&&(r=(1-o.percent/100)*(1.25*s)));var l=o.color,c=new x;return a.config.plotOptions[e].enableShades&&(l="dark"===this.w.config.theme.mode?x.hexToRgba(c.shadeColor(-1*r,o.color),a.config.fill.opacity):x.hexToRgba(c.shadeColor(r,o.color),a.config.fill.opacity)),{color:l,colorProps:o}}},{key:"determineColor",value:function(e,t,i){var n=this.w,a=n.globals.series[t][i],r=n.config.plotOptions[e],s=r.colorScale.inverse?i:t;r.distributed&&"treemap"===n.config.chart.type&&(s=i);var o=n.globals.colors[s],l=null,c=Math.min.apply(Math,m(n.globals.series[t])),u=Math.max.apply(Math,m(n.globals.series[t]));r.distributed||"heatmap"!==e||(c=n.globals.minY,u=n.globals.maxY),void 0!==r.colorScale.min&&(c=r.colorScale.min<n.globals.minY?r.colorScale.min:n.globals.minY,u=r.colorScale.max>n.globals.maxY?r.colorScale.max:n.globals.maxY);var h=Math.abs(u)+Math.abs(c),d=100*a/(0===h?h-1e-6:h);return r.colorScale.ranges.length>0&&r.colorScale.ranges.map((function(e,t){if(a>=e.from&&a<=e.to){o=e.color,l=e.foreColor?e.foreColor:null,c=e.from,u=e.to;var i=Math.abs(u)+Math.abs(c);d=100*a/(0===i?i-1e-6:i)}})),{color:o,foreColor:l,percent:d}}},{key:"calculateDataLabels",value:function(e){var t=e.text,i=e.x,n=e.y,a=e.i,r=e.j,s=e.colorProps,o=e.fontSize,l=this.w.config.dataLabels,c=new w(this.ctx),u=new z(this.ctx),h=null;if(l.enabled){h=c.group({class:"apexcharts-data-labels"});var d=l.offsetX,f=l.offsetY,p=i+d,g=n+parseFloat(l.style.fontSize)/3+f;u.plotDataLabelsText({x:p,y:g,text:t,i:a,j:r,color:s.foreColor,parent:h,fontSize:o,dataLabelsConfig:l})}return h}},{key:"addListeners",value:function(e){var t=new w(this.ctx);e.node.addEventListener("mouseenter",t.pathMouseEnter.bind(this,e)),e.node.addEventListener("mouseleave",t.pathMouseLeave.bind(this,e)),e.node.addEventListener("mousedown",t.pathMouseDown.bind(this,e))}}]),e}(),Ce=function(){function e(t,i){o(this,e),this.ctx=t,this.w=t.w,this.xRatio=i.xRatio,this.yRatio=i.yRatio,this.dynamicAnim=this.w.config.chart.animations.dynamicAnimation,this.helpers=new Ae(t),this.rectRadius=this.w.config.plotOptions.heatmap.radius,this.strokeWidth=this.w.config.stroke.show?this.w.config.stroke.width:0}return c(e,[{key:"draw",value:function(e){var t=this.w,i=new w(this.ctx),n=i.group({class:"apexcharts-heatmap"});n.attr("clip-path","url(#gridRectMask".concat(t.globals.cuid,")"));var a=t.globals.gridWidth/t.globals.dataPoints,r=t.globals.gridHeight/t.globals.series.length,s=0,o=!1;this.negRange=this.helpers.checkColorRange();var l=e.slice();t.config.yaxis[0].reversed&&(o=!0,l.reverse());for(var c=o?0:l.length-1;o?c<l.length:c>=0;o?c++:c--){var u=i.group({class:"apexcharts-series apexcharts-heatmap-series",seriesName:x.escapeString(t.globals.seriesNames[c]),rel:c+1,"data:realIndex":c});if(this.ctx.series.addCollapsedClassToSeries(u,c),t.config.chart.dropShadow.enabled){var h=t.config.chart.dropShadow;new y(this.ctx).dropShadow(u,h,c)}for(var d=0,f=t.config.plotOptions.heatmap.shadeIntensity,p=0;p<l[c].length;p++){var g=this.helpers.getShadeColor(t.config.chart.type,c,p,this.negRange),m=g.color,v=g.colorProps;"image"===t.config.fill.type&&(m=new I(this.ctx).fillPath({seriesNumber:c,dataPointIndex:p,opacity:t.globals.hasNegs?v.percent<0?1-(1+v.percent/100):f+v.percent/100:v.percent/100,patternID:x.randomId(),width:t.config.fill.image.width?t.config.fill.image.width:a,height:t.config.fill.image.height?t.config.fill.image.height:r}));var b=this.rectRadius,k=i.drawRect(d,s,a,r,b);if(k.attr({cx:d,cy:s}),k.node.classList.add("apexcharts-heatmap-rect"),u.add(k),k.attr({fill:m,i:c,index:c,j:p,val:l[c][p],"stroke-width":this.strokeWidth,stroke:t.config.plotOptions.heatmap.useFillColorAsStroke?m:t.globals.stroke.colors[0],color:m}),this.helpers.addListeners(k),t.config.chart.animations.enabled&&!t.globals.dataChanged){var S=1;t.globals.resized||(S=t.config.chart.animations.speed),this.animateHeatMap(k,d,s,a,r,S)}if(t.globals.dataChanged){var A=1;if(this.dynamicAnim.enabled&&t.globals.shouldAnimate){A=this.dynamicAnim.speed;var C=t.globals.previousPaths[c]&&t.globals.previousPaths[c][p]&&t.globals.previousPaths[c][p].color;C||(C="rgba(255, 255, 255, 0)"),this.animateHeatColor(k,x.isColorHex(C)?C:x.rgb2hex(C),x.isColorHex(m)?m:x.rgb2hex(m),A)}}var E=(0,t.config.dataLabels.formatter)(t.globals.series[c][p],{value:t.globals.series[c][p],seriesIndex:c,dataPointIndex:p,w:t}),P=this.helpers.calculateDataLabels({text:E,x:d+a/2,y:s+r/2,i:c,j:p,colorProps:v,series:l});null!==P&&u.add(P),d+=a}s+=r,n.add(u)}var T=t.globals.yAxisScale[0].result.slice();t.config.yaxis[0].reversed?T.unshift(""):T.push(""),t.globals.yAxisScale[0].result=T;var L=t.globals.gridHeight/t.globals.series.length;return t.config.yaxis[0].labels.offsetY=-L/2,n}},{key:"animateHeatMap",value:function(e,t,i,n,a,r){var s=new b(this.ctx);s.animateRect(e,{x:t+n/2,y:i+a/2,width:0,height:0},{x:t,y:i,width:n,height:a},r,(function(){s.animationCompleted(e)}))}},{key:"animateHeatColor",value:function(e,t,i,n){e.attr({fill:t}).animate(n).attr({fill:i})}}]),e}(),Ee=function(){function e(t){o(this,e),this.ctx=t,this.w=t.w}return c(e,[{key:"drawYAxisTexts",value:function(e,t,i,n){var a=this.w,r=a.config.yaxis[0],s=a.globals.yLabelFormatters[0];return new w(this.ctx).drawText({x:e+r.labels.offsetX,y:t+r.labels.offsetY,text:s(n,i),textAnchor:"middle",fontSize:r.labels.style.fontSize,fontFamily:r.labels.style.fontFamily,foreColor:Array.isArray(r.labels.style.colors)?r.labels.style.colors[i]:r.labels.style.colors})}}]),e}(),Pe=function(){function e(t){o(this,e),this.ctx=t,this.w=t.w;var i=this.w;this.chartType=this.w.config.chart.type,this.initialAnim=this.w.config.chart.animations.enabled,this.dynamicAnim=this.initialAnim&&this.w.config.chart.animations.dynamicAnimation.enabled,this.animBeginArr=[0],this.animDur=0,this.donutDataLabels=this.w.config.plotOptions.pie.donut.labels,this.lineColorArr=void 0!==i.globals.stroke.colors?i.globals.stroke.colors:i.globals.colors,this.defaultSize=Math.min(i.globals.gridWidth,i.globals.gridHeight),this.centerY=this.defaultSize/2,this.centerX=i.globals.gridWidth/2,"radialBar"===i.config.chart.type?this.fullAngle=360:this.fullAngle=Math.abs(i.config.plotOptions.pie.endAngle-i.config.plotOptions.pie.startAngle),this.initialAngle=i.config.plotOptions.pie.startAngle%this.fullAngle,i.globals.radialSize=this.defaultSize/2.05-i.config.stroke.width-(i.config.chart.sparkline.enabled?0:i.config.chart.dropShadow.blur),this.donutSize=i.globals.radialSize*parseInt(i.config.plotOptions.pie.donut.size,10)/100,this.maxY=0,this.sliceLabels=[],this.sliceSizes=[],this.prevSectorAngleArr=[]}return c(e,[{key:"draw",value:function(e){var t=this,i=this.w,n=new w(this.ctx);if(this.ret=n.group({class:"apexcharts-pie"}),i.globals.noData)return this.ret;for(var a=0,r=0;r<e.length;r++)a+=x.negToZero(e[r]);var s=[],o=n.group();0===a&&(a=1e-5),e.forEach((function(e){t.maxY=Math.max(t.maxY,e)})),i.config.yaxis[0].max&&(this.maxY=i.config.yaxis[0].max),"back"===i.config.grid.position&&"polarArea"===this.chartType&&this.drawPolarElements(this.ret);for(var l=0;l<e.length;l++){var c=this.fullAngle*x.negToZero(e[l])/a;s.push(c),"polarArea"===this.chartType?(s[l]=this.fullAngle/e.length,this.sliceSizes.push(i.globals.radialSize*e[l]/this.maxY)):this.sliceSizes.push(i.globals.radialSize)}if(i.globals.dataChanged){for(var u,h=0,d=0;d<i.globals.previousPaths.length;d++)h+=x.negToZero(i.globals.previousPaths[d]);for(var f=0;f<i.globals.previousPaths.length;f++)u=this.fullAngle*x.negToZero(i.globals.previousPaths[f])/h,this.prevSectorAngleArr.push(u)}this.donutSize<0&&(this.donutSize=0);var p=i.config.plotOptions.pie.customScale,g=i.globals.gridWidth/2,m=i.globals.gridHeight/2,v=g-i.globals.gridWidth/2*p,b=m-i.globals.gridHeight/2*p;if("donut"===this.chartType){var y=n.drawCircle(this.donutSize);y.attr({cx:this.centerX,cy:this.centerY,fill:i.config.plotOptions.pie.donut.background?i.config.plotOptions.pie.donut.background:"transparent"}),o.add(y)}var k=this.drawArcs(s,e);if(this.sliceLabels.forEach((function(e){k.add(e)})),o.attr({transform:"translate(".concat(v,", ").concat(b,") scale(").concat(p,")")}),o.add(k),this.ret.add(o),this.donutDataLabels.show){var S=this.renderInnerDataLabels(this.donutDataLabels,{hollowSize:this.donutSize,centerX:this.centerX,centerY:this.centerY,opacity:this.donutDataLabels.show,translateX:v,translateY:b});this.ret.add(S)}return"front"===i.config.grid.position&&"polarArea"===this.chartType&&this.drawPolarElements(this.ret),this.ret}},{key:"drawArcs",value:function(e,t){var i=this.w,n=new y(this.ctx),a=new w(this.ctx),r=new I(this.ctx),s=a.group({class:"apexcharts-slices"}),o=this.initialAngle,l=this.initialAngle,c=this.initialAngle,u=this.initialAngle;this.strokeWidth=i.config.stroke.show?i.config.stroke.width:0;for(var h=0;h<e.length;h++){var d=a.group({class:"apexcharts-series apexcharts-pie-series",seriesName:x.escapeString(i.globals.seriesNames[h]),rel:h+1,"data:realIndex":h});s.add(d),l=u,c=(o=c)+e[h],u=l+this.prevSectorAngleArr[h];var f=c<o?this.fullAngle+c-o:c-o,p=r.fillPath({seriesNumber:h,size:this.sliceSizes[h],value:t[h]}),g=this.getChangedPath(l,u),m=a.drawPath({d:g,stroke:Array.isArray(this.lineColorArr)?this.lineColorArr[h]:this.lineColorArr,strokeWidth:0,fill:p,fillOpacity:i.config.fill.opacity,classes:"apexcharts-pie-area apexcharts-".concat(this.chartType.toLowerCase(),"-slice-").concat(h)});if(m.attr({index:0,j:h}),n.setSelectionFilter(m,0,h),i.config.chart.dropShadow.enabled){var v=i.config.chart.dropShadow;n.dropShadow(m,v,h)}this.addListeners(m,this.donutDataLabels),w.setAttrs(m.node,{"data:angle":f,"data:startAngle":o,"data:strokeWidth":this.strokeWidth,"data:value":t[h]});var b={x:0,y:0};"pie"===this.chartType||"polarArea"===this.chartType?b=x.polarToCartesian(this.centerX,this.centerY,i.globals.radialSize/1.25+i.config.plotOptions.pie.dataLabels.offset,(o+f/2)%this.fullAngle):"donut"===this.chartType&&(b=x.polarToCartesian(this.centerX,this.centerY,(i.globals.radialSize+this.donutSize)/2+i.config.plotOptions.pie.dataLabels.offset,(o+f/2)%this.fullAngle)),d.add(m);var k=0;if(!this.initialAnim||i.globals.resized||i.globals.dataChanged?this.animBeginArr.push(0):(0==(k=f/this.fullAngle*i.config.chart.animations.speed)&&(k=1),this.animDur=k+this.animDur,this.animBeginArr.push(this.animDur)),this.dynamicAnim&&i.globals.dataChanged?this.animatePaths(m,{size:this.sliceSizes[h],endAngle:c,startAngle:o,prevStartAngle:l,prevEndAngle:u,animateStartingPos:!0,i:h,animBeginArr:this.animBeginArr,shouldSetPrevPaths:!0,dur:i.config.chart.animations.dynamicAnimation.speed}):this.animatePaths(m,{size:this.sliceSizes[h],endAngle:c,startAngle:o,i:h,totalItems:e.length-1,animBeginArr:this.animBeginArr,dur:k}),i.config.plotOptions.pie.expandOnClick&&"polarArea"!==this.chartType&&m.click(this.pieClicked.bind(this,h)),void 0!==i.globals.selectedDataPoints[0]&&i.globals.selectedDataPoints[0].indexOf(h)>-1&&this.pieClicked(h),i.config.dataLabels.enabled){var S=b.x,A=b.y,C=100*f/this.fullAngle+"%";if(0!==f&&i.config.plotOptions.pie.dataLabels.minAngleToShowLabel<e[h]){var E=i.config.dataLabels.formatter;void 0!==E&&(C=E(i.globals.seriesPercent[h][0],{seriesIndex:h,w:i}));var P=i.globals.dataLabels.style.colors[h],T=a.group({class:"apexcharts-datalabels"}),L=a.drawText({x:S,y:A,text:C,textAnchor:"middle",fontSize:i.config.dataLabels.style.fontSize,fontFamily:i.config.dataLabels.style.fontFamily,fontWeight:i.config.dataLabels.style.fontWeight,foreColor:P});if(T.add(L),i.config.dataLabels.dropShadow.enabled){var M=i.config.dataLabels.dropShadow;n.dropShadow(L,M)}L.node.classList.add("apexcharts-pie-label"),i.config.chart.animations.animate&&!1===i.globals.resized&&(L.node.classList.add("apexcharts-pie-label-delay"),L.node.style.animationDelay=i.config.chart.animations.speed/940+"s"),this.sliceLabels.push(T)}}}return s}},{key:"addListeners",value:function(e,t){var i=new w(this.ctx);e.node.addEventListener("mouseenter",i.pathMouseEnter.bind(this,e)),e.node.addEventListener("mouseleave",i.pathMouseLeave.bind(this,e)),e.node.addEventListener("mouseleave",this.revertDataLabelsInner.bind(this,e.node,t)),e.node.addEventListener("mousedown",i.pathMouseDown.bind(this,e)),this.donutDataLabels.total.showAlways||(e.node.addEventListener("mouseenter",this.printDataLabelsInner.bind(this,e.node,t)),e.node.addEventListener("mousedown",this.printDataLabelsInner.bind(this,e.node,t)))}},{key:"animatePaths",value:function(e,t){var i=this.w,n=t.endAngle<t.startAngle?this.fullAngle+t.endAngle-t.startAngle:t.endAngle-t.startAngle,a=n,r=t.startAngle,s=t.startAngle;void 0!==t.prevStartAngle&&void 0!==t.prevEndAngle&&(r=t.prevEndAngle,a=t.prevEndAngle<t.prevStartAngle?this.fullAngle+t.prevEndAngle-t.prevStartAngle:t.prevEndAngle-t.prevStartAngle),t.i===i.config.series.length-1&&(n+s>this.fullAngle?t.endAngle=t.endAngle-(n+s):n+s<this.fullAngle&&(t.endAngle=t.endAngle+(this.fullAngle-(n+s)))),n===this.fullAngle&&(n=this.fullAngle-.01),this.animateArc(e,r,s,n,a,t)}},{key:"animateArc",value:function(e,t,i,n,a,r){var s,o=this,l=this.w,c=new b(this.ctx),u=r.size;(isNaN(t)||isNaN(a))&&(t=i,a=n,r.dur=0);var h=n,d=i,f=t<i?this.fullAngle+t-i:t-i;l.globals.dataChanged&&r.shouldSetPrevPaths&&r.prevEndAngle&&(s=o.getPiePath({me:o,startAngle:r.prevStartAngle,angle:r.prevEndAngle<r.prevStartAngle?this.fullAngle+r.prevEndAngle-r.prevStartAngle:r.prevEndAngle-r.prevStartAngle,size:u}),e.attr({d:s})),0!==r.dur?e.animate(r.dur,l.globals.easing,r.animBeginArr[r.i]).afterAll((function(){"pie"!==o.chartType&&"donut"!==o.chartType&&"polarArea"!==o.chartType||this.animate(l.config.chart.animations.dynamicAnimation.speed).attr({"stroke-width":o.strokeWidth}),r.i===l.config.series.length-1&&c.animationCompleted(e)})).during((function(l){h=f+(n-f)*l,r.animateStartingPos&&(h=a+(n-a)*l,d=t-a+(i-(t-a))*l),s=o.getPiePath({me:o,startAngle:d,angle:h,size:u}),e.node.setAttribute("data:pathOrig",s),e.attr({d:s})})):(s=o.getPiePath({me:o,startAngle:d,angle:n,size:u}),r.isTrack||(l.globals.animationEnded=!0),e.node.setAttribute("data:pathOrig",s),e.attr({d:s,"stroke-width":o.strokeWidth}))}},{key:"pieClicked",value:function(e){var t,i=this.w,n=this,a=n.sliceSizes[e]+(i.config.plotOptions.pie.expandOnClick?4:0),r=i.globals.dom.Paper.select(".apexcharts-".concat(n.chartType.toLowerCase(),"-slice-").concat(e)).members[0];if("true"!==r.attr("data:pieClicked")){var s=i.globals.dom.baseEl.getElementsByClassName("apexcharts-pie-area");Array.prototype.forEach.call(s,(function(e){e.setAttribute("data:pieClicked","false");var t=e.getAttribute("data:pathOrig");e.setAttribute("d",t)})),r.attr("data:pieClicked","true");var o=parseInt(r.attr("data:startAngle"),10),l=parseInt(r.attr("data:angle"),10);t=n.getPiePath({me:n,startAngle:o,angle:l,size:a}),360!==l&&r.plot(t)}else{r.attr({"data:pieClicked":"false"}),this.revertDataLabelsInner(r.node,this.donutDataLabels);var c=r.attr("data:pathOrig");r.attr({d:c})}}},{key:"getChangedPath",value:function(e,t){var i="";return this.dynamicAnim&&this.w.globals.dataChanged&&(i=this.getPiePath({me:this,startAngle:e,angle:t-e,size:this.size})),i}},{key:"getPiePath",value:function(e){var t=e.me,i=e.startAngle,n=e.angle,a=e.size,r=i,s=Math.PI*(r-90)/180,o=n+i;Math.ceil(o)>=this.fullAngle+this.w.config.plotOptions.pie.startAngle%this.fullAngle&&(o=this.fullAngle+this.w.config.plotOptions.pie.startAngle%this.fullAngle-.01),Math.ceil(o)>this.fullAngle&&(o-=this.fullAngle);var l=Math.PI*(o-90)/180,c=t.centerX+a*Math.cos(s),u=t.centerY+a*Math.sin(s),h=t.centerX+a*Math.cos(l),d=t.centerY+a*Math.sin(l),f=x.polarToCartesian(t.centerX,t.centerY,t.donutSize,o),p=x.polarToCartesian(t.centerX,t.centerY,t.donutSize,r),g=n>180?1:0,m=["M",c,u,"A",a,a,0,g,1,h,d];return"donut"===t.chartType?[].concat(m,["L",f.x,f.y,"A",t.donutSize,t.donutSize,0,g,0,p.x,p.y,"L",c,u,"z"]).join(" "):"pie"===t.chartType||"polarArea"===t.chartType?[].concat(m,["L",t.centerX,t.centerY,"L",c,u]).join(" "):[].concat(m).join(" ")}},{key:"drawPolarElements",value:function(e){var t=this.w,i=new Z(this.ctx),n=new w(this.ctx),a=new Ee(this.ctx),r=n.group(),s=n.group(),o=i.niceScale(0,Math.ceil(this.maxY),t.config.yaxis[0].tickAmount,0,!0),l=o.result.reverse(),c=o.result.length;this.maxY=o.niceMax;for(var u=t.globals.radialSize,h=u/(c-1),d=0;d<c-1;d++){var f=n.drawCircle(u);if(f.attr({cx:this.centerX,cy:this.centerY,fill:"none","stroke-width":t.config.plotOptions.polarArea.rings.strokeWidth,stroke:t.config.plotOptions.polarArea.rings.strokeColor}),t.config.yaxis[0].show){var p=a.drawYAxisTexts(this.centerX,this.centerY-u+parseInt(t.config.yaxis[0].labels.style.fontSize,10)/2,d,l[d]);s.add(p)}r.add(f),u-=h}this.drawSpokes(e),e.add(r),e.add(s)}},{key:"renderInnerDataLabels",value:function(e,t){var i=this.w,n=new w(this.ctx),a=n.group({class:"apexcharts-datalabels-group",transform:"translate(".concat(t.translateX?t.translateX:0,", ").concat(t.translateY?t.translateY:0,") scale(").concat(i.config.plotOptions.pie.customScale,")")}),r=e.total.show;a.node.style.opacity=t.opacity;var s,o,l=t.centerX,c=t.centerY;s=void 0===e.name.color?i.globals.colors[0]:e.name.color;var u=e.name.fontSize,h=e.name.fontFamily,d=e.name.fontWeight;o=void 0===e.value.color?i.config.chart.foreColor:e.value.color;var f=e.value.formatter,p="",g="";if(r?(s=e.total.color,u=e.total.fontSize,h=e.total.fontFamily,d=e.total.fontWeight,g=e.total.label,p=e.total.formatter(i)):1===i.globals.series.length&&(p=f(i.globals.series[0],i),g=i.globals.seriesNames[0]),g&&(g=e.name.formatter(g,e.total.show,i)),e.name.show){var m=n.drawText({x:l,y:c+parseFloat(e.name.offsetY),text:g,textAnchor:"middle",foreColor:s,fontSize:u,fontWeight:d,fontFamily:h});m.node.classList.add("apexcharts-datalabel-label"),a.add(m)}if(e.value.show){var v=e.name.show?parseFloat(e.value.offsetY)+16:e.value.offsetY,x=n.drawText({x:l,y:c+v,text:p,textAnchor:"middle",foreColor:o,fontWeight:e.value.fontWeight,fontSize:e.value.fontSize,fontFamily:e.value.fontFamily});x.node.classList.add("apexcharts-datalabel-value"),a.add(x)}return a}},{key:"printInnerLabels",value:function(e,t,i,n){var a,r=this.w;n?a=void 0===e.name.color?r.globals.colors[parseInt(n.parentNode.getAttribute("rel"),10)-1]:e.name.color:r.globals.series.length>1&&e.total.show&&(a=e.total.color);var s=r.globals.dom.baseEl.querySelector(".apexcharts-datalabel-label"),o=r.globals.dom.baseEl.querySelector(".apexcharts-datalabel-value");i=(0,e.value.formatter)(i,r),n||"function"!=typeof e.total.formatter||(i=e.total.formatter(r));var l=t===e.total.label;t=e.name.formatter(t,l,r),null!==s&&(s.textContent=t),null!==o&&(o.textContent=i),null!==s&&(s.style.fill=a)}},{key:"printDataLabelsInner",value:function(e,t){var i=this.w,n=e.getAttribute("data:value"),a=i.globals.seriesNames[parseInt(e.parentNode.getAttribute("rel"),10)-1];i.globals.series.length>1&&this.printInnerLabels(t,a,n,e);var r=i.globals.dom.baseEl.querySelector(".apexcharts-datalabels-group");null!==r&&(r.style.opacity=1)}},{key:"drawSpokes",value:function(e){var t=this,i=this.w,n=new w(this.ctx),a=i.config.plotOptions.polarArea.spokes;if(0!==a.strokeWidth){for(var r=[],s=360/i.globals.series.length,o=0;o<i.globals.series.length;o++)r.push(x.polarToCartesian(this.centerX,this.centerY,i.globals.radialSize,i.config.plotOptions.pie.startAngle+s*o));r.forEach((function(i,r){var s=n.drawLine(i.x,i.y,t.centerX,t.centerY,Array.isArray(a.connectorColors)?a.connectorColors[r]:a.connectorColors);e.add(s)}))}}},{key:"revertDataLabelsInner",value:function(e,t,i){var n=this,a=this.w,r=a.globals.dom.baseEl.querySelector(".apexcharts-datalabels-group"),s=!1,o=a.globals.dom.baseEl.getElementsByClassName("apexcharts-pie-area"),l=function(e){var i=e.makeSliceOut,a=e.printLabel;Array.prototype.forEach.call(o,(function(e){"true"===e.getAttribute("data:pieClicked")&&(i&&(s=!0),a&&n.printDataLabelsInner(e,t))}))};if(l({makeSliceOut:!0,printLabel:!1}),t.total.show&&a.globals.series.length>1)s&&!t.total.showAlways?l({makeSliceOut:!1,printLabel:!0}):this.printInnerLabels(t,t.total.label,t.total.formatter(a));else if(l({makeSliceOut:!1,printLabel:!0}),!s)if(a.globals.selectedDataPoints.length&&a.globals.series.length>1)if(a.globals.selectedDataPoints[0].length>0){var c=a.globals.selectedDataPoints[0],u=a.globals.dom.baseEl.querySelector(".apexcharts-".concat(this.chartType.toLowerCase(),"-slice-").concat(c));this.printDataLabelsInner(u,t)}else r&&a.globals.selectedDataPoints.length&&0===a.globals.selectedDataPoints[0].length&&(r.style.opacity=0);else r&&a.globals.series.length>1&&(r.style.opacity=0)}}]),e}(),Te=function(){function e(t){o(this,e),this.ctx=t,this.w=t.w,this.chartType=this.w.config.chart.type,this.initialAnim=this.w.config.chart.animations.enabled,this.dynamicAnim=this.initialAnim&&this.w.config.chart.animations.dynamicAnimation.enabled,this.animDur=0;var i=this.w;this.graphics=new w(this.ctx),this.lineColorArr=void 0!==i.globals.stroke.colors?i.globals.stroke.colors:i.globals.colors,this.defaultSize=i.globals.svgHeight<i.globals.svgWidth?i.globals.gridHeight+1.5*i.globals.goldenPadding:i.globals.gridWidth,this.isLog=i.config.yaxis[0].logarithmic,this.coreUtils=new A(this.ctx),this.maxValue=this.isLog?this.coreUtils.getLogVal(i.globals.maxY,0):i.globals.maxY,this.minValue=this.isLog?this.coreUtils.getLogVal(this.w.globals.minY,0):i.globals.minY,this.polygons=i.config.plotOptions.radar.polygons,this.strokeWidth=i.config.stroke.show?i.config.stroke.width:0,this.size=this.defaultSize/2.1-this.strokeWidth-i.config.chart.dropShadow.blur,i.config.xaxis.labels.show&&(this.size=this.size-i.globals.xAxisLabelsWidth/1.75),void 0!==i.config.plotOptions.radar.size&&(this.size=i.config.plotOptions.radar.size),this.dataRadiusOfPercent=[],this.dataRadius=[],this.angleArr=[],this.yaxisLabelsTextsPos=[]}return c(e,[{key:"draw",value:function(e){var t=this,i=this.w,n=new I(this.ctx),a=[],s=new z(this.ctx);e.length&&(this.dataPointsLen=e[i.globals.maxValsInArrayIndex].length),this.disAngle=2*Math.PI/this.dataPointsLen;var o=i.globals.gridWidth/2,l=i.globals.gridHeight/2,c=o+i.config.plotOptions.radar.offsetX,u=l+i.config.plotOptions.radar.offsetY,h=this.graphics.group({class:"apexcharts-radar-series apexcharts-plot-series",transform:"translate(".concat(c||0,", ").concat(u||0,")")}),d=[],f=null,p=null;if(this.yaxisLabels=this.graphics.group({class:"apexcharts-yaxis"}),e.forEach((function(e,o){var l=e.length===i.globals.dataPoints,c=t.graphics.group().attr({class:"apexcharts-series","data:longestSeries":l,seriesName:x.escapeString(i.globals.seriesNames[o]),rel:o+1,"data:realIndex":o});t.dataRadiusOfPercent[o]=[],t.dataRadius[o]=[],t.angleArr[o]=[],e.forEach((function(e,i){var n=Math.abs(t.maxValue-t.minValue);e+=Math.abs(t.minValue),t.isLog&&(e=t.coreUtils.getLogVal(e,0)),t.dataRadiusOfPercent[o][i]=e/n,t.dataRadius[o][i]=t.dataRadiusOfPercent[o][i]*t.size,t.angleArr[o][i]=i*t.disAngle})),d=t.getDataPointsPos(t.dataRadius[o],t.angleArr[o]);var u=t.createPaths(d,{x:0,y:0});f=t.graphics.group({class:"apexcharts-series-markers-wrap apexcharts-element-hidden"}),p=t.graphics.group({class:"apexcharts-datalabels","data:realIndex":o}),i.globals.delayedElements.push({el:f.node,index:o});var h={i:o,realIndex:o,animationDelay:o,initialSpeed:i.config.chart.animations.speed,dataChangeSpeed:i.config.chart.animations.dynamicAnimation.speed,className:"apexcharts-radar",shouldClipToGrid:!1,bindEventsOnPaths:!1,stroke:i.globals.stroke.colors[o],strokeLineCap:i.config.stroke.lineCap},g=null;i.globals.previousPaths.length>0&&(g=t.getPreviousPath(o));for(var m=0;m<u.linePathsTo.length;m++){var v=t.graphics.renderPaths(r(r({},h),{},{pathFrom:null===g?u.linePathsFrom[m]:g,pathTo:u.linePathsTo[m],strokeWidth:Array.isArray(t.strokeWidth)?t.strokeWidth[o]:t.strokeWidth,fill:"none",drawShadow:!1}));c.add(v);var b=n.fillPath({seriesNumber:o}),w=t.graphics.renderPaths(r(r({},h),{},{pathFrom:null===g?u.areaPathsFrom[m]:g,pathTo:u.areaPathsTo[m],strokeWidth:0,fill:b,drawShadow:!1}));if(i.config.chart.dropShadow.enabled){var k=new y(t.ctx),S=i.config.chart.dropShadow;k.dropShadow(w,Object.assign({},S,{noUserSpaceOnUse:!0}),o)}c.add(w)}e.forEach((function(e,n){var a=new M(t.ctx).getMarkerConfig({cssClass:"apexcharts-marker",seriesIndex:o,dataPointIndex:n}),l=t.graphics.drawMarker(d[n].x,d[n].y,a);l.attr("rel",n),l.attr("j",n),l.attr("index",o),l.node.setAttribute("default-marker-size",a.pSize);var u=t.graphics.group({class:"apexcharts-series-markers"});u&&u.add(l),f.add(u),c.add(f);var h=i.config.dataLabels;if(h.enabled){var g=h.formatter(i.globals.series[o][n],{seriesIndex:o,dataPointIndex:n,w:i});s.plotDataLabelsText({x:d[n].x,y:d[n].y,text:g,textAnchor:"middle",i:o,j:o,parent:p,offsetCorrection:!1,dataLabelsConfig:r({},h)})}c.add(p)})),a.push(c)})),this.drawPolygons({parent:h}),i.config.xaxis.labels.show){var g=this.drawXAxisTexts();h.add(g)}return a.forEach((function(e){h.add(e)})),h.add(this.yaxisLabels),h}},{key:"drawPolygons",value:function(e){for(var t=this,i=this.w,n=e.parent,a=new Ee(this.ctx),r=i.globals.yAxisScale[0].result.reverse(),s=r.length,o=[],l=this.size/(s-1),c=0;c<s;c++)o[c]=l*c;o.reverse();var u=[],h=[];o.forEach((function(e,i){var n=x.getPolygonPos(e,t.dataPointsLen),a="";n.forEach((function(e,n){if(0===i){var r=t.graphics.drawLine(e.x,e.y,0,0,Array.isArray(t.polygons.connectorColors)?t.polygons.connectorColors[n]:t.polygons.connectorColors);h.push(r)}0===n&&t.yaxisLabelsTextsPos.push({x:e.x,y:e.y}),a+=e.x+","+e.y+" "})),u.push(a)})),u.forEach((function(e,a){var r=t.polygons.strokeColors,s=t.polygons.strokeWidth,o=t.graphics.drawPolygon(e,Array.isArray(r)?r[a]:r,Array.isArray(s)?s[a]:s,i.globals.radarPolygons.fill.colors[a]);n.add(o)})),h.forEach((function(e){n.add(e)})),i.config.yaxis[0].show&&this.yaxisLabelsTextsPos.forEach((function(e,i){var n=a.drawYAxisTexts(e.x,e.y,i,r[i]);t.yaxisLabels.add(n)}))}},{key:"drawXAxisTexts",value:function(){var e=this,t=this.w,i=t.config.xaxis.labels,n=this.graphics.group({class:"apexcharts-xaxis"}),a=x.getPolygonPos(this.size,this.dataPointsLen);return t.globals.labels.forEach((function(s,o){var l=t.config.xaxis.labels.formatter,c=new z(e.ctx);if(a[o]){var u=e.getTextPos(a[o],e.size),h=l(s,{seriesIndex:-1,dataPointIndex:o,w:t});c.plotDataLabelsText({x:u.newX,y:u.newY,text:h,textAnchor:u.textAnchor,i:o,j:o,parent:n,color:Array.isArray(i.style.colors)&&i.style.colors[o]?i.style.colors[o]:"#a8a8a8",dataLabelsConfig:r({textAnchor:u.textAnchor,dropShadow:{enabled:!1}},i),offsetCorrection:!1})}})),n}},{key:"createPaths",value:function(e,t){var i=this,n=[],a=[],r=[],s=[];if(e.length){a=[this.graphics.move(t.x,t.y)],s=[this.graphics.move(t.x,t.y)];var o=this.graphics.move(e[0].x,e[0].y),l=this.graphics.move(e[0].x,e[0].y);e.forEach((function(t,n){o+=i.graphics.line(t.x,t.y),l+=i.graphics.line(t.x,t.y),n===e.length-1&&(o+="Z",l+="Z")})),n.push(o),r.push(l)}return{linePathsFrom:a,linePathsTo:n,areaPathsFrom:s,areaPathsTo:r}}},{key:"getTextPos",value:function(e,t){var i="middle",n=e.x,a=e.y;return Math.abs(e.x)>=10?e.x>0?(i="start",n+=10):e.x<0&&(i="end",n-=10):i="middle",Math.abs(e.y)>=t-10&&(e.y<0?a-=10:e.y>0&&(a+=10)),{textAnchor:i,newX:n,newY:a}}},{key:"getPreviousPath",value:function(e){for(var t=this.w,i=null,n=0;n<t.globals.previousPaths.length;n++){var a=t.globals.previousPaths[n];a.paths.length>0&&parseInt(a.realIndex,10)===parseInt(e,10)&&void 0!==t.globals.previousPaths[n].paths[0]&&(i=t.globals.previousPaths[n].paths[0].d)}return i}},{key:"getDataPointsPos",value:function(e,t){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.dataPointsLen;e=e||[],t=t||[];for(var n=[],a=0;a<i;a++){var r={};r.x=e[a]*Math.sin(t[a]),r.y=-e[a]*Math.cos(t[a]),n.push(r)}return n}}]),e}(),Le=function(e){h(i,Pe);var t=g(i);function i(e){var n;o(this,i),(n=t.call(this,e)).ctx=e,n.w=e.w,n.animBeginArr=[0],n.animDur=0;var a=n.w;return n.startAngle=a.config.plotOptions.radialBar.startAngle,n.endAngle=a.config.plotOptions.radialBar.endAngle,n.totalAngle=Math.abs(a.config.plotOptions.radialBar.endAngle-a.config.plotOptions.radialBar.startAngle),n.trackStartAngle=a.config.plotOptions.radialBar.track.startAngle,n.trackEndAngle=a.config.plotOptions.radialBar.track.endAngle,n.donutDataLabels=n.w.config.plotOptions.radialBar.dataLabels,n.radialDataLabels=n.donutDataLabels,n.trackStartAngle||(n.trackStartAngle=n.startAngle),n.trackEndAngle||(n.trackEndAngle=n.endAngle),360===n.endAngle&&(n.endAngle=359.99),n.margin=parseInt(a.config.plotOptions.radialBar.track.margin,10),n}return c(i,[{key:"draw",value:function(e){var t=this.w,i=new w(this.ctx),n=i.group({class:"apexcharts-radialbar"});if(t.globals.noData)return n;var a=i.group(),r=this.defaultSize/2,s=t.globals.gridWidth/2,o=this.defaultSize/2.05;t.config.chart.sparkline.enabled||(o=o-t.config.stroke.width-t.config.chart.dropShadow.blur);var l=t.globals.fill.colors;if(t.config.plotOptions.radialBar.track.show){var c=this.drawTracks({size:o,centerX:s,centerY:r,colorArr:l,series:e});a.add(c)}var u=this.drawArcs({size:o,centerX:s,centerY:r,colorArr:l,series:e}),h=360;t.config.plotOptions.radialBar.startAngle<0&&(h=this.totalAngle);var d=(360-h)/360;if(t.globals.radialSize=o-o*d,this.radialDataLabels.value.show){var f=Math.max(this.radialDataLabels.value.offsetY,this.radialDataLabels.name.offsetY);t.globals.radialSize+=f*d}return a.add(u.g),"front"===t.config.plotOptions.radialBar.hollow.position&&(u.g.add(u.elHollow),u.dataLabels&&u.g.add(u.dataLabels)),n.add(a),n}},{key:"drawTracks",value:function(e){var t=this.w,i=new w(this.ctx),n=i.group({class:"apexcharts-tracks"}),a=new y(this.ctx),r=new I(this.ctx),s=this.getStrokeWidth(e);e.size=e.size-s/2;for(var o=0;o<e.series.length;o++){var l=i.group({class:"apexcharts-radialbar-track apexcharts-track"});n.add(l),l.attr({rel:o+1}),e.size=e.size-s-this.margin;var c=t.config.plotOptions.radialBar.track,u=r.fillPath({seriesNumber:0,size:e.size,fillColors:Array.isArray(c.background)?c.background[o]:c.background,solid:!0}),h=this.trackStartAngle,d=this.trackEndAngle;Math.abs(d)+Math.abs(h)>=360&&(d=360-Math.abs(this.startAngle)-.1);var f=i.drawPath({d:"",stroke:u,strokeWidth:s*parseInt(c.strokeWidth,10)/100,fill:"none",strokeOpacity:c.opacity,classes:"apexcharts-radialbar-area"});if(c.dropShadow.enabled){var p=c.dropShadow;a.dropShadow(f,p)}l.add(f),f.attr("id","apexcharts-radialbarTrack-"+o),this.animatePaths(f,{centerX:e.centerX,centerY:e.centerY,endAngle:d,startAngle:h,size:e.size,i:o,totalItems:2,animBeginArr:0,dur:0,isTrack:!0,easing:t.globals.easing})}return n}},{key:"drawArcs",value:function(e){var t=this.w,i=new w(this.ctx),n=new I(this.ctx),a=new y(this.ctx),r=i.group(),s=this.getStrokeWidth(e);e.size=e.size-s/2;var o=t.config.plotOptions.radialBar.hollow.background,l=e.size-s*e.series.length-this.margin*e.series.length-s*parseInt(t.config.plotOptions.radialBar.track.strokeWidth,10)/100/2,c=l-t.config.plotOptions.radialBar.hollow.margin;void 0!==t.config.plotOptions.radialBar.hollow.image&&(o=this.drawHollowImage(e,r,l,o));var u=this.drawHollow({size:c,centerX:e.centerX,centerY:e.centerY,fill:o||"transparent"});if(t.config.plotOptions.radialBar.hollow.dropShadow.enabled){var h=t.config.plotOptions.radialBar.hollow.dropShadow;a.dropShadow(u,h)}var d=1;!this.radialDataLabels.total.show&&t.globals.series.length>1&&(d=0);var f=null;this.radialDataLabels.show&&(f=this.renderInnerDataLabels(this.radialDataLabels,{hollowSize:l,centerX:e.centerX,centerY:e.centerY,opacity:d})),"back"===t.config.plotOptions.radialBar.hollow.position&&(r.add(u),f&&r.add(f));var p=!1;t.config.plotOptions.radialBar.inverseOrder&&(p=!0);for(var g=p?e.series.length-1:0;p?g>=0:g<e.series.length;p?g--:g++){var m=i.group({class:"apexcharts-series apexcharts-radial-series",seriesName:x.escapeString(t.globals.seriesNames[g])});r.add(m),m.attr({rel:g+1,"data:realIndex":g}),this.ctx.series.addCollapsedClassToSeries(m,g),e.size=e.size-s-this.margin;var v=n.fillPath({seriesNumber:g,size:e.size,value:e.series[g]}),b=this.startAngle,k=void 0,S=x.negToZero(e.series[g]>100?100:e.series[g])/100,A=Math.round(this.totalAngle*S)+this.startAngle,C=void 0;t.globals.dataChanged&&(k=this.startAngle,C=Math.round(this.totalAngle*x.negToZero(t.globals.previousPaths[g])/100)+k),Math.abs(A)+Math.abs(b)>=360&&(A-=.01),Math.abs(C)+Math.abs(k)>=360&&(C-=.01);var E=A-b,P=Array.isArray(t.config.stroke.dashArray)?t.config.stroke.dashArray[g]:t.config.stroke.dashArray,T=i.drawPath({d:"",stroke:v,strokeWidth:s,fill:"none",fillOpacity:t.config.fill.opacity,classes:"apexcharts-radialbar-area apexcharts-radialbar-slice-"+g,strokeDashArray:P});if(w.setAttrs(T.node,{"data:angle":E,"data:value":e.series[g]}),t.config.chart.dropShadow.enabled){var L=t.config.chart.dropShadow;a.dropShadow(T,L,g)}a.setSelectionFilter(T,0,g),this.addListeners(T,this.radialDataLabels),m.add(T),T.attr({index:0,j:g});var M=0;!this.initialAnim||t.globals.resized||t.globals.dataChanged||(M=t.config.chart.animations.speed),t.globals.dataChanged&&(M=t.config.chart.animations.dynamicAnimation.speed),this.animDur=M/(1.2*e.series.length)+this.animDur,this.animBeginArr.push(this.animDur),this.animatePaths(T,{centerX:e.centerX,centerY:e.centerY,endAngle:A,startAngle:b,prevEndAngle:C,prevStartAngle:k,size:e.size,i:g,totalItems:2,animBeginArr:this.animBeginArr,dur:M,shouldSetPrevPaths:!0,easing:t.globals.easing})}return{g:r,elHollow:u,dataLabels:f}}},{key:"drawHollow",value:function(e){var t=new w(this.ctx).drawCircle(2*e.size);return t.attr({class:"apexcharts-radialbar-hollow",cx:e.centerX,cy:e.centerY,r:e.size,fill:e.fill}),t}},{key:"drawHollowImage",value:function(e,t,i,n){var a=this.w,r=new I(this.ctx),s=x.randomId(),o=a.config.plotOptions.radialBar.hollow.image;if(a.config.plotOptions.radialBar.hollow.imageClipped)r.clippedImgArea({width:i,height:i,image:o,patternID:"pattern".concat(a.globals.cuid).concat(s)}),n="url(#pattern".concat(a.globals.cuid).concat(s,")");else{var l=a.config.plotOptions.radialBar.hollow.imageWidth,c=a.config.plotOptions.radialBar.hollow.imageHeight;if(void 0===l&&void 0===c){var u=a.globals.dom.Paper.image(o).loaded((function(t){this.move(e.centerX-t.width/2+a.config.plotOptions.radialBar.hollow.imageOffsetX,e.centerY-t.height/2+a.config.plotOptions.radialBar.hollow.imageOffsetY)}));t.add(u)}else{var h=a.globals.dom.Paper.image(o).loaded((function(t){this.move(e.centerX-l/2+a.config.plotOptions.radialBar.hollow.imageOffsetX,e.centerY-c/2+a.config.plotOptions.radialBar.hollow.imageOffsetY),this.size(l,c)}));t.add(h)}}return n}},{key:"getStrokeWidth",value:function(e){var t=this.w;return e.size*(100-parseInt(t.config.plotOptions.radialBar.hollow.size,10))/100/(e.series.length+1)-this.margin}}]),i}(),Ie=function(){function e(t){o(this,e),this.w=t.w,this.lineCtx=t}return c(e,[{key:"sameValueSeriesFix",value:function(e,t){var i=this.w;if("line"===i.config.chart.type&&("gradient"===i.config.fill.type||"gradient"===i.config.fill.type[e])&&new A(this.lineCtx.ctx,i).seriesHaveSameValues(e)){var n=t[e].slice();n[n.length-1]=n[n.length-1]+1e-6,t[e]=n}return t}},{key:"calculatePoints",value:function(e){var t=e.series,i=e.realIndex,n=e.x,a=e.y,r=e.i,s=e.j,o=e.prevY,l=this.w,c=[],u=[];if(0===s){var h=this.lineCtx.categoryAxisCorrection+l.config.markers.offsetX;l.globals.isXNumeric&&(h=(l.globals.seriesX[i][0]-l.globals.minX)/this.lineCtx.xRatio+l.config.markers.offsetX),c.push(h),u.push(x.isNumber(t[r][0])?o+l.config.markers.offsetY:null),c.push(n+l.config.markers.offsetX),u.push(x.isNumber(t[r][s+1])?a+l.config.markers.offsetY:null)}else c.push(n+l.config.markers.offsetX),u.push(x.isNumber(t[r][s+1])?a+l.config.markers.offsetY:null);return{x:c,y:u}}},{key:"checkPreviousPaths",value:function(e){for(var t=e.pathFromLine,i=e.pathFromArea,n=e.realIndex,a=this.w,r=0;r<a.globals.previousPaths.length;r++){var s=a.globals.previousPaths[r];("line"===s.type||"area"===s.type)&&s.paths.length>0&&parseInt(s.realIndex,10)===parseInt(n,10)&&("line"===s.type?(this.lineCtx.appendPathFrom=!1,t=a.globals.previousPaths[r].paths[0].d):"area"===s.type&&(this.lineCtx.appendPathFrom=!1,i=a.globals.previousPaths[r].paths[0].d,a.config.stroke.show&&a.globals.previousPaths[r].paths[1]&&(t=a.globals.previousPaths[r].paths[1].d)))}return{pathFromLine:t,pathFromArea:i}}},{key:"determineFirstPrevY",value:function(e){var t=e.i,i=e.series,n=e.prevY,a=e.lineYPosition,r=this.w;if(void 0!==i[t][0])n=(a=r.config.chart.stacked&&t>0?this.lineCtx.prevSeriesY[t-1][0]:this.lineCtx.zeroY)-i[t][0]/this.lineCtx.yRatio[this.lineCtx.yaxisIndex]+2*(this.lineCtx.isReversed?i[t][0]/this.lineCtx.yRatio[this.lineCtx.yaxisIndex]:0);else if(r.config.chart.stacked&&t>0&&void 0===i[t][0])for(var s=t-1;s>=0;s--)if(null!==i[s][0]&&void 0!==i[s][0]){n=a=this.lineCtx.prevSeriesY[s][0];break}return{prevY:n,lineYPosition:a}}}]),e}(),Me=function(){function e(t,i,n){o(this,e),this.ctx=t,this.w=t.w,this.xyRatios=i,this.pointsChart=!("bubble"!==this.w.config.chart.type&&"scatter"!==this.w.config.chart.type)||n,this.scatter=new O(this.ctx),this.noNegatives=this.w.globals.minX===Number.MAX_VALUE,this.lineHelpers=new Ie(this),this.markers=new M(this.ctx),this.prevSeriesY=[],this.categoryAxisCorrection=0,this.yaxisIndex=0}return c(e,[{key:"draw",value:function(e,t,i){var n=this.w,a=new w(this.ctx),r=n.globals.comboCharts?t:n.config.chart.type,s=a.group({class:"apexcharts-".concat(r,"-series apexcharts-plot-series")}),o=new A(this.ctx,n);this.yRatio=this.xyRatios.yRatio,this.zRatio=this.xyRatios.zRatio,this.xRatio=this.xyRatios.xRatio,this.baseLineY=this.xyRatios.baseLineY,e=o.getLogSeries(e),this.yRatio=o.getLogYRatios(this.yRatio);for(var l=[],c=0;c<e.length;c++){e=this.lineHelpers.sameValueSeriesFix(c,e);var u=n.globals.comboCharts?i[c]:c;this._initSerieVariables(e,c,u);var h=[],d=[],f=n.globals.padHorizontal+this.categoryAxisCorrection;this.ctx.series.addCollapsedClassToSeries(this.elSeries,u),n.globals.isXNumeric&&n.globals.seriesX.length>0&&(f=(n.globals.seriesX[u][0]-n.globals.minX)/this.xRatio),d.push(f);var p,g=f,m=g,v=this.zeroY;v=this.lineHelpers.determineFirstPrevY({i:c,series:e,prevY:v,lineYPosition:0}).prevY,h.push(v),p=v;var x=this._calculatePathsFrom({series:e,i:c,realIndex:u,prevX:m,prevY:v}),b=this._iterateOverDataPoints({series:e,realIndex:u,i:c,x:f,y:1,pX:g,pY:p,pathsFrom:x,linePaths:[],areaPaths:[],seriesIndex:i,lineYPosition:0,xArrj:d,yArrj:h});this._handlePaths({type:r,realIndex:u,i:c,paths:b}),this.elSeries.add(this.elPointsMain),this.elSeries.add(this.elDataLabelsWrap),l.push(this.elSeries)}if(n.config.chart.stacked)for(var y=l.length;y>0;y--)s.add(l[y-1]);else for(var k=0;k<l.length;k++)s.add(l[k]);return s}},{key:"_initSerieVariables",value:function(e,t,i){var n=this.w,a=new w(this.ctx);this.xDivision=n.globals.gridWidth/(n.globals.dataPoints-("on"===n.config.xaxis.tickPlacement?1:0)),this.strokeWidth=Array.isArray(n.config.stroke.width)?n.config.stroke.width[i]:n.config.stroke.width,this.yRatio.length>1&&(this.yaxisIndex=i),this.isReversed=n.config.yaxis[this.yaxisIndex]&&n.config.yaxis[this.yaxisIndex].reversed,this.zeroY=n.globals.gridHeight-this.baseLineY[this.yaxisIndex]-(this.isReversed?n.globals.gridHeight:0)+(this.isReversed?2*this.baseLineY[this.yaxisIndex]:0),this.areaBottomY=this.zeroY,(this.zeroY>n.globals.gridHeight||"end"===n.config.plotOptions.area.fillTo)&&(this.areaBottomY=n.globals.gridHeight),this.categoryAxisCorrection=this.xDivision/2,this.elSeries=a.group({class:"apexcharts-series",seriesName:x.escapeString(n.globals.seriesNames[i])}),this.elPointsMain=a.group({class:"apexcharts-series-markers-wrap","data:realIndex":i}),this.elDataLabelsWrap=a.group({class:"apexcharts-datalabels","data:realIndex":i});var r=e[t].length===n.globals.dataPoints;this.elSeries.attr({"data:longestSeries":r,rel:t+1,"data:realIndex":i}),this.appendPathFrom=!0}},{key:"_calculatePathsFrom",value:function(e){var t,i,n,a,r=e.series,s=e.i,o=e.realIndex,l=e.prevX,c=e.prevY,u=this.w,h=new w(this.ctx);if(null===r[s][0]){for(var d=0;d<r[s].length;d++)if(null!==r[s][d]){l=this.xDivision*d,c=this.zeroY-r[s][d]/this.yRatio[this.yaxisIndex],t=h.move(l,c),i=h.move(l,this.areaBottomY);break}}else t=h.move(l,c),i=h.move(l,this.areaBottomY)+h.line(l,c);if(n=h.move(-1,this.zeroY)+h.line(-1,this.zeroY),a=h.move(-1,this.zeroY)+h.line(-1,this.zeroY),u.globals.previousPaths.length>0){var f=this.lineHelpers.checkPreviousPaths({pathFromLine:n,pathFromArea:a,realIndex:o});n=f.pathFromLine,a=f.pathFromArea}return{prevX:l,prevY:c,linePath:t,areaPath:i,pathFromLine:n,pathFromArea:a}}},{key:"_handlePaths",value:function(e){var t=e.type,i=e.realIndex,n=e.i,a=e.paths,s=this.w,o=new w(this.ctx),l=new I(this.ctx);this.prevSeriesY.push(a.yArrj),s.globals.seriesXvalues[i]=a.xArrj,s.globals.seriesYvalues[i]=a.yArrj;var c=s.config.forecastDataPoints;if(c.count>0){var u=s.globals.seriesXvalues[i][s.globals.seriesXvalues[i].length-c.count-1],h=o.drawRect(u,0,s.globals.gridWidth,s.globals.gridHeight,0);s.globals.dom.elForecastMask.appendChild(h.node);var d=o.drawRect(0,0,u,s.globals.gridHeight,0);s.globals.dom.elNonForecastMask.appendChild(d.node)}this.pointsChart||s.globals.delayedElements.push({el:this.elPointsMain.node,index:i});var f={i:n,realIndex:i,animationDelay:n,initialSpeed:s.config.chart.animations.speed,dataChangeSpeed:s.config.chart.animations.dynamicAnimation.speed,className:"apexcharts-".concat(t)};if("area"===t)for(var p=l.fillPath({seriesNumber:i}),g=0;g<a.areaPaths.length;g++){var m=o.renderPaths(r(r({},f),{},{pathFrom:a.pathFromArea,pathTo:a.areaPaths[g],stroke:"none",strokeWidth:0,strokeLineCap:null,fill:p}));this.elSeries.add(m)}if(s.config.stroke.show&&!this.pointsChart){var v;v="line"===t?l.fillPath({seriesNumber:i,i:n}):s.globals.stroke.colors[i];for(var x=0;x<a.linePaths.length;x++){var b=r(r({},f),{},{pathFrom:a.pathFromLine,pathTo:a.linePaths[x],stroke:v,strokeWidth:this.strokeWidth,strokeLineCap:s.config.stroke.lineCap,fill:"none"}),y=o.renderPaths(b);if(this.elSeries.add(y),c.count>0){var k=o.renderPaths(b);k.node.setAttribute("stroke-dasharray",c.dashArray),c.strokeWidth&&k.node.setAttribute("stroke-width",c.strokeWidth),this.elSeries.add(k),k.attr("clip-path","url(#forecastMask".concat(s.globals.cuid,")")),y.attr("clip-path","url(#nonForecastMask".concat(s.globals.cuid,")"))}}}}},{key:"_iterateOverDataPoints",value:function(e){for(var t=e.series,i=e.realIndex,n=e.i,a=e.x,r=e.y,s=e.pX,o=e.pY,l=e.pathsFrom,c=e.linePaths,u=e.areaPaths,h=e.seriesIndex,d=e.lineYPosition,f=e.xArrj,p=e.yArrj,g=this.w,m=new w(this.ctx),v=this.yRatio,b=l.prevY,y=l.linePath,k=l.areaPath,S=l.pathFromLine,A=l.pathFromArea,C=x.isNumber(g.globals.minYArr[i])?g.globals.minYArr[i]:g.globals.minY,E=g.globals.dataPoints>1?g.globals.dataPoints-1:g.globals.dataPoints,P=0;P<E;P++){var T=void 0===t[n][P+1]||null===t[n][P+1];if(g.globals.isXNumeric){var L=g.globals.seriesX[i][P+1];void 0===g.globals.seriesX[i][P+1]&&(L=g.globals.seriesX[i][E-1]),a=(L-g.globals.minX)/this.xRatio}else a+=this.xDivision;d=g.config.chart.stacked&&n>0&&g.globals.collapsedSeries.length<g.config.series.length-1?this.prevSeriesY[function(e){for(var t=e,i=0;i<g.globals.series.length;i++)if(g.globals.collapsedSeriesIndices.indexOf(e)>-1){t--;break}return t>=0?t:0}(n-1)][P+1]:this.zeroY,r=T?d-C/v[this.yaxisIndex]+2*(this.isReversed?C/v[this.yaxisIndex]:0):d-t[n][P+1]/v[this.yaxisIndex]+2*(this.isReversed?t[n][P+1]/v[this.yaxisIndex]:0),f.push(a),p.push(r);var I=this.lineHelpers.calculatePoints({series:t,x:a,y:r,realIndex:i,i:n,j:P,prevY:b}),M=this._createPaths({series:t,i:n,realIndex:i,j:P,x:a,y:r,pX:s,pY:o,linePath:y,areaPath:k,linePaths:c,areaPaths:u,seriesIndex:h});u=M.areaPaths,c=M.linePaths,s=M.pX,o=M.pY,k=M.areaPath,y=M.linePath,this.appendPathFrom&&(S+=m.line(a,this.zeroY),A+=m.line(a,this.zeroY)),this.handleNullDataPoints(t,I,n,P,i),this._handleMarkersAndLabels({pointsPos:I,series:t,x:a,y:r,prevY:b,i:n,j:P,realIndex:i})}return{yArrj:p,xArrj:f,pathFromArea:A,areaPaths:u,pathFromLine:S,linePaths:c}}},{key:"_handleMarkersAndLabels",value:function(e){var t=e.pointsPos;e.series,e.x,e.y,e.prevY;var i=e.i,n=e.j,a=e.realIndex,r=this.w,s=new z(this.ctx);if(this.pointsChart)this.scatter.draw(this.elSeries,n,{realIndex:a,pointsPos:t,zRatio:this.zRatio,elParent:this.elPointsMain});else{r.globals.series[i].length>1&&this.elPointsMain.node.classList.add("apexcharts-element-hidden");var o=this.markers.plotChartMarkers(t,a,n+1);null!==o&&this.elPointsMain.add(o)}var l=s.drawDataLabel(t,a,n+1,null);null!==l&&this.elDataLabelsWrap.add(l)}},{key:"_createPaths",value:function(e){var t=e.series,i=e.i,n=e.realIndex,a=e.j,r=e.x,s=e.y,o=e.pX,l=e.pY,c=e.linePath,u=e.areaPath,h=e.linePaths,d=e.areaPaths,f=e.seriesIndex,p=this.w,g=new w(this.ctx),m=p.config.stroke.curve,v=this.areaBottomY;if(Array.isArray(p.config.stroke.curve)&&(m=Array.isArray(f)?p.config.stroke.curve[f[i]]:p.config.stroke.curve[i]),"smooth"===m){var x=.35*(r-o);p.globals.hasNullValues?(null!==t[i][a]&&(null!==t[i][a+1]?(c=g.move(o,l)+g.curve(o+x,l,r-x,s,r+1,s),u=g.move(o+1,l)+g.curve(o+x,l,r-x,s,r+1,s)+g.line(r,v)+g.line(o,v)+"z"):(c=g.move(o,l),u=g.move(o,l)+"z")),h.push(c),d.push(u)):(c+=g.curve(o+x,l,r-x,s,r,s),u+=g.curve(o+x,l,r-x,s,r,s)),o=r,l=s,a===t[i].length-2&&(u=u+g.curve(o,l,r,s,r,v)+g.move(r,s)+"z",p.globals.hasNullValues||(h.push(c),d.push(u)))}else{if(null===t[i][a+1]){c+=g.move(r,s);var b=p.globals.isXNumeric?(p.globals.seriesX[n][a]-p.globals.minX)/this.xRatio:r-this.xDivision;u=u+g.line(b,v)+g.move(r,s)+"z"}null===t[i][a]&&(c+=g.move(r,s),u+=g.move(r,v)),"stepline"===m?(c=c+g.line(r,null,"H")+g.line(null,s,"V"),u=u+g.line(r,null,"H")+g.line(null,s,"V")):"straight"===m&&(c+=g.line(r,s),u+=g.line(r,s)),a===t[i].length-2&&(u=u+g.line(r,v)+g.move(r,s)+"z",h.push(c),d.push(u))}return{linePaths:h,areaPaths:d,pX:o,pY:l,linePath:c,areaPath:u}}},{key:"handleNullDataPoints",value:function(e,t,i,n,a){var r=this.w;if(null===e[i][n]&&r.config.markers.showNullDataPoints||1===e[i].length){var s=this.markers.plotChartMarkers(t,a,n+1,this.strokeWidth-r.config.markers.strokeWidth/2,!0);null!==s&&this.elPointsMain.add(s)}}}]),e}();window.TreemapSquared={},window.TreemapSquared.generate=function(){function e(t,i,n,a){this.xoffset=t,this.yoffset=i,this.height=a,this.width=n,this.shortestEdge=function(){return Math.min(this.height,this.width)},this.getCoordinates=function(e){var t,i=[],n=this.xoffset,a=this.yoffset,s=r(e)/this.height,o=r(e)/this.width;if(this.width>=this.height)for(t=0;t<e.length;t++)i.push([n,a,n+s,a+e[t]/s]),a+=e[t]/s;else for(t=0;t<e.length;t++)i.push([n,a,n+e[t]/o,a+o]),n+=e[t]/o;return i},this.cutArea=function(t){var i;if(this.width>=this.height){var n=t/this.height,a=this.width-n;i=new e(this.xoffset+n,this.yoffset,a,this.height)}else{var r=t/this.width,s=this.height-r;i=new e(this.xoffset,this.yoffset+r,this.width,s)}return i}}function t(t,n,a,s,o){return s=void 0===s?0:s,o=void 0===o?0:o,function(e){var t,i,n=[];for(t=0;t<e.length;t++)for(i=0;i<e[t].length;i++)n.push(e[t][i]);return n}(i(function(e,t){var i,n=[],a=t/r(e);for(i=0;i<e.length;i++)n[i]=e[i]*a;return n}(t,n*a),[],new e(s,o,n,a),[]))}function i(e,t,a,s){var o,l,c;if(0!==e.length)return o=a.shortestEdge(),function(e,t,i){var a;return 0===e.length||((a=e.slice()).push(t),n(e,i)>=n(a,i))}(t,l=e[0],o)?(t.push(l),i(e.slice(1),t,a,s)):(c=a.cutArea(r(t),s),s.push(a.getCoordinates(t)),i(e,[],c,s)),s;s.push(a.getCoordinates(t))}function n(e,t){var i=Math.min.apply(Math,e),n=Math.max.apply(Math,e),a=r(e);return Math.max(Math.pow(t,2)*n/Math.pow(a,2),Math.pow(a,2)/(Math.pow(t,2)*i))}function a(e){return e&&e.constructor===Array}function r(e){var t,i=0;for(t=0;t<e.length;t++)i+=e[t];return i}function s(e){var t,i=0;if(a(e[0]))for(t=0;t<e.length;t++)i+=s(e[t]);else i=r(e);return i}return function e(i,n,r,o,l){o=void 0===o?0:o,l=void 0===l?0:l;var c,u,h=[],d=[];if(a(i[0])){for(u=0;u<i.length;u++)h[u]=s(i[u]);for(c=t(h,n,r,o,l),u=0;u<i.length;u++)d.push(e(i[u],c[u][2]-c[u][0],c[u][3]-c[u][1],c[u][0],c[u][1]))}else d=t(i,n,r,o,l);return d}}();var Oe,ze,Re=function(){function e(t,i){o(this,e),this.ctx=t,this.w=t.w,this.strokeWidth=this.w.config.stroke.width,this.helpers=new Ae(t),this.dynamicAnim=this.w.config.chart.animations.dynamicAnimation,this.labels=[]}return c(e,[{key:"draw",value:function(e){var t=this,i=this.w,n=new w(this.ctx),a=new I(this.ctx),r=n.group({class:"apexcharts-treemap"});if(i.globals.noData)return r;var s=[];return e.forEach((function(e){var t=e.map((function(e){return Math.abs(e)}));s.push(t)})),this.negRange=this.helpers.checkColorRange(),i.config.series.forEach((function(e,i){e.data.forEach((function(e){Array.isArray(t.labels[i])||(t.labels[i]=[]),t.labels[i].push(e.x)}))})),window.TreemapSquared.generate(s,i.globals.gridWidth,i.globals.gridHeight).forEach((function(s,o){var l=n.group({class:"apexcharts-series apexcharts-treemap-series",seriesName:x.escapeString(i.globals.seriesNames[o]),rel:o+1,"data:realIndex":o});if(i.config.chart.dropShadow.enabled){var c=i.config.chart.dropShadow;new y(t.ctx).dropShadow(r,c,o)}var u=n.group({class:"apexcharts-data-labels"});s.forEach((function(r,s){var c=r[0],u=r[1],h=r[2],d=r[3],f=n.drawRect(c,u,h-c,d-u,0,"#fff",1,t.strokeWidth,i.config.plotOptions.treemap.useFillColorAsStroke?g:i.globals.stroke.colors[o]);f.attr({cx:c,cy:u,index:o,i:o,j:s,width:h-c,height:d-u});var p=t.helpers.getShadeColor(i.config.chart.type,o,s,t.negRange),g=p.color;void 0!==i.config.series[o].data[s]&&i.config.series[o].data[s].fillColor&&(g=i.config.series[o].data[s].fillColor);var m=a.fillPath({color:g,seriesNumber:o,dataPointIndex:s});f.node.classList.add("apexcharts-treemap-rect"),f.attr({fill:m}),t.helpers.addListeners(f);var v={x:c+(h-c)/2,y:u+(d-u)/2,width:0,height:0},x={x:c,y:u,width:h-c,height:d-u};if(i.config.chart.animations.enabled&&!i.globals.dataChanged){var b=1;i.globals.resized||(b=i.config.chart.animations.speed),t.animateTreemap(f,v,x,b)}if(i.globals.dataChanged){var y=1;t.dynamicAnim.enabled&&i.globals.shouldAnimate&&(y=t.dynamicAnim.speed,i.globals.previousPaths[o]&&i.globals.previousPaths[o][s]&&i.globals.previousPaths[o][s].rect&&(v=i.globals.previousPaths[o][s].rect),t.animateTreemap(f,v,x,y))}var w=t.getFontSize(r),k=i.config.dataLabels.formatter(t.labels[o][s],{value:i.globals.series[o][s],seriesIndex:o,dataPointIndex:s,w:i}),S=t.helpers.calculateDataLabels({text:k,x:(c+h)/2,y:(u+d)/2+t.strokeWidth/2+w/3,i:o,j:s,colorProps:p,fontSize:w,series:e});i.config.dataLabels.enabled&&S&&t.rotateToFitLabel(S,k,c,u,h,d),l.add(f),null!==S&&l.add(S)})),l.add(u),r.add(l)})),r}},{key:"getFontSize",value:function(e){var t,i,n=this.w,a=function e(t){var i,n=0;if(Array.isArray(t[0]))for(i=0;i<t.length;i++)n+=e(t[i]);else for(i=0;i<t.length;i++)n+=t[i].length;return n}(this.labels)/function e(t){var i,n=0;if(Array.isArray(t[0]))for(i=0;i<t.length;i++)n+=e(t[i]);else for(i=0;i<t.length;i++)n+=1;return n}(this.labels);return t=(e[2]-e[0])*(e[3]-e[1]),i=Math.pow(t,.5),Math.min(i/a,parseInt(n.config.dataLabels.style.fontSize,10))}},{key:"rotateToFitLabel",value:function(e,t,i,n,a,r){var s=new w(this.ctx),o=s.getTextRects(t);if(o.width+5>a-i&&o.width<=r-n){var l=s.rotateAroundCenter(e.node);e.node.setAttribute("transform","rotate(-90 ".concat(l.x," ").concat(l.y,")"))}}},{key:"animateTreemap",value:function(e,t,i,n){var a=new b(this.ctx);a.animateRect(e,{x:t.x,y:t.y,width:t.width,height:t.height},{x:i.x,y:i.y,width:i.width,height:i.height},n,(function(){a.animationCompleted(e)}))}}]),e}(),Fe=function(){function e(t){o(this,e),this.ctx=t,this.w=t.w,this.timeScaleArray=[],this.utc=this.w.config.xaxis.labels.datetimeUTC}return c(e,[{key:"calculateTimeScaleTicks",value:function(e,t){var i=this,n=this.w;if(n.globals.allSeriesCollapsed)return n.globals.labels=[],n.globals.timescaleLabels=[],[];var a=new X(this.ctx),s=(t-e)/864e5;this.determineInterval(s),n.globals.disableZoomIn=!1,n.globals.disableZoomOut=!1,s<.00011574074074074075?n.globals.disableZoomIn=!0:s>5e4&&(n.globals.disableZoomOut=!0);var o=a.getTimeUnitsfromTimestamp(e,t,this.utc),l=n.globals.gridWidth/s,c=l/24,u=c/60,h=u/60,d=Math.floor(24*s),f=Math.floor(1440*s),p=Math.floor(86400*s),g=Math.floor(s),m=Math.floor(s/30),v=Math.floor(s/365),x={minMillisecond:o.minMillisecond,minSecond:o.minSecond,minMinute:o.minMinute,minHour:o.minHour,minDate:o.minDate,minMonth:o.minMonth,minYear:o.minYear},b={firstVal:x,currentMillisecond:x.minMillisecond,currentSecond:x.minSecond,currentMinute:x.minMinute,currentHour:x.minHour,currentMonthDate:x.minDate,currentDate:x.minDate,currentMonth:x.minMonth,currentYear:x.minYear,daysWidthOnXAxis:l,hoursWidthOnXAxis:c,minutesWidthOnXAxis:u,secondsWidthOnXAxis:h,numberOfSeconds:p,numberOfMinutes:f,numberOfHours:d,numberOfDays:g,numberOfMonths:m,numberOfYears:v};switch(this.tickInterval){case"years":this.generateYearScale(b);break;case"months":case"half_year":this.generateMonthScale(b);break;case"months_days":case"months_fortnight":case"days":case"week_days":this.generateDayScale(b);break;case"hours":this.generateHourScale(b);break;case"minutes_fives":case"minutes":this.generateMinuteScale(b);break;case"seconds_tens":case"seconds_fives":case"seconds":this.generateSecondScale(b)}var y=this.timeScaleArray.map((function(e){var t={position:e.position,unit:e.unit,year:e.year,day:e.day?e.day:1,hour:e.hour?e.hour:0,month:e.month+1};return"month"===e.unit?r(r({},t),{},{day:1,value:e.value+1}):"day"===e.unit||"hour"===e.unit?r(r({},t),{},{value:e.value}):"minute"===e.unit?r(r({},t),{},{value:e.value,minute:e.value}):"second"===e.unit?r(r({},t),{},{value:e.value,minute:e.minute,second:e.second}):e}));return y.filter((function(e){var t=1,a=Math.ceil(n.globals.gridWidth/120),r=e.value;void 0!==n.config.xaxis.tickAmount&&(a=n.config.xaxis.tickAmount),y.length>a&&(t=Math.floor(y.length/a));var s=!1,o=!1;switch(i.tickInterval){case"years":"year"===e.unit&&(s=!0);break;case"half_year":t=7,"year"===e.unit&&(s=!0);break;case"months":t=1,"year"===e.unit&&(s=!0);break;case"months_fortnight":t=15,"year"!==e.unit&&"month"!==e.unit||(s=!0),30===r&&(o=!0);break;case"months_days":t=10,"month"===e.unit&&(s=!0),30===r&&(o=!0);break;case"week_days":t=8,"month"===e.unit&&(s=!0);break;case"days":t=1,"month"===e.unit&&(s=!0);break;case"hours":"day"===e.unit&&(s=!0);break;case"minutes_fives":case"seconds_fives":r%5!=0&&(o=!0);break;case"seconds_tens":r%10!=0&&(o=!0)}if("hours"===i.tickInterval||"minutes_fives"===i.tickInterval||"seconds_tens"===i.tickInterval||"seconds_fives"===i.tickInterval){if(!o)return!0}else if((r%t==0||s)&&!o)return!0}))}},{key:"recalcDimensionsBasedOnFormat",value:function(e,t){var i=this.w,n=this.formatDates(e),a=this.removeOverlappingTS(n);i.globals.timescaleLabels=a.slice(),new ue(this.ctx).plotCoords()}},{key:"determineInterval",value:function(e){var t=24*e,i=60*t;switch(!0){case e/365>5:this.tickInterval="years";break;case e>800:this.tickInterval="half_year";break;case e>180:this.tickInterval="months";break;case e>90:this.tickInterval="months_fortnight";break;case e>60:this.tickInterval="months_days";break;case e>30:this.tickInterval="week_days";break;case e>2:this.tickInterval="days";break;case t>2.4:this.tickInterval="hours";break;case i>15:this.tickInterval="minutes_fives";break;case i>5:this.tickInterval="minutes";break;case i>1:this.tickInterval="seconds_tens";break;case 60*i>20:this.tickInterval="seconds_fives";break;default:this.tickInterval="seconds"}}},{key:"generateYearScale",value:function(e){var t=e.firstVal,i=e.currentMonth,n=e.currentYear,a=e.daysWidthOnXAxis,r=e.numberOfYears,s=t.minYear,o=0,l=new X(this.ctx),c="year";if(t.minDate>1||t.minMonth>0){var u=l.determineRemainingDaysOfYear(t.minYear,t.minMonth,t.minDate);o=(l.determineDaysOfYear(t.minYear)-u+1)*a,s=t.minYear+1,this.timeScaleArray.push({position:o,value:s,unit:c,year:s,month:x.monthMod(i+1)})}else 1===t.minDate&&0===t.minMonth&&this.timeScaleArray.push({position:o,value:s,unit:c,year:n,month:x.monthMod(i+1)});for(var h=s,d=o,f=0;f<r;f++)h++,d=l.determineDaysOfYear(h-1)*a+d,this.timeScaleArray.push({position:d,value:h,unit:c,year:h,month:1})}},{key:"generateMonthScale",value:function(e){var t=e.firstVal,i=e.currentMonthDate,n=e.currentMonth,a=e.currentYear,r=e.daysWidthOnXAxis,s=e.numberOfMonths,o=n,l=0,c=new X(this.ctx),u="month",h=0;if(t.minDate>1){l=(c.determineDaysOfMonths(n+1,t.minYear)-i+1)*r,o=x.monthMod(n+1);var d=a+h,f=x.monthMod(o),p=o;0===o&&(u="year",p=d,f=1,d+=h+=1),this.timeScaleArray.push({position:l,value:p,unit:u,year:d,month:f})}else this.timeScaleArray.push({position:l,value:o,unit:u,year:a,month:x.monthMod(n)});for(var g=o+1,m=l,v=0,b=1;v<s;v++,b++){0===(g=x.monthMod(g))?(u="year",h+=1):u="month";var y=this._getYear(a,g,h);m=c.determineDaysOfMonths(g,y)*r+m;var w=0===g?y:g;this.timeScaleArray.push({position:m,value:w,unit:u,year:y,month:0===g?1:g}),g++}}},{key:"generateDayScale",value:function(e){var t=e.firstVal,i=e.currentMonth,n=e.currentYear,a=e.hoursWidthOnXAxis,r=e.numberOfDays,s=new X(this.ctx),o="day",l=t.minDate+1,c=l,u=function(e,t,i){return e>s.determineDaysOfMonths(t+1,i)?(c=1,o="month",d=t+=1,t):t},h=(24-t.minHour)*a,d=l,f=u(c,i,n);0===t.minHour&&1===t.minDate?(h=0,d=x.monthMod(t.minMonth),o="month",c=t.minDate,r++):1!==t.minDate&&0===t.minHour&&0===t.minMinute&&(h=0,l=t.minDate,d=l,f=u(c=l,i,n)),this.timeScaleArray.push({position:h,value:d,unit:o,year:this._getYear(n,f,0),month:x.monthMod(f),day:c});for(var p=h,g=0;g<r;g++){o="day",f=u(c+=1,f,this._getYear(n,f,0));var m=this._getYear(n,f,0);p=24*a+p;var v=1===c?x.monthMod(f):c;this.timeScaleArray.push({position:p,value:v,unit:o,year:m,month:x.monthMod(f),day:v})}}},{key:"generateHourScale",value:function(e){var t=e.firstVal,i=e.currentDate,n=e.currentMonth,a=e.currentYear,r=e.minutesWidthOnXAxis,s=e.numberOfHours,o=new X(this.ctx),l="hour",c=function(e,t){return e>o.determineDaysOfMonths(t+1,a)&&(g=1,t+=1),{month:t,date:g}},u=function(e,t){return e>o.determineDaysOfMonths(t+1,a)?t+=1:t},h=60-(t.minMinute+t.minSecond/60),d=h*r,f=t.minHour+1,p=f+1;60===h&&(d=0,p=(f=t.minHour)+1);var g=i,m=u(g,n);this.timeScaleArray.push({position:d,value:f,unit:l,day:g,hour:p,year:a,month:x.monthMod(m)});for(var v=d,b=0;b<s;b++){l="hour",p>=24&&(p=0,l="day",m=c(g+=1,m).month,m=u(g,m));var y=this._getYear(a,m,0);v=0===p&&0===b?h*r:60*r+v;var w=0===p?g:p;this.timeScaleArray.push({position:v,value:w,unit:l,hour:p,day:g,year:y,month:x.monthMod(m)}),p++}}},{key:"generateMinuteScale",value:function(e){for(var t=e.currentMillisecond,i=e.currentSecond,n=e.currentMinute,a=e.currentHour,r=e.currentDate,s=e.currentMonth,o=e.currentYear,l=e.minutesWidthOnXAxis,c=e.secondsWidthOnXAxis,u=e.numberOfMinutes,h=n+1,d=r,f=s,p=o,g=a,m=(60-i-t/1e3)*c,v=0;v<u;v++)h>=60&&(h=0,24===(g+=1)&&(g=0)),this.timeScaleArray.push({position:m,value:h,unit:"minute",hour:g,minute:h,day:d,year:this._getYear(p,f,0),month:x.monthMod(f)}),m+=l,h++}},{key:"generateSecondScale",value:function(e){for(var t=e.currentMillisecond,i=e.currentSecond,n=e.currentMinute,a=e.currentHour,r=e.currentDate,s=e.currentMonth,o=e.currentYear,l=e.secondsWidthOnXAxis,c=e.numberOfSeconds,u=i+1,h=n,d=r,f=s,p=o,g=a,m=(1e3-t)/1e3*l,v=0;v<c;v++)u>=60&&(u=0,++h>=60&&(h=0,24==++g&&(g=0))),this.timeScaleArray.push({position:m,value:u,unit:"second",hour:g,minute:h,second:u,day:d,year:this._getYear(p,f,0),month:x.monthMod(f)}),m+=l,u++}},{key:"createRawDateString",value:function(e,t){var i=e.year;return 0===e.month&&(e.month=1),i+="-"+("0"+e.month.toString()).slice(-2),"day"===e.unit?i+="day"===e.unit?"-"+("0"+t).slice(-2):"-01":i+="-"+("0"+(e.day?e.day:"1")).slice(-2),"hour"===e.unit?i+="hour"===e.unit?"T"+("0"+t).slice(-2):"T00":i+="T"+("0"+(e.hour?e.hour:"0")).slice(-2),"minute"===e.unit?i+=":"+("0"+t).slice(-2):i+=":"+(e.minute?("0"+e.minute).slice(-2):"00"),"second"===e.unit?i+=":"+("0"+t).slice(-2):i+=":00",this.utc&&(i+=".000Z"),i}},{key:"formatDates",value:function(e){var t=this,i=this.w;return e.map((function(e){var n=e.value.toString(),a=new X(t.ctx),r=t.createRawDateString(e,n),s=a.getDate(a.parseDate(r));if(t.utc||(s=a.getDate(a.parseDateWithTimezone(r))),void 0===i.config.xaxis.labels.format){var o="dd MMM",l=i.config.xaxis.labels.datetimeFormatter;"year"===e.unit&&(o=l.year),"month"===e.unit&&(o=l.month),"day"===e.unit&&(o=l.day),"hour"===e.unit&&(o=l.hour),"minute"===e.unit&&(o=l.minute),"second"===e.unit&&(o=l.second),n=a.formatDate(s,o)}else n=a.formatDate(s,i.config.xaxis.labels.format);return{dateString:r,position:e.position,value:n,unit:e.unit,year:e.year,month:e.month}}))}},{key:"removeOverlappingTS",value:function(e){var t,i=this,n=new w(this.ctx),a=!1;e.length>0&&e[0].value&&e.every((function(t){return t.value.length===e[0].value.length}))&&(a=!0,t=n.getTextRects(e[0].value).width);var r=0,s=e.map((function(s,o){if(o>0&&i.w.config.xaxis.labels.hideOverlappingLabels){var l=a?t:n.getTextRects(e[r].value).width,c=e[r].position;return s.position>c+l+10?(r=o,s):null}return s}));return s.filter((function(e){return null!==e}))}},{key:"_getYear",value:function(e,t,i){return e+Math.floor(t/12)+i}}]),e}(),Ne=function(){function e(t,i){o(this,e),this.ctx=i,this.w=i.w,this.el=t}return c(e,[{key:"setupElements",value:function(){var e=this.w.globals,t=this.w.config,i=t.chart.type;e.axisCharts=["line","area","bar","rangeBar","candlestick","boxPlot","scatter","bubble","radar","heatmap","treemap"].indexOf(i)>-1,e.xyCharts=["line","area","bar","rangeBar","candlestick","boxPlot","scatter","bubble"].indexOf(i)>-1,e.isBarHorizontal=("bar"===t.chart.type||"rangeBar"===t.chart.type||"boxPlot"===t.chart.type)&&t.plotOptions.bar.horizontal,e.chartClass=".apexcharts"+e.chartID,e.dom.baseEl=this.el,e.dom.elWrap=document.createElement("div"),w.setAttrs(e.dom.elWrap,{id:e.chartClass.substring(1),class:"apexcharts-canvas "+e.chartClass.substring(1)}),this.el.appendChild(e.dom.elWrap),e.dom.Paper=new window.SVG.Doc(e.dom.elWrap),e.dom.Paper.attr({class:"apexcharts-svg","xmlns:data":"ApexChartsNS",transform:"translate(".concat(t.chart.offsetX,", ").concat(t.chart.offsetY,")")}),e.dom.Paper.node.style.background=t.chart.background,this.setSVGDimensions(),e.dom.elGraphical=e.dom.Paper.group().attr({class:"apexcharts-inner apexcharts-graphical"}),e.dom.elAnnotations=e.dom.Paper.group().attr({class:"apexcharts-annotations"}),e.dom.elDefs=e.dom.Paper.defs(),e.dom.elLegendWrap=document.createElement("div"),e.dom.elLegendWrap.classList.add("apexcharts-legend"),e.dom.elWrap.appendChild(e.dom.elLegendWrap),e.dom.Paper.add(e.dom.elGraphical),e.dom.elGraphical.add(e.dom.elDefs)}},{key:"plotChartType",value:function(e,t){var i=this.w,n=i.config,a=i.globals,r={series:[],i:[]},s={series:[],i:[]},o={series:[],i:[]},l={series:[],i:[]},c={series:[],i:[]},u={series:[],i:[]},h={series:[],i:[]};a.series.map((function(t,d){var f=0;void 0!==e[d].type?("column"===e[d].type||"bar"===e[d].type?(a.series.length>1&&n.plotOptions.bar.horizontal&&console.warn("Horizontal bars are not supported in a mixed/combo chart. Please turn off `plotOptions.bar.horizontal`"),c.series.push(t),c.i.push(d),f++,i.globals.columnSeries=c.series):"area"===e[d].type?(s.series.push(t),s.i.push(d),f++):"line"===e[d].type?(r.series.push(t),r.i.push(d),f++):"scatter"===e[d].type?(o.series.push(t),o.i.push(d)):"bubble"===e[d].type?(l.series.push(t),l.i.push(d),f++):"candlestick"===e[d].type?(u.series.push(t),u.i.push(d),f++):"boxPlot"===e[d].type?(h.series.push(t),h.i.push(d),f++):console.warn("You have specified an unrecognized chart type. Available types for this property are line/area/column/bar/scatter/bubble"),f>1&&(a.comboCharts=!0)):(r.series.push(t),r.i.push(d))}));var d=new Me(this.ctx,t),f=new Se(this.ctx,t);this.ctx.pie=new Pe(this.ctx);var p=new Le(this.ctx);this.ctx.rangeBar=new Y(this.ctx,t);var g=new Te(this.ctx),m=[];if(a.comboCharts){if(s.series.length>0&&m.push(d.draw(s.series,"area",s.i)),c.series.length>0)if(i.config.chart.stacked){var v=new ke(this.ctx,t);m.push(v.draw(c.series,c.i))}else this.ctx.bar=new D(this.ctx,t),m.push(this.ctx.bar.draw(c.series,c.i));if(r.series.length>0&&m.push(d.draw(r.series,"line",r.i)),u.series.length>0&&m.push(f.draw(u.series,u.i)),h.series.length>0&&m.push(f.draw(h.series,h.i)),o.series.length>0){var x=new Me(this.ctx,t,!0);m.push(x.draw(o.series,"scatter",o.i))}if(l.series.length>0){var b=new Me(this.ctx,t,!0);m.push(b.draw(l.series,"bubble",l.i))}}else switch(n.chart.type){case"line":m=d.draw(a.series,"line");break;case"area":m=d.draw(a.series,"area");break;case"bar":n.chart.stacked?m=new ke(this.ctx,t).draw(a.series):(this.ctx.bar=new D(this.ctx,t),m=this.ctx.bar.draw(a.series));break;case"candlestick":case"boxPlot":m=new Se(this.ctx,t).draw(a.series);break;case"rangeBar":m=this.ctx.rangeBar.draw(a.series);break;case"heatmap":m=new Ce(this.ctx,t).draw(a.series);break;case"treemap":m=new Re(this.ctx,t).draw(a.series);break;case"pie":case"donut":case"polarArea":m=this.ctx.pie.draw(a.series);break;case"radialBar":m=p.draw(a.series);break;case"radar":m=g.draw(a.series);break;default:m=d.draw(a.series)}return m}},{key:"setSVGDimensions",value:function(){var e=this.w.globals,t=this.w.config;e.svgWidth=t.chart.width,e.svgHeight=t.chart.height;var i=x.getDimensions(this.el),n=t.chart.width.toString().split(/[0-9]+/g).pop();"%"===n?x.isNumber(i[0])&&(0===i[0].width&&(i=x.getDimensions(this.el.parentNode)),e.svgWidth=i[0]*parseInt(t.chart.width,10)/100):"px"!==n&&""!==n||(e.svgWidth=parseInt(t.chart.width,10));var a=t.chart.height.toString().split(/[0-9]+/g).pop();if("auto"!==e.svgHeight&&""!==e.svgHeight)if("%"===a){var r=x.getDimensions(this.el.parentNode);e.svgHeight=r[1]*parseInt(t.chart.height,10)/100}else e.svgHeight=parseInt(t.chart.height,10);else e.axisCharts?e.svgHeight=e.svgWidth/1.61:e.svgHeight=e.svgWidth/1.2;if(e.svgWidth<0&&(e.svgWidth=0),e.svgHeight<0&&(e.svgHeight=0),w.setAttrs(e.dom.Paper.node,{width:e.svgWidth,height:e.svgHeight}),"%"!==a){var s=t.chart.sparkline.enabled?0:e.axisCharts?t.chart.parentHeightOffset:0;e.dom.Paper.node.parentNode.parentNode.style.minHeight=e.svgHeight+s+"px"}e.dom.elWrap.style.width=e.svgWidth+"px",e.dom.elWrap.style.height=e.svgHeight+"px"}},{key:"shiftGraphPosition",value:function(){var e=this.w.globals,t=e.translateY,i={transform:"translate("+e.translateX+", "+t+")"};w.setAttrs(e.dom.elGraphical.node,i)}},{key:"resizeNonAxisCharts",value:function(){var e=this.w,t=e.globals,i=0,n=e.config.chart.sparkline.enabled?1:15;n+=e.config.grid.padding.bottom,"top"!==e.config.legend.position&&"bottom"!==e.config.legend.position||!e.config.legend.show||e.config.legend.floating||(i=new de(this.ctx).legendHelpers.getLegendBBox().clwh+10);var a=e.globals.dom.baseEl.querySelector(".apexcharts-radialbar, .apexcharts-pie"),r=2.05*e.globals.radialSize;if(a&&!e.config.chart.sparkline.enabled&&0!==e.config.plotOptions.radialBar.startAngle){var s=x.getBoundingClientRect(a);r=s.bottom;var o=s.bottom-s.top;r=Math.max(2.05*e.globals.radialSize,o)}var l=r+t.translateY+i+n;t.dom.elLegendForeign&&t.dom.elLegendForeign.setAttribute("height",l),t.dom.elWrap.style.height=l+"px",w.setAttrs(t.dom.Paper.node,{height:l}),t.dom.Paper.node.parentNode.parentNode.style.minHeight=l+"px"}},{key:"coreCalculations",value:function(){new Q(this.ctx).init()}},{key:"resetGlobals",value:function(){var e=this,t=function(){return e.w.config.series.map((function(e){return[]}))},i=new _,n=this.w.globals;i.initGlobalVars(n),n.seriesXvalues=t(),n.seriesYvalues=t()}},{key:"isMultipleY",value:function(){if(this.w.config.yaxis.constructor===Array&&this.w.config.yaxis.length>1)return this.w.globals.isMultipleYAxis=!0,!0}},{key:"xySettings",value:function(){var e=null,t=this.w;if(t.globals.axisCharts){if("back"===t.config.xaxis.crosshairs.position&&new ie(this.ctx).drawXCrosshairs(),"back"===t.config.yaxis[0].crosshairs.position&&new ie(this.ctx).drawYCrosshairs(),"datetime"===t.config.xaxis.type&&void 0===t.config.xaxis.labels.formatter){this.ctx.timeScale=new Fe(this.ctx);var i=[];isFinite(t.globals.minX)&&isFinite(t.globals.maxX)&&!t.globals.isBarHorizontal?i=this.ctx.timeScale.calculateTimeScaleTicks(t.globals.minX,t.globals.maxX):t.globals.isBarHorizontal&&(i=this.ctx.timeScale.calculateTimeScaleTicks(t.globals.minY,t.globals.maxY)),this.ctx.timeScale.recalcDimensionsBasedOnFormat(i)}e=new A(this.ctx).getCalculatedRatios()}return e}},{key:"updateSourceChart",value:function(e){this.ctx.w.globals.selection=void 0,this.ctx.updateHelpers._updateOptions({chart:{selection:{xaxis:{min:e.w.globals.minX,max:e.w.globals.maxX}}}},!1,!1)}},{key:"setupBrushHandler",value:function(){var e=this,t=this.w;if(t.config.chart.brush.enabled&&"function"!=typeof t.config.chart.events.selection){var i=t.config.chart.brush.targets||[t.config.chart.brush.target];i.forEach((function(t){var i=ApexCharts.getChartByID(t);i.w.globals.brushSource=e.ctx,"function"!=typeof i.w.config.chart.events.zoomed&&(i.w.config.chart.events.zoomed=function(){e.updateSourceChart(i)}),"function"!=typeof i.w.config.chart.events.scrolled&&(i.w.config.chart.events.scrolled=function(){e.updateSourceChart(i)})})),t.config.chart.events.selection=function(e,n){i.forEach((function(e){var i=ApexCharts.getChartByID(e),a=x.clone(t.config.yaxis);if(t.config.chart.brush.autoScaleYaxis&&1===i.w.globals.series.length){var s=new Z(i);a=s.autoScaleY(i,a,n)}var o=i.w.config.yaxis.reduce((function(e,t,n){return[].concat(m(e),[r(r({},i.w.config.yaxis[n]),{},{min:a[0].min,max:a[0].max})])}),[]);i.ctx.updateHelpers._updateOptions({xaxis:{min:n.xaxis.min,max:n.xaxis.max},yaxis:o},!1,!1,!1,!1)}))}}}}]),e}(),De=function(){function e(t){o(this,e),this.ctx=t,this.w=t.w}return c(e,[{key:"_updateOptions",value:function(e){var t=this,i=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];return new Promise((function(o){var l=[t.ctx];a&&(l=t.ctx.getSyncedCharts()),t.ctx.w.globals.isExecCalled&&(l=[t.ctx],t.ctx.w.globals.isExecCalled=!1),l.forEach((function(a,c){var u=a.w;return u.globals.shouldAnimate=n,i||(u.globals.resized=!0,u.globals.dataChanged=!0,n&&a.series.getPreviousPaths()),e&&"object"===s(e)&&(a.config=new B(e),e=A.extendArrayProps(a.config,e,u),a.w.globals.chartID!==t.ctx.w.globals.chartID&&delete e.series,u.config=x.extend(u.config,e),r&&(u.globals.lastXAxis=e.xaxis?x.clone(e.xaxis):[],u.globals.lastYAxis=e.yaxis?x.clone(e.yaxis):[],u.globals.initialConfig=x.extend({},u.config),u.globals.initialSeries=x.clone(u.config.series))),a.update(e).then((function(){c===l.length-1&&o(a)}))}))}))}},{key:"_updateSeries",value:function(e,t){var i=this,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return new Promise((function(a){var r,s=i.w;return s.globals.shouldAnimate=t,s.globals.dataChanged=!0,t&&i.ctx.series.getPreviousPaths(),s.globals.axisCharts?(0===(r=e.map((function(e,t){return i._extendSeries(e,t)}))).length&&(r=[{data:[]}]),s.config.series=r):s.config.series=e.slice(),n&&(s.globals.initialSeries=x.clone(s.config.series)),i.ctx.update().then((function(){a(i.ctx)}))}))}},{key:"_extendSeries",value:function(e,t){var i=this.w,n=i.config.series[t];return r(r({},i.config.series[t]),{},{name:e.name?e.name:n&&n.name,color:e.color?e.color:n&&n.color,type:e.type?e.type:n&&n.type,data:e.data?e.data:n&&n.data})}},{key:"toggleDataPointSelection",value:function(e,t){var i=this.w,n=null,a=".apexcharts-series[data\\:realIndex='".concat(e,"']");return i.globals.axisCharts?n=i.globals.dom.Paper.select("".concat(a," path[j='").concat(t,"'], ").concat(a," circle[j='").concat(t,"'], ").concat(a," rect[j='").concat(t,"']")).members[0]:void 0===t&&(n=i.globals.dom.Paper.select("".concat(a," path[j='").concat(e,"']")).members[0],"pie"!==i.config.chart.type&&"polarArea"!==i.config.chart.type&&"donut"!==i.config.chart.type||this.ctx.pie.pieClicked(e)),n?(new w(this.ctx).pathMouseDown(n,null),n.node?n.node:null):(console.warn("toggleDataPointSelection: Element not found"),null)}},{key:"forceXAxisUpdate",value:function(e){var t=this.w;if(["min","max"].forEach((function(i){void 0!==e.xaxis[i]&&(t.config.xaxis[i]=e.xaxis[i],t.globals.lastXAxis[i]=e.xaxis[i])})),e.xaxis.categories&&e.xaxis.categories.length&&(t.config.xaxis.categories=e.xaxis.categories),t.config.xaxis.convertedCatToNumeric){var i=new H(e);e=i.convertCatToNumericXaxis(e,this.ctx)}return e}},{key:"forceYAxisUpdate",value:function(e){var t=this.w;return t.config.chart.stacked&&"100%"===t.config.chart.stackType&&(Array.isArray(e.yaxis)?e.yaxis.forEach((function(t,i){e.yaxis[i].min=0,e.yaxis[i].max=100})):(e.yaxis.min=0,e.yaxis.max=100)),e}},{key:"revertDefaultAxisMinMax",value:function(e){var t=this,i=this.w,n=i.globals.lastXAxis,a=i.globals.lastYAxis;e&&e.xaxis&&(n=e.xaxis),e&&e.yaxis&&(a=e.yaxis),i.config.xaxis.min=n.min,i.config.xaxis.max=n.max,i.config.yaxis.map((function(e,n){i.globals.zoomed||void 0!==a[n]?function(e){void 0!==a[e]&&(i.config.yaxis[e].min=a[e].min,i.config.yaxis[e].max=a[e].max)}(n):void 0!==t.ctx.opts.yaxis[n]&&(e.min=t.ctx.opts.yaxis[n].min,e.max=t.ctx.opts.yaxis[n].max)}))}}]),e}();Oe="undefined"!=typeof window?window:void 0,ze=function(e,t){var i=(void 0!==this?this:e).SVG=function(e){if(i.supported)return e=new i.Doc(e),i.parser.draw||i.prepare(),e};if(i.ns="http://www.w3.org/2000/svg",i.xmlns="http://www.w3.org/2000/xmlns/",i.xlink="http://www.w3.org/1999/xlink",i.svgjs="http://svgjs.dev",i.supported=!0,!i.supported)return!1;i.did=1e3,i.eid=function(e){return"Svgjs"+h(e)+i.did++},i.create=function(e){var i=t.createElementNS(this.ns,e);return i.setAttribute("id",this.eid(e)),i},i.extend=function(){var e,t;t=(e=[].slice.call(arguments)).pop();for(var n=e.length-1;n>=0;n--)if(e[n])for(var a in t)e[n].prototype[a]=t[a];i.Set&&i.Set.inherit&&i.Set.inherit()},i.invent=function(e){var t="function"==typeof e.create?e.create:function(){this.constructor.call(this,i.create(e.create))};return e.inherit&&(t.prototype=new e.inherit),e.extend&&i.extend(t,e.extend),e.construct&&i.extend(e.parent||i.Container,e.construct),t},i.adopt=function(t){return t?t.instance?t.instance:((n="svg"==t.nodeName?t.parentNode instanceof e.SVGElement?new i.Nested:new i.Doc:"linearGradient"==t.nodeName?new i.Gradient("linear"):"radialGradient"==t.nodeName?new i.Gradient("radial"):i[h(t.nodeName)]?new(i[h(t.nodeName)]):new i.Element(t)).type=t.nodeName,n.node=t,t.instance=n,n instanceof i.Doc&&n.namespace().defs(),n.setData(JSON.parse(t.getAttribute("svgjs:data"))||{}),n):null;var n},i.prepare=function(){var e=t.getElementsByTagName("body")[0],n=(e?new i.Doc(e):i.adopt(t.documentElement).nested()).size(2,0);i.parser={body:e||t.documentElement,draw:n.style("opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden").node,poly:n.polyline().node,path:n.path().node,native:i.create("svg")}},i.parser={native:i.create("svg")},t.addEventListener("DOMContentLoaded",(function(){i.parser.draw||i.prepare()}),!1),i.regex={numberAndUnit:/^([+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?)([a-z%]*)$/i,hex:/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i,rgb:/rgb\((\d+),(\d+),(\d+)\)/,reference:/#([a-z0-9\-_]+)/i,transforms:/\)\s*,?\s*/,whitespace:/\s/g,isHex:/^#[a-f0-9]{3,6}$/i,isRgb:/^rgb\(/,isCss:/[^:]+:[^;]+;?/,isBlank:/^(\s+)?$/,isNumber:/^[+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,isPercent:/^-?[\d\.]+%$/,isImage:/\.(jpg|jpeg|png|gif|svg)(\?[^=]+.*)?/i,delimiter:/[\s,]+/,hyphen:/([^e])\-/gi,pathLetters:/[MLHVCSQTAZ]/gi,isPathLetter:/[MLHVCSQTAZ]/i,numbersWithDots:/((\d?\.\d+(?:e[+-]?\d+)?)((?:\.\d+(?:e[+-]?\d+)?)+))+/gi,dots:/\./g},i.utils={map:function(e,t){for(var i=e.length,n=[],a=0;a<i;a++)n.push(t(e[a]));return n},filter:function(e,t){for(var i=e.length,n=[],a=0;a<i;a++)t(e[a])&&n.push(e[a]);return n},filterSVGElements:function(t){return this.filter(t,(function(t){return t instanceof e.SVGElement}))}},i.defaults={attrs:{"fill-opacity":1,"stroke-opacity":1,"stroke-width":0,"stroke-linejoin":"miter","stroke-linecap":"butt",fill:"#000000",stroke:"#000000",opacity:1,x:0,y:0,cx:0,cy:0,width:0,height:0,r:0,rx:0,ry:0,offset:0,"stop-opacity":1,"stop-color":"#000000","font-size":16,"font-family":"Helvetica, Arial, sans-serif","text-anchor":"start"}},i.Color=function(e){var t,n;this.r=0,this.g=0,this.b=0,e&&("string"==typeof e?i.regex.isRgb.test(e)?(t=i.regex.rgb.exec(e.replace(i.regex.whitespace,"")),this.r=parseInt(t[1]),this.g=parseInt(t[2]),this.b=parseInt(t[3])):i.regex.isHex.test(e)&&(t=i.regex.hex.exec(4==(n=e).length?["#",n.substring(1,2),n.substring(1,2),n.substring(2,3),n.substring(2,3),n.substring(3,4),n.substring(3,4)].join(""):n),this.r=parseInt(t[1],16),this.g=parseInt(t[2],16),this.b=parseInt(t[3],16)):"object"===s(e)&&(this.r=e.r,this.g=e.g,this.b=e.b))},i.extend(i.Color,{toString:function(){return this.toHex()},toHex:function(){return"#"+d(this.r)+d(this.g)+d(this.b)},toRgb:function(){return"rgb("+[this.r,this.g,this.b].join()+")"},brightness:function(){return this.r/255*.3+this.g/255*.59+this.b/255*.11},morph:function(e){return this.destination=new i.Color(e),this},at:function(e){return this.destination?(e=e<0?0:e>1?1:e,new i.Color({r:~~(this.r+(this.destination.r-this.r)*e),g:~~(this.g+(this.destination.g-this.g)*e),b:~~(this.b+(this.destination.b-this.b)*e)})):this}}),i.Color.test=function(e){return e+="",i.regex.isHex.test(e)||i.regex.isRgb.test(e)},i.Color.isRgb=function(e){return e&&"number"==typeof e.r&&"number"==typeof e.g&&"number"==typeof e.b},i.Color.isColor=function(e){return i.Color.isRgb(e)||i.Color.test(e)},i.Array=function(e,t){0==(e=(e||[]).valueOf()).length&&t&&(e=t.valueOf()),this.value=this.parse(e)},i.extend(i.Array,{toString:function(){return this.value.join(" ")},valueOf:function(){return this.value},parse:function(e){return e=e.valueOf(),Array.isArray(e)?e:this.split(e)}}),i.PointArray=function(e,t){i.Array.call(this,e,t||[[0,0]])},i.PointArray.prototype=new i.Array,i.PointArray.prototype.constructor=i.PointArray;for(var n={M:function(e,t,i){return t.x=i.x=e[0],t.y=i.y=e[1],["M",t.x,t.y]},L:function(e,t){return t.x=e[0],t.y=e[1],["L",e[0],e[1]]},H:function(e,t){return t.x=e[0],["H",e[0]]},V:function(e,t){return t.y=e[0],["V",e[0]]},C:function(e,t){return t.x=e[4],t.y=e[5],["C",e[0],e[1],e[2],e[3],e[4],e[5]]},Q:function(e,t){return t.x=e[2],t.y=e[3],["Q",e[0],e[1],e[2],e[3]]},Z:function(e,t,i){return t.x=i.x,t.y=i.y,["Z"]}},a="mlhvqtcsaz".split(""),r=0,o=a.length;r<o;++r)n[a[r]]=function(e){return function(t,i,a){if("H"==e)t[0]=t[0]+i.x;else if("V"==e)t[0]=t[0]+i.y;else if("A"==e)t[5]=t[5]+i.x,t[6]=t[6]+i.y;else for(var r=0,s=t.length;r<s;++r)t[r]=t[r]+(r%2?i.y:i.x);if(n&&"function"==typeof n[e])return n[e](t,i,a)}}(a[r].toUpperCase());i.PathArray=function(e,t){i.Array.call(this,e,t||[["M",0,0]])},i.PathArray.prototype=new i.Array,i.PathArray.prototype.constructor=i.PathArray,i.extend(i.PathArray,{toString:function(){return function(e){for(var t=0,i=e.length,n="";t<i;t++)n+=e[t][0],null!=e[t][1]&&(n+=e[t][1],null!=e[t][2]&&(n+=" ",n+=e[t][2],null!=e[t][3]&&(n+=" ",n+=e[t][3],n+=" ",n+=e[t][4],null!=e[t][5]&&(n+=" ",n+=e[t][5],n+=" ",n+=e[t][6],null!=e[t][7]&&(n+=" ",n+=e[t][7])))));return n+" "}(this.value)},move:function(e,t){var i=this.bbox();return i.x,i.y,this},at:function(e){if(!this.destination)return this;for(var t=this.value,n=this.destination.value,a=[],r=new i.PathArray,s=0,o=t.length;s<o;s++){a[s]=[t[s][0]];for(var l=1,c=t[s].length;l<c;l++)a[s][l]=t[s][l]+(n[s][l]-t[s][l])*e;"A"===a[s][0]&&(a[s][4]=+(0!=a[s][4]),a[s][5]=+(0!=a[s][5]))}return r.value=a,r},parse:function(e){if(e instanceof i.PathArray)return e.valueOf();var t,a={M:2,L:2,H:1,V:1,C:6,S:4,Q:4,T:2,A:7,Z:0};e="string"==typeof e?e.replace(i.regex.numbersWithDots,c).replace(i.regex.pathLetters," $& ").replace(i.regex.hyphen,"$1 -").trim().split(i.regex.delimiter):e.reduce((function(e,t){return[].concat.call(e,t)}),[]);var r=[],s=new i.Point,o=new i.Point,l=0,u=e.length;do{i.regex.isPathLetter.test(e[l])?(t=e[l],++l):"M"==t?t="L":"m"==t&&(t="l"),r.push(n[t].call(null,e.slice(l,l+=a[t.toUpperCase()]).map(parseFloat),s,o))}while(u>l);return r},bbox:function(){return i.parser.draw||i.prepare(),i.parser.path.setAttribute("d",this.toString()),i.parser.path.getBBox()}}),i.Number=i.invent({create:function(e,t){this.value=0,this.unit=t||"","number"==typeof e?this.value=isNaN(e)?0:isFinite(e)?e:e<0?-34e37:34e37:"string"==typeof e?(t=e.match(i.regex.numberAndUnit))&&(this.value=parseFloat(t[1]),"%"==t[5]?this.value/=100:"s"==t[5]&&(this.value*=1e3),this.unit=t[5]):e instanceof i.Number&&(this.value=e.valueOf(),this.unit=e.unit)},extend:{toString:function(){return("%"==this.unit?~~(1e8*this.value)/1e6:"s"==this.unit?this.value/1e3:this.value)+this.unit},toJSON:function(){return this.toString()},valueOf:function(){return this.value},plus:function(e){return e=new i.Number(e),new i.Number(this+e,this.unit||e.unit)},minus:function(e){return e=new i.Number(e),new i.Number(this-e,this.unit||e.unit)},times:function(e){return e=new i.Number(e),new i.Number(this*e,this.unit||e.unit)},divide:function(e){return e=new i.Number(e),new i.Number(this/e,this.unit||e.unit)},to:function(e){var t=new i.Number(this);return"string"==typeof e&&(t.unit=e),t},morph:function(e){return this.destination=new i.Number(e),e.relative&&(this.destination.value+=this.value),this},at:function(e){return this.destination?new i.Number(this.destination).minus(this).times(e).plus(this):this}}}),i.Element=i.invent({create:function(e){this._stroke=i.defaults.attrs.stroke,this._event=null,this.dom={},(this.node=e)&&(this.type=e.nodeName,this.node.instance=this,this._stroke=e.getAttribute("stroke")||this._stroke)},extend:{x:function(e){return this.attr("x",e)},y:function(e){return this.attr("y",e)},cx:function(e){return null==e?this.x()+this.width()/2:this.x(e-this.width()/2)},cy:function(e){return null==e?this.y()+this.height()/2:this.y(e-this.height()/2)},move:function(e,t){return this.x(e).y(t)},center:function(e,t){return this.cx(e).cy(t)},width:function(e){return this.attr("width",e)},height:function(e){return this.attr("height",e)},size:function(e,t){var n=f(this,e,t);return this.width(new i.Number(n.width)).height(new i.Number(n.height))},clone:function(e){this.writeDataToDom();var t=m(this.node.cloneNode(!0));return e?e.add(t):this.after(t),t},remove:function(){return this.parent()&&this.parent().removeElement(this),this},replace:function(e){return this.after(e).remove(),e},addTo:function(e){return e.put(this)},putIn:function(e){return e.add(this)},id:function(e){return this.attr("id",e)},show:function(){return this.style("display","")},hide:function(){return this.style("display","none")},visible:function(){return"none"!=this.style("display")},toString:function(){return this.attr("id")},classes:function(){var e=this.attr("class");return null==e?[]:e.trim().split(i.regex.delimiter)},hasClass:function(e){return-1!=this.classes().indexOf(e)},addClass:function(e){if(!this.hasClass(e)){var t=this.classes();t.push(e),this.attr("class",t.join(" "))}return this},removeClass:function(e){return this.hasClass(e)&&this.attr("class",this.classes().filter((function(t){return t!=e})).join(" ")),this},toggleClass:function(e){return this.hasClass(e)?this.removeClass(e):this.addClass(e)},reference:function(e){return i.get(this.attr(e))},parent:function(t){var n=this;if(!n.node.parentNode)return null;if(n=i.adopt(n.node.parentNode),!t)return n;for(;n&&n.node instanceof e.SVGElement;){if("string"==typeof t?n.matches(t):n instanceof t)return n;if(!n.node.parentNode||"#document"==n.node.parentNode.nodeName)return null;n=i.adopt(n.node.parentNode)}},doc:function(){return this instanceof i.Doc?this:this.parent(i.Doc)},parents:function(e){var t=[],i=this;do{if(!(i=i.parent(e))||!i.node)break;t.push(i)}while(i.parent);return t},matches:function(e){return function(e,t){return(e.matches||e.matchesSelector||e.msMatchesSelector||e.mozMatchesSelector||e.webkitMatchesSelector||e.oMatchesSelector).call(e,t)}(this.node,e)},native:function(){return this.node},svg:function(e){var n=t.createElement("svg");if(!(e&&this instanceof i.Parent))return n.appendChild(e=t.createElement("svg")),this.writeDataToDom(),e.appendChild(this.node.cloneNode(!0)),n.innerHTML.replace(/^<svg>/,"").replace(/<\/svg>$/,"");n.innerHTML="<svg>"+e.replace(/\n/,"").replace(/<([\w:-]+)([^<]+?)\/>/g,"<$1$2></$1>")+"</svg>";for(var a=0,r=n.firstChild.childNodes.length;a<r;a++)this.node.appendChild(n.firstChild.firstChild);return this},writeDataToDom:function(){return(this.each||this.lines)&&(this.each?this:this.lines()).each((function(){this.writeDataToDom()})),this.node.removeAttribute("svgjs:data"),Object.keys(this.dom).length&&this.node.setAttribute("svgjs:data",JSON.stringify(this.dom)),this},setData:function(e){return this.dom=e,this},is:function(e){return function(e,t){return e instanceof t}(this,e)}}}),i.easing={"-":function(e){return e},"<>":function(e){return-Math.cos(e*Math.PI)/2+.5},">":function(e){return Math.sin(e*Math.PI/2)},"<":function(e){return 1-Math.cos(e*Math.PI/2)}},i.morph=function(e){return function(t,n){return new i.MorphObj(t,n).at(e)}},i.Situation=i.invent({create:function(e){this.init=!1,this.reversed=!1,this.reversing=!1,this.duration=new i.Number(e.duration).valueOf(),this.delay=new i.Number(e.delay).valueOf(),this.start=+new Date+this.delay,this.finish=this.start+this.duration,this.ease=e.ease,this.loop=0,this.loops=!1,this.animations={},this.attrs={},this.styles={},this.transforms=[],this.once={}}}),i.FX=i.invent({create:function(e){this._target=e,this.situations=[],this.active=!1,this.situation=null,this.paused=!1,this.lastPos=0,this.pos=0,this.absPos=0,this._speed=1},extend:{animate:function(e,t,n){"object"===s(e)&&(t=e.ease,n=e.delay,e=e.duration);var a=new i.Situation({duration:e||1e3,delay:n||0,ease:i.easing[t||"-"]||t});return this.queue(a),this},target:function(e){return e&&e instanceof i.Element?(this._target=e,this):this._target},timeToAbsPos:function(e){return(e-this.situation.start)/(this.situation.duration/this._speed)},absPosToTime:function(e){return this.situation.duration/this._speed*e+this.situation.start},startAnimFrame:function(){this.stopAnimFrame(),this.animationFrame=e.requestAnimationFrame(function(){this.step()}.bind(this))},stopAnimFrame:function(){e.cancelAnimationFrame(this.animationFrame)},start:function(){return!this.active&&this.situation&&(this.active=!0,this.startCurrent()),this},startCurrent:function(){return this.situation.start=+new Date+this.situation.delay/this._speed,this.situation.finish=this.situation.start+this.situation.duration/this._speed,this.initAnimations().step()},queue:function(e){return("function"==typeof e||e instanceof i.Situation)&&this.situations.push(e),this.situation||(this.situation=this.situations.shift()),this},dequeue:function(){return this.stop(),this.situation=this.situations.shift(),this.situation&&(this.situation instanceof i.Situation?this.start():this.situation.call(this)),this},initAnimations:function(){var e,t=this.situation;if(t.init)return this;for(var n in t.animations){e=this.target()[n](),Array.isArray(e)||(e=[e]),Array.isArray(t.animations[n])||(t.animations[n]=[t.animations[n]]);for(var a=e.length;a--;)t.animations[n][a]instanceof i.Number&&(e[a]=new i.Number(e[a])),t.animations[n][a]=e[a].morph(t.animations[n][a])}for(var n in t.attrs)t.attrs[n]=new i.MorphObj(this.target().attr(n),t.attrs[n]);for(var n in t.styles)t.styles[n]=new i.MorphObj(this.target().style(n),t.styles[n]);return t.initialTransformation=this.target().matrixify(),t.init=!0,this},clearQueue:function(){return this.situations=[],this},clearCurrent:function(){return this.situation=null,this},stop:function(e,t){var i=this.active;return this.active=!1,t&&this.clearQueue(),e&&this.situation&&(!i&&this.startCurrent(),this.atEnd()),this.stopAnimFrame(),this.clearCurrent()},after:function(e){var t=this.last();return this.target().on("finished.fx",(function i(n){n.detail.situation==t&&(e.call(this,t),this.off("finished.fx",i))})),this._callStart()},during:function(e){var t=this.last(),n=function(n){n.detail.situation==t&&e.call(this,n.detail.pos,i.morph(n.detail.pos),n.detail.eased,t)};return this.target().off("during.fx",n).on("during.fx",n),this.after((function(){this.off("during.fx",n)})),this._callStart()},afterAll:function(e){var t=function t(i){e.call(this),this.off("allfinished.fx",t)};return this.target().off("allfinished.fx",t).on("allfinished.fx",t),this._callStart()},last:function(){return this.situations.length?this.situations[this.situations.length-1]:this.situation},add:function(e,t,i){return this.last()[i||"animations"][e]=t,this._callStart()},step:function(e){var t,i,n;e||(this.absPos=this.timeToAbsPos(+new Date)),!1!==this.situation.loops?(t=Math.max(this.absPos,0),i=Math.floor(t),!0===this.situation.loops||i<this.situation.loops?(this.pos=t-i,n=this.situation.loop,this.situation.loop=i):(this.absPos=this.situation.loops,this.pos=1,n=this.situation.loop-1,this.situation.loop=this.situation.loops),this.situation.reversing&&(this.situation.reversed=this.situation.reversed!=Boolean((this.situation.loop-n)%2))):(this.absPos=Math.min(this.absPos,1),this.pos=this.absPos),this.pos<0&&(this.pos=0),this.situation.reversed&&(this.pos=1-this.pos);var a=this.situation.ease(this.pos);for(var r in this.situation.once)r>this.lastPos&&r<=a&&(this.situation.once[r].call(this.target(),this.pos,a),delete this.situation.once[r]);return this.active&&this.target().fire("during",{pos:this.pos,eased:a,fx:this,situation:this.situation}),this.situation?(this.eachAt(),1==this.pos&&!this.situation.reversed||this.situation.reversed&&0==this.pos?(this.stopAnimFrame(),this.target().fire("finished",{fx:this,situation:this.situation}),this.situations.length||(this.target().fire("allfinished"),this.situations.length||(this.target().off(".fx"),this.active=!1)),this.active?this.dequeue():this.clearCurrent()):!this.paused&&this.active&&this.startAnimFrame(),this.lastPos=a,this):this},eachAt:function(){var e,t=this,n=this.target(),a=this.situation;for(var r in a.animations)e=[].concat(a.animations[r]).map((function(e){return"string"!=typeof e&&e.at?e.at(a.ease(t.pos),t.pos):e})),n[r].apply(n,e);for(var r in a.attrs)e=[r].concat(a.attrs[r]).map((function(e){return"string"!=typeof e&&e.at?e.at(a.ease(t.pos),t.pos):e})),n.attr.apply(n,e);for(var r in a.styles)e=[r].concat(a.styles[r]).map((function(e){return"string"!=typeof e&&e.at?e.at(a.ease(t.pos),t.pos):e})),n.style.apply(n,e);if(a.transforms.length){e=a.initialTransformation,r=0;for(var s=a.transforms.length;r<s;r++){var o=a.transforms[r];o instanceof i.Matrix?e=o.relative?e.multiply((new i.Matrix).morph(o).at(a.ease(this.pos))):e.morph(o).at(a.ease(this.pos)):(o.relative||o.undo(e.extract()),e=e.multiply(o.at(a.ease(this.pos))))}n.matrix(e)}return this},once:function(e,t,i){var n=this.last();return i||(e=n.ease(e)),n.once[e]=t,this},_callStart:function(){return setTimeout(function(){this.start()}.bind(this),0),this}},parent:i.Element,construct:{animate:function(e,t,n){return(this.fx||(this.fx=new i.FX(this))).animate(e,t,n)},delay:function(e){return(this.fx||(this.fx=new i.FX(this))).delay(e)},stop:function(e,t){return this.fx&&this.fx.stop(e,t),this},finish:function(){return this.fx&&this.fx.finish(),this}}}),i.MorphObj=i.invent({create:function(e,t){return i.Color.isColor(t)?new i.Color(e).morph(t):i.regex.delimiter.test(e)?i.regex.pathLetters.test(e)?new i.PathArray(e).morph(t):new i.Array(e).morph(t):i.regex.numberAndUnit.test(t)?new i.Number(e).morph(t):(this.value=e,void(this.destination=t))},extend:{at:function(e,t){return t<1?this.value:this.destination},valueOf:function(){return this.value}}}),i.extend(i.FX,{attr:function(e,t,i){if("object"===s(e))for(var n in e)this.attr(n,e[n]);else this.add(e,t,"attrs");return this},plot:function(e,t,i,n){return 4==arguments.length?this.plot([e,t,i,n]):this.add("plot",new(this.target().morphArray)(e))}}),i.Box=i.invent({create:function(e,t,n,a){if(!("object"!==s(e)||e instanceof i.Element))return i.Box.call(this,null!=e.left?e.left:e.x,null!=e.top?e.top:e.y,e.width,e.height);4==arguments.length&&(this.x=e,this.y=t,this.width=n,this.height=a),v(this)}}),i.BBox=i.invent({create:function(e){if(i.Box.apply(this,[].slice.call(arguments)),e instanceof i.Element){var n;try{if(!t.documentElement.contains){for(var a=e.node;a.parentNode;)a=a.parentNode;if(a!=t)throw new Error("Element not in the dom")}n=e.node.getBBox()}catch(t){if(e instanceof i.Shape){i.parser.draw||i.prepare();var r=e.clone(i.parser.draw.instance).show();r&&r.node&&"function"==typeof r.node.getBBox&&(n=r.node.getBBox()),r&&"function"==typeof r.remove&&r.remove()}else n={x:e.node.clientLeft,y:e.node.clientTop,width:e.node.clientWidth,height:e.node.clientHeight}}i.Box.call(this,n)}},inherit:i.Box,parent:i.Element,construct:{bbox:function(){return new i.BBox(this)}}}),i.BBox.prototype.constructor=i.BBox,i.Matrix=i.invent({create:function(e){var t=g([1,0,0,1,0,0]);e=null===e?t:e instanceof i.Element?e.matrixify():"string"==typeof e?g(e.split(i.regex.delimiter).map(parseFloat)):6==arguments.length?g([].slice.call(arguments)):Array.isArray(e)?g(e):e&&"object"===s(e)?e:t;for(var n=b.length-1;n>=0;--n)this[b[n]]=null!=e[b[n]]?e[b[n]]:t[b[n]]},extend:{extract:function(){var e=p(this,0,1);p(this,1,0);var t=180/Math.PI*Math.atan2(e.y,e.x)-90;return{x:this.e,y:this.f,transformedX:(this.e*Math.cos(t*Math.PI/180)+this.f*Math.sin(t*Math.PI/180))/Math.sqrt(this.a*this.a+this.b*this.b),transformedY:(this.f*Math.cos(t*Math.PI/180)+this.e*Math.sin(-t*Math.PI/180))/Math.sqrt(this.c*this.c+this.d*this.d),rotation:t,a:this.a,b:this.b,c:this.c,d:this.d,e:this.e,f:this.f,matrix:new i.Matrix(this)}},clone:function(){return new i.Matrix(this)},morph:function(e){return this.destination=new i.Matrix(e),this},multiply:function(e){return new i.Matrix(this.native().multiply(function(e){return e instanceof i.Matrix||(e=new i.Matrix(e)),e}(e).native()))},inverse:function(){return new i.Matrix(this.native().inverse())},translate:function(e,t){return new i.Matrix(this.native().translate(e||0,t||0))},native:function(){for(var e=i.parser.native.createSVGMatrix(),t=b.length-1;t>=0;t--)e[b[t]]=this[b[t]];return e},toString:function(){return"matrix("+x(this.a)+","+x(this.b)+","+x(this.c)+","+x(this.d)+","+x(this.e)+","+x(this.f)+")"}},parent:i.Element,construct:{ctm:function(){return new i.Matrix(this.node.getCTM())},screenCTM:function(){if(this instanceof i.Nested){var e=this.rect(1,1),t=e.node.getScreenCTM();return e.remove(),new i.Matrix(t)}return new i.Matrix(this.node.getScreenCTM())}}}),i.Point=i.invent({create:function(e,t){var i;i=Array.isArray(e)?{x:e[0],y:e[1]}:"object"===s(e)?{x:e.x,y:e.y}:null!=e?{x:e,y:null!=t?t:e}:{x:0,y:0},this.x=i.x,this.y=i.y},extend:{clone:function(){return new i.Point(this)},morph:function(e,t){return this.destination=new i.Point(e,t),this}}}),i.extend(i.Element,{point:function(e,t){return new i.Point(e,t).transform(this.screenCTM().inverse())}}),i.extend(i.Element,{attr:function(e,t,n){if(null==e){for(e={},n=(t=this.node.attributes).length-1;n>=0;n--)e[t[n].nodeName]=i.regex.isNumber.test(t[n].nodeValue)?parseFloat(t[n].nodeValue):t[n].nodeValue;return e}if("object"===s(e))for(var a in e)this.attr(a,e[a]);else if(null===t)this.node.removeAttribute(e);else{if(null==t)return null==(t=this.node.getAttribute(e))?i.defaults.attrs[e]:i.regex.isNumber.test(t)?parseFloat(t):t;"stroke-width"==e?this.attr("stroke",parseFloat(t)>0?this._stroke:null):"stroke"==e&&(this._stroke=t),"fill"!=e&&"stroke"!=e||(i.regex.isImage.test(t)&&(t=this.doc().defs().image(t,0,0)),t instanceof i.Image&&(t=this.doc().defs().pattern(0,0,(function(){this.add(t)})))),"number"==typeof t?t=new i.Number(t):i.Color.isColor(t)?t=new i.Color(t):Array.isArray(t)&&(t=new i.Array(t)),"leading"==e?this.leading&&this.leading(t):"string"==typeof n?this.node.setAttributeNS(n,e,t.toString()):this.node.setAttribute(e,t.toString()),!this.rebuild||"font-size"!=e&&"x"!=e||this.rebuild(e,t)}return this}}),i.extend(i.Element,{transform:function(e,t){var n;return"object"!==s(e)?(n=new i.Matrix(this).extract(),"string"==typeof e?n[e]:n):(n=new i.Matrix(this),t=!!t||!!e.relative,null!=e.a&&(n=t?n.multiply(new i.Matrix(e)):new i.Matrix(e)),this.attr("transform",n))}}),i.extend(i.Element,{untransform:function(){return this.attr("transform",null)},matrixify:function(){return(this.attr("transform")||"").split(i.regex.transforms).slice(0,-1).map((function(e){var t=e.trim().split("(");return[t[0],t[1].split(i.regex.delimiter).map((function(e){return parseFloat(e)}))]})).reduce((function(e,t){return"matrix"==t[0]?e.multiply(g(t[1])):e[t[0]].apply(e,t[1])}),new i.Matrix)},toParent:function(e){if(this==e)return this;var t=this.screenCTM(),i=e.screenCTM().inverse();return this.addTo(e).untransform().transform(i.multiply(t)),this},toDoc:function(){return this.toParent(this.doc())}}),i.Transformation=i.invent({create:function(e,t){if(arguments.length>1&&"boolean"!=typeof t)return this.constructor.call(this,[].slice.call(arguments));if(Array.isArray(e))for(var i=0,n=this.arguments.length;i<n;++i)this[this.arguments[i]]=e[i];else if(e&&"object"===s(e))for(i=0,n=this.arguments.length;i<n;++i)this[this.arguments[i]]=e[this.arguments[i]];this.inversed=!1,!0===t&&(this.inversed=!0)}}),i.Translate=i.invent({parent:i.Matrix,inherit:i.Transformation,create:function(e,t){this.constructor.apply(this,[].slice.call(arguments))},extend:{arguments:["transformedX","transformedY"],method:"translate"}}),i.extend(i.Element,{style:function(e,t){if(0==arguments.length)return this.node.style.cssText||"";if(arguments.length<2)if("object"===s(e))for(var n in e)this.style(n,e[n]);else{if(!i.regex.isCss.test(e))return this.node.style[u(e)];for(e=e.split(/\s*;\s*/).filter((function(e){return!!e})).map((function(e){return e.split(/\s*:\s*/)}));t=e.pop();)this.style(t[0],t[1])}else this.node.style[u(e)]=null===t||i.regex.isBlank.test(t)?"":t;return this}}),i.Parent=i.invent({create:function(e){this.constructor.call(this,e)},inherit:i.Element,extend:{children:function(){return i.utils.map(i.utils.filterSVGElements(this.node.childNodes),(function(e){return i.adopt(e)}))},add:function(e,t){return null==t?this.node.appendChild(e.node):e.node!=this.node.childNodes[t]&&this.node.insertBefore(e.node,this.node.childNodes[t]),this},put:function(e,t){return this.add(e,t),e},has:function(e){return this.index(e)>=0},index:function(e){return[].slice.call(this.node.childNodes).indexOf(e.node)},get:function(e){return i.adopt(this.node.childNodes[e])},first:function(){return this.get(0)},last:function(){return this.get(this.node.childNodes.length-1)},each:function(e,t){for(var n=this.children(),a=0,r=n.length;a<r;a++)n[a]instanceof i.Element&&e.apply(n[a],[a,n]),t&&n[a]instanceof i.Container&&n[a].each(e,t);return this},removeElement:function(e){return this.node.removeChild(e.node),this},clear:function(){for(;this.node.hasChildNodes();)this.node.removeChild(this.node.lastChild);return delete this._defs,this},defs:function(){return this.doc().defs()}}}),i.extend(i.Parent,{ungroup:function(e,t){return 0===t||this instanceof i.Defs||this.node==i.parser.draw||(e=e||(this instanceof i.Doc?this:this.parent(i.Parent)),t=t||1/0,this.each((function(){return this instanceof i.Defs?this:this instanceof i.Parent?this.ungroup(e,t-1):this.toParent(e)})),this.node.firstChild||this.remove()),this},flatten:function(e,t){return this.ungroup(e,t)}}),i.Container=i.invent({create:function(e){this.constructor.call(this,e)},inherit:i.Parent}),i.ViewBox=i.invent({parent:i.Container,construct:{}}),["click","dblclick","mousedown","mouseup","mouseover","mouseout","mousemove","touchstart","touchmove","touchleave","touchend","touchcancel"].forEach((function(e){i.Element.prototype[e]=function(t){return i.on(this.node,e,t),this}})),i.listeners=[],i.handlerMap=[],i.listenerId=0,i.on=function(e,t,n,a,r){var s=n.bind(a||e.instance||e),o=(i.handlerMap.indexOf(e)+1||i.handlerMap.push(e))-1,l=t.split(".")[0],c=t.split(".")[1]||"*";i.listeners[o]=i.listeners[o]||{},i.listeners[o][l]=i.listeners[o][l]||{},i.listeners[o][l][c]=i.listeners[o][l][c]||{},n._svgjsListenerId||(n._svgjsListenerId=++i.listenerId),i.listeners[o][l][c][n._svgjsListenerId]=s,e.addEventListener(l,s,r||{passive:!0})},i.off=function(e,t,n){var a=i.handlerMap.indexOf(e),r=t&&t.split(".")[0],s=t&&t.split(".")[1],o="";if(-1!=a)if(n){if("function"==typeof n&&(n=n._svgjsListenerId),!n)return;i.listeners[a][r]&&i.listeners[a][r][s||"*"]&&(e.removeEventListener(r,i.listeners[a][r][s||"*"][n],!1),delete i.listeners[a][r][s||"*"][n])}else if(s&&r){if(i.listeners[a][r]&&i.listeners[a][r][s]){for(var l in i.listeners[a][r][s])i.off(e,[r,s].join("."),l);delete i.listeners[a][r][s]}}else if(s)for(var c in i.listeners[a])for(var o in i.listeners[a][c])s===o&&i.off(e,[c,s].join("."));else if(r){if(i.listeners[a][r]){for(var o in i.listeners[a][r])i.off(e,[r,o].join("."));delete i.listeners[a][r]}}else{for(var c in i.listeners[a])i.off(e,c);delete i.listeners[a],delete i.handlerMap[a]}},i.extend(i.Element,{on:function(e,t,n,a){return i.on(this.node,e,t,n,a),this},off:function(e,t){return i.off(this.node,e,t),this},fire:function(t,n){return t instanceof e.Event?this.node.dispatchEvent(t):this.node.dispatchEvent(t=new i.CustomEvent(t,{detail:n,cancelable:!0})),this._event=t,this},event:function(){return this._event}}),i.Defs=i.invent({create:"defs",inherit:i.Container}),i.G=i.invent({create:"g",inherit:i.Container,extend:{x:function(e){return null==e?this.transform("x"):this.transform({x:e-this.x()},!0)}},construct:{group:function(){return this.put(new i.G)}}}),i.Doc=i.invent({create:function(e){e&&("svg"==(e="string"==typeof e?t.getElementById(e):e).nodeName?this.constructor.call(this,e):(this.constructor.call(this,i.create("svg")),e.appendChild(this.node),this.size("100%","100%")),this.namespace().defs())},inherit:i.Container,extend:{namespace:function(){return this.attr({xmlns:i.ns,version:"1.1"}).attr("xmlns:xlink",i.xlink,i.xmlns).attr("xmlns:svgjs",i.svgjs,i.xmlns)},defs:function(){var e;return this._defs||((e=this.node.getElementsByTagName("defs")[0])?this._defs=i.adopt(e):this._defs=new i.Defs,this.node.appendChild(this._defs.node)),this._defs},parent:function(){return this.node.parentNode&&"#document"!=this.node.parentNode.nodeName?this.node.parentNode:null},remove:function(){return this.parent()&&this.parent().removeChild(this.node),this},clear:function(){for(;this.node.hasChildNodes();)this.node.removeChild(this.node.lastChild);return delete this._defs,i.parser.draw&&!i.parser.draw.parentNode&&this.node.appendChild(i.parser.draw),this},clone:function(e){this.writeDataToDom();var t=this.node,i=m(t.cloneNode(!0));return e?(e.node||e).appendChild(i.node):t.parentNode.insertBefore(i.node,t.nextSibling),i}}}),i.extend(i.Element,{}),i.Gradient=i.invent({create:function(e){this.constructor.call(this,i.create(e+"Gradient")),this.type=e},inherit:i.Container,extend:{at:function(e,t,n){return this.put(new i.Stop).update(e,t,n)},update:function(e){return this.clear(),"function"==typeof e&&e.call(this,this),this},fill:function(){return"url(#"+this.id()+")"},toString:function(){return this.fill()},attr:function(e,t,n){return"transform"==e&&(e="gradientTransform"),i.Container.prototype.attr.call(this,e,t,n)}},construct:{gradient:function(e,t){return this.defs().gradient(e,t)}}}),i.extend(i.Gradient,i.FX,{from:function(e,t){return"radial"==(this._target||this).type?this.attr({fx:new i.Number(e),fy:new i.Number(t)}):this.attr({x1:new i.Number(e),y1:new i.Number(t)})},to:function(e,t){return"radial"==(this._target||this).type?this.attr({cx:new i.Number(e),cy:new i.Number(t)}):this.attr({x2:new i.Number(e),y2:new i.Number(t)})}}),i.extend(i.Defs,{gradient:function(e,t){return this.put(new i.Gradient(e)).update(t)}}),i.Stop=i.invent({create:"stop",inherit:i.Element,extend:{update:function(e){return("number"==typeof e||e instanceof i.Number)&&(e={offset:arguments[0],color:arguments[1],opacity:arguments[2]}),null!=e.opacity&&this.attr("stop-opacity",e.opacity),null!=e.color&&this.attr("stop-color",e.color),null!=e.offset&&this.attr("offset",new i.Number(e.offset)),this}}}),i.Pattern=i.invent({create:"pattern",inherit:i.Container,extend:{fill:function(){return"url(#"+this.id()+")"},update:function(e){return this.clear(),"function"==typeof e&&e.call(this,this),this},toString:function(){return this.fill()},attr:function(e,t,n){return"transform"==e&&(e="patternTransform"),i.Container.prototype.attr.call(this,e,t,n)}},construct:{pattern:function(e,t,i){return this.defs().pattern(e,t,i)}}}),i.extend(i.Defs,{pattern:function(e,t,n){return this.put(new i.Pattern).update(n).attr({x:0,y:0,width:e,height:t,patternUnits:"userSpaceOnUse"})}}),i.Shape=i.invent({create:function(e){this.constructor.call(this,e)},inherit:i.Element}),i.Symbol=i.invent({create:"symbol",inherit:i.Container,construct:{symbol:function(){return this.put(new i.Symbol)}}}),i.Use=i.invent({create:"use",inherit:i.Shape,extend:{element:function(e,t){return this.attr("href",(t||"")+"#"+e,i.xlink)}},construct:{use:function(e,t){return this.put(new i.Use).element(e,t)}}}),i.Rect=i.invent({create:"rect",inherit:i.Shape,construct:{rect:function(e,t){return this.put(new i.Rect).size(e,t)}}}),i.Circle=i.invent({create:"circle",inherit:i.Shape,construct:{circle:function(e){return this.put(new i.Circle).rx(new i.Number(e).divide(2)).move(0,0)}}}),i.extend(i.Circle,i.FX,{rx:function(e){return this.attr("r",e)},ry:function(e){return this.rx(e)}}),i.Ellipse=i.invent({create:"ellipse",inherit:i.Shape,construct:{ellipse:function(e,t){return this.put(new i.Ellipse).size(e,t).move(0,0)}}}),i.extend(i.Ellipse,i.Rect,i.FX,{rx:function(e){return this.attr("rx",e)},ry:function(e){return this.attr("ry",e)}}),i.extend(i.Circle,i.Ellipse,{x:function(e){return null==e?this.cx()-this.rx():this.cx(e+this.rx())},y:function(e){return null==e?this.cy()-this.ry():this.cy(e+this.ry())},cx:function(e){return null==e?this.attr("cx"):this.attr("cx",e)},cy:function(e){return null==e?this.attr("cy"):this.attr("cy",e)},width:function(e){return null==e?2*this.rx():this.rx(new i.Number(e).divide(2))},height:function(e){return null==e?2*this.ry():this.ry(new i.Number(e).divide(2))},size:function(e,t){var n=f(this,e,t);return this.rx(new i.Number(n.width).divide(2)).ry(new i.Number(n.height).divide(2))}}),i.Line=i.invent({create:"line",inherit:i.Shape,extend:{array:function(){return new i.PointArray([[this.attr("x1"),this.attr("y1")],[this.attr("x2"),this.attr("y2")]])},plot:function(e,t,n,a){return null==e?this.array():(e=void 0!==t?{x1:e,y1:t,x2:n,y2:a}:new i.PointArray(e).toLine(),this.attr(e))},move:function(e,t){return this.attr(this.array().move(e,t).toLine())},size:function(e,t){var i=f(this,e,t);return this.attr(this.array().size(i.width,i.height).toLine())}},construct:{line:function(e,t,n,a){return i.Line.prototype.plot.apply(this.put(new i.Line),null!=e?[e,t,n,a]:[0,0,0,0])}}}),i.Polyline=i.invent({create:"polyline",inherit:i.Shape,construct:{polyline:function(e){return this.put(new i.Polyline).plot(e||new i.PointArray)}}}),i.Polygon=i.invent({create:"polygon",inherit:i.Shape,construct:{polygon:function(e){return this.put(new i.Polygon).plot(e||new i.PointArray)}}}),i.extend(i.Polyline,i.Polygon,{array:function(){return this._array||(this._array=new i.PointArray(this.attr("points")))},plot:function(e){return null==e?this.array():this.clear().attr("points","string"==typeof e?e:this._array=new i.PointArray(e))},clear:function(){return delete this._array,this},move:function(e,t){return this.attr("points",this.array().move(e,t))},size:function(e,t){var i=f(this,e,t);return this.attr("points",this.array().size(i.width,i.height))}}),i.extend(i.Line,i.Polyline,i.Polygon,{morphArray:i.PointArray,x:function(e){return null==e?this.bbox().x:this.move(e,this.bbox().y)},y:function(e){return null==e?this.bbox().y:this.move(this.bbox().x,e)},width:function(e){var t=this.bbox();return null==e?t.width:this.size(e,t.height)},height:function(e){var t=this.bbox();return null==e?t.height:this.size(t.width,e)}}),i.Path=i.invent({create:"path",inherit:i.Shape,extend:{morphArray:i.PathArray,array:function(){return this._array||(this._array=new i.PathArray(this.attr("d")))},plot:function(e){return null==e?this.array():this.clear().attr("d","string"==typeof e?e:this._array=new i.PathArray(e))},clear:function(){return delete this._array,this}},construct:{path:function(e){return this.put(new i.Path).plot(e||new i.PathArray)}}}),i.Image=i.invent({create:"image",inherit:i.Shape,extend:{load:function(t){if(!t)return this;var n=this,a=new e.Image;return i.on(a,"load",(function(){i.off(a);var e=n.parent(i.Pattern);null!==e&&(0==n.width()&&0==n.height()&&n.size(a.width,a.height),e&&0==e.width()&&0==e.height()&&e.size(n.width(),n.height()),"function"==typeof n._loaded&&n._loaded.call(n,{width:a.width,height:a.height,ratio:a.width/a.height,url:t}))})),i.on(a,"error",(function(e){i.off(a),"function"==typeof n._error&&n._error.call(n,e)})),this.attr("href",a.src=this.src=t,i.xlink)},loaded:function(e){return this._loaded=e,this},error:function(e){return this._error=e,this}},construct:{image:function(e,t,n){return this.put(new i.Image).load(e).size(t||0,n||t||0)}}}),i.Text=i.invent({create:function(){this.constructor.call(this,i.create("text")),this.dom.leading=new i.Number(1.3),this._rebuild=!0,this._build=!1,this.attr("font-family",i.defaults.attrs["font-family"])},inherit:i.Shape,extend:{x:function(e){return null==e?this.attr("x"):this.attr("x",e)},text:function(e){if(void 0===e){e="";for(var t=this.node.childNodes,n=0,a=t.length;n<a;++n)0!=n&&3!=t[n].nodeType&&1==i.adopt(t[n]).dom.newLined&&(e+="\n"),e+=t[n].textContent;return e}if(this.clear().build(!0),"function"==typeof e)e.call(this,this);else{n=0;for(var r=(e=e.split("\n")).length;n<r;n++)this.tspan(e[n]).newLine()}return this.build(!1).rebuild()},size:function(e){return this.attr("font-size",e).rebuild()},leading:function(e){return null==e?this.dom.leading:(this.dom.leading=new i.Number(e),this.rebuild())},lines:function(){var e=(this.textPath&&this.textPath()||this).node,t=i.utils.map(i.utils.filterSVGElements(e.childNodes),(function(e){return i.adopt(e)}));return new i.Set(t)},rebuild:function(e){if("boolean"==typeof e&&(this._rebuild=e),this._rebuild){var t=this,n=0,a=this.dom.leading*new i.Number(this.attr("font-size"));this.lines().each((function(){this.dom.newLined&&(t.textPath()||this.attr("x",t.attr("x")),"\n"==this.text()?n+=a:(this.attr("dy",a+n),n=0))})),this.fire("rebuild")}return this},build:function(e){return this._build=!!e,this},setData:function(e){return this.dom=e,this.dom.leading=new i.Number(e.leading||1.3),this}},construct:{text:function(e){return this.put(new i.Text).text(e)},plain:function(e){return this.put(new i.Text).plain(e)}}}),i.Tspan=i.invent({create:"tspan",inherit:i.Shape,extend:{text:function(e){return null==e?this.node.textContent+(this.dom.newLined?"\n":""):("function"==typeof e?e.call(this,this):this.plain(e),this)},dx:function(e){return this.attr("dx",e)},dy:function(e){return this.attr("dy",e)},newLine:function(){var e=this.parent(i.Text);return this.dom.newLined=!0,this.dy(e.dom.leading*e.attr("font-size")).attr("x",e.x())}}}),i.extend(i.Text,i.Tspan,{plain:function(e){return!1===this._build&&this.clear(),this.node.appendChild(t.createTextNode(e)),this},tspan:function(e){var t=(this.textPath&&this.textPath()||this).node,n=new i.Tspan;return!1===this._build&&this.clear(),t.appendChild(n.node),n.text(e)},clear:function(){for(var e=(this.textPath&&this.textPath()||this).node;e.hasChildNodes();)e.removeChild(e.lastChild);return this},length:function(){return this.node.getComputedTextLength()}}),i.TextPath=i.invent({create:"textPath",inherit:i.Parent,parent:i.Text,construct:{morphArray:i.PathArray,array:function(){var e=this.track();return e?e.array():null},plot:function(e){var t=this.track(),i=null;return t&&(i=t.plot(e)),null==e?i:this},track:function(){var e=this.textPath();if(e)return e.reference("href")},textPath:function(){if(this.node.firstChild&&"textPath"==this.node.firstChild.nodeName)return i.adopt(this.node.firstChild)}}}),i.Nested=i.invent({create:function(){this.constructor.call(this,i.create("svg")),this.style("overflow","visible")},inherit:i.Container,construct:{nested:function(){return this.put(new i.Nested)}}});var l={stroke:["color","width","opacity","linecap","linejoin","miterlimit","dasharray","dashoffset"],fill:["color","opacity","rule"],prefix:function(e,t){return"color"==t?e:e+"-"+t}};function c(e,t,n,a){return n+a.replace(i.regex.dots," .")}function u(e){return e.toLowerCase().replace(/-(.)/g,(function(e,t){return t.toUpperCase()}))}function h(e){return e.charAt(0).toUpperCase()+e.slice(1)}function d(e){var t=e.toString(16);return 1==t.length?"0"+t:t}function f(e,t,i){if(null==t||null==i){var n=e.bbox();null==t?t=n.width/n.height*i:null==i&&(i=n.height/n.width*t)}return{width:t,height:i}}function p(e,t,i){return{x:t*e.a+i*e.c+0,y:t*e.b+i*e.d+0}}function g(e){return{a:e[0],b:e[1],c:e[2],d:e[3],e:e[4],f:e[5]}}function m(t){for(var n=t.childNodes.length-1;n>=0;n--)t.childNodes[n]instanceof e.SVGElement&&m(t.childNodes[n]);return i.adopt(t).id(i.eid(t.nodeName))}function v(e){return null==e.x&&(e.x=0,e.y=0,e.width=0,e.height=0),e.w=e.width,e.h=e.height,e.x2=e.x+e.width,e.y2=e.y+e.height,e.cx=e.x+e.width/2,e.cy=e.y+e.height/2,e}function x(e){return Math.abs(e)>1e-37?e:0}["fill","stroke"].forEach((function(e){var t={};t[e]=function(t){if(void 0===t)return this;if("string"==typeof t||i.Color.isRgb(t)||t&&"function"==typeof t.fill)this.attr(e,t);else for(var n=l[e].length-1;n>=0;n--)null!=t[l[e][n]]&&this.attr(l.prefix(e,l[e][n]),t[l[e][n]]);return this},i.extend(i.Element,i.FX,t)})),i.extend(i.Element,i.FX,{translate:function(e,t){return this.transform({x:e,y:t})},matrix:function(e){return this.attr("transform",new i.Matrix(6==arguments.length?[].slice.call(arguments):e))},opacity:function(e){return this.attr("opacity",e)},dx:function(e){return this.x(new i.Number(e).plus(this instanceof i.FX?0:this.x()),!0)},dy:function(e){return this.y(new i.Number(e).plus(this instanceof i.FX?0:this.y()),!0)}}),i.extend(i.Path,{length:function(){return this.node.getTotalLength()},pointAt:function(e){return this.node.getPointAtLength(e)}}),i.Set=i.invent({create:function(e){Array.isArray(e)?this.members=e:this.clear()},extend:{add:function(){for(var e=[].slice.call(arguments),t=0,i=e.length;t<i;t++)this.members.push(e[t]);return this},remove:function(e){var t=this.index(e);return t>-1&&this.members.splice(t,1),this},each:function(e){for(var t=0,i=this.members.length;t<i;t++)e.apply(this.members[t],[t,this.members]);return this},clear:function(){return this.members=[],this},length:function(){return this.members.length},has:function(e){return this.index(e)>=0},index:function(e){return this.members.indexOf(e)},get:function(e){return this.members[e]},first:function(){return this.get(0)},last:function(){return this.get(this.members.length-1)},valueOf:function(){return this.members}},construct:{set:function(e){return new i.Set(e)}}}),i.FX.Set=i.invent({create:function(e){this.set=e}}),i.Set.inherit=function(){var e=[];for(var t in i.Shape.prototype)"function"==typeof i.Shape.prototype[t]&&"function"!=typeof i.Set.prototype[t]&&e.push(t);for(var t in e.forEach((function(e){i.Set.prototype[e]=function(){for(var t=0,n=this.members.length;t<n;t++)this.members[t]&&"function"==typeof this.members[t][e]&&this.members[t][e].apply(this.members[t],arguments);return"animate"==e?this.fx||(this.fx=new i.FX.Set(this)):this}})),e=[],i.FX.prototype)"function"==typeof i.FX.prototype[t]&&"function"!=typeof i.FX.Set.prototype[t]&&e.push(t);e.forEach((function(e){i.FX.Set.prototype[e]=function(){for(var t=0,i=this.set.members.length;t<i;t++)this.set.members[t].fx[e].apply(this.set.members[t].fx,arguments);return this}}))},i.extend(i.Element,{}),i.extend(i.Element,{remember:function(e,t){if("object"===s(arguments[0]))for(var i in e)this.remember(i,e[i]);else{if(1==arguments.length)return this.memory()[e];this.memory()[e]=t}return this},forget:function(){if(0==arguments.length)this._memory={};else for(var e=arguments.length-1;e>=0;e--)delete this.memory()[arguments[e]];return this},memory:function(){return this._memory||(this._memory={})}}),i.get=function(e){var n=t.getElementById(function(e){var t=(e||"").toString().match(i.regex.reference);if(t)return t[1]}(e)||e);return i.adopt(n)},i.select=function(e,n){return new i.Set(i.utils.map((n||t).querySelectorAll(e),(function(e){return i.adopt(e)})))},i.extend(i.Parent,{select:function(e){return i.select(e,this.node)}});var b="abcdef".split("");if("function"!=typeof e.CustomEvent){var y=function(e,i){i=i||{bubbles:!1,cancelable:!1,detail:void 0};var n=t.createEvent("CustomEvent");return n.initCustomEvent(e,i.bubbles,i.cancelable,i.detail),n};y.prototype=e.Event.prototype,i.CustomEvent=y}else i.CustomEvent=e.CustomEvent;return i},void 0!==(n=function(){return ze(Oe,Oe.document)}.call(t,i,t,e))&&(e.exports=n),function(){SVG.Filter=SVG.invent({create:"filter",inherit:SVG.Parent,extend:{source:"SourceGraphic",sourceAlpha:"SourceAlpha",background:"BackgroundImage",backgroundAlpha:"BackgroundAlpha",fill:"FillPaint",stroke:"StrokePaint",autoSetIn:!0,put:function(e,t){return this.add(e,t),!e.attr("in")&&this.autoSetIn&&e.attr("in",this.source),e.attr("result")||e.attr("result",e),e},blend:function(e,t,i){return this.put(new SVG.BlendEffect(e,t,i))},colorMatrix:function(e,t){return this.put(new SVG.ColorMatrixEffect(e,t))},convolveMatrix:function(e){return this.put(new SVG.ConvolveMatrixEffect(e))},componentTransfer:function(e){return this.put(new SVG.ComponentTransferEffect(e))},composite:function(e,t,i){return this.put(new SVG.CompositeEffect(e,t,i))},flood:function(e,t){return this.put(new SVG.FloodEffect(e,t))},offset:function(e,t){return this.put(new SVG.OffsetEffect(e,t))},image:function(e){return this.put(new SVG.ImageEffect(e))},merge:function(){var e=[void 0];for(var t in arguments)e.push(arguments[t]);return this.put(new(SVG.MergeEffect.bind.apply(SVG.MergeEffect,e)))},gaussianBlur:function(e,t){return this.put(new SVG.GaussianBlurEffect(e,t))},morphology:function(e,t){return this.put(new SVG.MorphologyEffect(e,t))},diffuseLighting:function(e,t,i){return this.put(new SVG.DiffuseLightingEffect(e,t,i))},displacementMap:function(e,t,i,n,a){return this.put(new SVG.DisplacementMapEffect(e,t,i,n,a))},specularLighting:function(e,t,i,n){return this.put(new SVG.SpecularLightingEffect(e,t,i,n))},tile:function(){return this.put(new SVG.TileEffect)},turbulence:function(e,t,i,n,a){return this.put(new SVG.TurbulenceEffect(e,t,i,n,a))},toString:function(){return"url(#"+this.attr("id")+")"}}}),SVG.extend(SVG.Defs,{filter:function(e){var t=this.put(new SVG.Filter);return"function"==typeof e&&e.call(t,t),t}}),SVG.extend(SVG.Container,{filter:function(e){return this.defs().filter(e)}}),SVG.extend(SVG.Element,SVG.G,SVG.Nested,{filter:function(e){return this.filterer=e instanceof SVG.Element?e:this.doc().filter(e),this.doc()&&this.filterer.doc()!==this.doc()&&this.doc().defs().add(this.filterer),this.attr("filter",this.filterer),this.filterer},unfilter:function(e){return this.filterer&&!0===e&&this.filterer.remove(),delete this.filterer,this.attr("filter",null)}}),SVG.Effect=SVG.invent({create:function(){this.constructor.call(this)},inherit:SVG.Element,extend:{in:function(e){return null==e?this.parent()&&this.parent().select('[result="'+this.attr("in")+'"]').get(0)||this.attr("in"):this.attr("in",e)},result:function(e){return null==e?this.attr("result"):this.attr("result",e)},toString:function(){return this.result()}}}),SVG.ParentEffect=SVG.invent({create:function(){this.constructor.call(this)},inherit:SVG.Parent,extend:{in:function(e){return null==e?this.parent()&&this.parent().select('[result="'+this.attr("in")+'"]').get(0)||this.attr("in"):this.attr("in",e)},result:function(e){return null==e?this.attr("result"):this.attr("result",e)},toString:function(){return this.result()}}});var e={blend:function(e,t){return this.parent()&&this.parent().blend(this,e,t)},colorMatrix:function(e,t){return this.parent()&&this.parent().colorMatrix(e,t).in(this)},convolveMatrix:function(e){return this.parent()&&this.parent().convolveMatrix(e).in(this)},componentTransfer:function(e){return this.parent()&&this.parent().componentTransfer(e).in(this)},composite:function(e,t){return this.parent()&&this.parent().composite(this,e,t)},flood:function(e,t){return this.parent()&&this.parent().flood(e,t)},offset:function(e,t){return this.parent()&&this.parent().offset(e,t).in(this)},image:function(e){return this.parent()&&this.parent().image(e)},merge:function(){return this.parent()&&this.parent().merge.apply(this.parent(),[this].concat(arguments))},gaussianBlur:function(e,t){return this.parent()&&this.parent().gaussianBlur(e,t).in(this)},morphology:function(e,t){return this.parent()&&this.parent().morphology(e,t).in(this)},diffuseLighting:function(e,t,i){return this.parent()&&this.parent().diffuseLighting(e,t,i).in(this)},displacementMap:function(e,t,i,n){return this.parent()&&this.parent().displacementMap(this,e,t,i,n)},specularLighting:function(e,t,i,n){return this.parent()&&this.parent().specularLighting(e,t,i,n).in(this)},tile:function(){return this.parent()&&this.parent().tile().in(this)},turbulence:function(e,t,i,n,a){return this.parent()&&this.parent().turbulence(e,t,i,n,a).in(this)}};SVG.extend(SVG.Effect,e),SVG.extend(SVG.ParentEffect,e),SVG.ChildEffect=SVG.invent({create:function(){this.constructor.call(this)},inherit:SVG.Element,extend:{in:function(e){this.attr("in",e)}}});var t={blend:function(e,t,i){this.attr({in:e,in2:t,mode:i||"normal"})},colorMatrix:function(e,t){"matrix"==e&&(t=a(t)),this.attr({type:e,values:void 0===t?null:t})},convolveMatrix:function(e){e=a(e),this.attr({order:Math.sqrt(e.split(" ").length),kernelMatrix:e})},composite:function(e,t,i){this.attr({in:e,in2:t,operator:i})},flood:function(e,t){this.attr("flood-color",e),null!=t&&this.attr("flood-opacity",t)},offset:function(e,t){this.attr({dx:e,dy:t})},image:function(e){this.attr("href",e,SVG.xlink)},displacementMap:function(e,t,i,n,a){this.attr({in:e,in2:t,scale:i,xChannelSelector:n,yChannelSelector:a})},gaussianBlur:function(e,t){null!=e||null!=t?this.attr("stdDeviation",r(Array.prototype.slice.call(arguments))):this.attr("stdDeviation","0 0")},morphology:function(e,t){this.attr({operator:e,radius:t})},tile:function(){},turbulence:function(e,t,i,n,a){this.attr({numOctaves:t,seed:i,stitchTiles:n,baseFrequency:e,type:a})}},i={merge:function(){var e;if(arguments[0]instanceof SVG.Set){var t=this;arguments[0].each((function(e){this instanceof SVG.MergeNode?t.put(this):(this instanceof SVG.Effect||this instanceof SVG.ParentEffect)&&t.put(new SVG.MergeNode(this))}))}else{e=Array.isArray(arguments[0])?arguments[0]:arguments;for(var i=0;i<e.length;i++)e[i]instanceof SVG.MergeNode?this.put(e[i]):this.put(new SVG.MergeNode(e[i]))}},componentTransfer:function(e){if(this.rgb=new SVG.Set,["r","g","b","a"].forEach(function(e){this[e]=new(SVG["Func"+e.toUpperCase()])("identity"),this.rgb.add(this[e]),this.node.appendChild(this[e].node)}.bind(this)),e)for(var t in e.rgb&&(["r","g","b"].forEach(function(t){this[t].attr(e.rgb)}.bind(this)),delete e.rgb),e)this[t].attr(e[t])},diffuseLighting:function(e,t,i){this.attr({surfaceScale:e,diffuseConstant:t,kernelUnitLength:i})},specularLighting:function(e,t,i,n){this.attr({surfaceScale:e,diffuseConstant:t,specularExponent:i,kernelUnitLength:n})}},n={distantLight:function(e,t){this.attr({azimuth:e,elevation:t})},pointLight:function(e,t,i){this.attr({x:e,y:t,z:i})},spotLight:function(e,t,i,n,a,r){this.attr({x:e,y:t,z:i,pointsAtX:n,pointsAtY:a,pointsAtZ:r})},mergeNode:function(e){this.attr("in",e)}};function a(e){return Array.isArray(e)&&(e=new SVG.Array(e)),e.toString().replace(/^\s+/,"").replace(/\s+$/,"").replace(/\s+/g," ")}function r(e){if(!Array.isArray(e))return e;for(var t=0,i=e.length,n=[];t<i;t++)n.push(e[t]);return n.join(" ")}function s(){var e=function(){};for(var t in"function"==typeof arguments[arguments.length-1]&&(e=arguments[arguments.length-1],Array.prototype.splice.call(arguments,arguments.length-1,1)),arguments)for(var i in arguments[t])e(arguments[t][i],i,arguments[t])}["r","g","b","a"].forEach((function(e){n["Func"+e.toUpperCase()]=function(e){switch(this.attr("type",e),e){case"table":this.attr("tableValues",arguments[1]);break;case"linear":this.attr("slope",arguments[1]),this.attr("intercept",arguments[2]);break;case"gamma":this.attr("amplitude",arguments[1]),this.attr("exponent",arguments[2]),this.attr("offset",arguments[2])}}})),s(t,(function(e,t){var i=t.charAt(0).toUpperCase()+t.slice(1);SVG[i+"Effect"]=SVG.invent({create:function(){this.constructor.call(this,SVG.create("fe"+i)),e.apply(this,arguments),this.result(this.attr("id")+"Out")},inherit:SVG.Effect,extend:{}})})),s(i,(function(e,t){var i=t.charAt(0).toUpperCase()+t.slice(1);SVG[i+"Effect"]=SVG.invent({create:function(){this.constructor.call(this,SVG.create("fe"+i)),e.apply(this,arguments),this.result(this.attr("id")+"Out")},inherit:SVG.ParentEffect,extend:{}})})),s(n,(function(e,t){var i=t.charAt(0).toUpperCase()+t.slice(1);SVG[i]=SVG.invent({create:function(){this.constructor.call(this,SVG.create("fe"+i)),e.apply(this,arguments)},inherit:SVG.ChildEffect,extend:{}})})),SVG.extend(SVG.MergeEffect,{in:function(e){return e instanceof SVG.MergeNode?this.add(e,0):this.add(new SVG.MergeNode(e),0),this}}),SVG.extend(SVG.CompositeEffect,SVG.BlendEffect,SVG.DisplacementMapEffect,{in2:function(e){return null==e?this.parent()&&this.parent().select('[result="'+this.attr("in2")+'"]').get(0)||this.attr("in2"):this.attr("in2",e)}}),SVG.filter={sepiatone:[.343,.669,.119,0,0,.249,.626,.13,0,0,.172,.334,.111,0,0,0,0,0,1,0]}}.call(void 0),function(){function e(e,a,r,s,o,l,c){for(var u=e.slice(a,r||c),h=s.slice(o,l||c),d=0,f={pos:[0,0],start:[0,0]},p={pos:[0,0],start:[0,0]};u[d]=t.call(f,u[d]),h[d]=t.call(p,h[d]),u[d][0]!=h[d][0]||"M"==u[d][0]||"A"==u[d][0]&&(u[d][4]!=h[d][4]||u[d][5]!=h[d][5])?(Array.prototype.splice.apply(u,[d,1].concat(n.call(f,u[d]))),Array.prototype.splice.apply(h,[d,1].concat(n.call(p,h[d])))):(u[d]=i.call(f,u[d]),h[d]=i.call(p,h[d])),++d!=u.length||d!=h.length;)d==u.length&&u.push(["C",f.pos[0],f.pos[1],f.pos[0],f.pos[1],f.pos[0],f.pos[1]]),d==h.length&&h.push(["C",p.pos[0],p.pos[1],p.pos[0],p.pos[1],p.pos[0],p.pos[1]]);return{start:u,dest:h}}function t(e){switch(e[0]){case"z":case"Z":e[0]="L",e[1]=this.start[0],e[2]=this.start[1];break;case"H":e[0]="L",e[2]=this.pos[1];break;case"V":e[0]="L",e[2]=e[1],e[1]=this.pos[0];break;case"T":e[0]="Q",e[3]=e[1],e[4]=e[2],e[1]=this.reflection[1],e[2]=this.reflection[0];break;case"S":e[0]="C",e[6]=e[4],e[5]=e[3],e[4]=e[2],e[3]=e[1],e[2]=this.reflection[1],e[1]=this.reflection[0]}return e}function i(e){var t=e.length;return this.pos=[e[t-2],e[t-1]],-1!="SCQT".indexOf(e[0])&&(this.reflection=[2*this.pos[0]-e[t-4],2*this.pos[1]-e[t-3]]),e}function n(e){var t=[e];switch(e[0]){case"M":return this.pos=this.start=[e[1],e[2]],t;case"L":e[5]=e[3]=e[1],e[6]=e[4]=e[2],e[1]=this.pos[0],e[2]=this.pos[1];break;case"Q":e[6]=e[4],e[5]=e[3],e[4]=1*e[4]/3+2*e[2]/3,e[3]=1*e[3]/3+2*e[1]/3,e[2]=1*this.pos[1]/3+2*e[2]/3,e[1]=1*this.pos[0]/3+2*e[1]/3;break;case"A":e=(t=function(e,t){var i,n,a,r,s,o,l,c,u,h,d,f,p,g,m,v,x,b,y,w,k,S,A,C,E,P,T=Math.abs(t[1]),L=Math.abs(t[2]),I=t[3]%360,M=t[4],O=t[5],z=t[6],R=t[7],F=new SVG.Point(e),N=new SVG.Point(z,R),D=[];if(0===T||0===L||F.x===N.x&&F.y===N.y)return[["C",F.x,F.y,N.x,N.y,N.x,N.y]];for((n=(i=new SVG.Point((F.x-N.x)/2,(F.y-N.y)/2).transform((new SVG.Matrix).rotate(I))).x*i.x/(T*T)+i.y*i.y/(L*L))>1&&(T*=n=Math.sqrt(n),L*=n),a=(new SVG.Matrix).rotate(I).scale(1/T,1/L).rotate(-I),F=F.transform(a),o=(r=[(N=N.transform(a)).x-F.x,N.y-F.y])[0]*r[0]+r[1]*r[1],s=Math.sqrt(o),r[0]/=s,r[1]/=s,l=o<4?Math.sqrt(1-o/4):0,M===O&&(l*=-1),c=new SVG.Point((N.x+F.x)/2+l*-r[1],(N.y+F.y)/2+l*r[0]),u=new SVG.Point(F.x-c.x,F.y-c.y),h=new SVG.Point(N.x-c.x,N.y-c.y),d=Math.acos(u.x/Math.sqrt(u.x*u.x+u.y*u.y)),u.y<0&&(d*=-1),f=Math.acos(h.x/Math.sqrt(h.x*h.x+h.y*h.y)),h.y<0&&(f*=-1),O&&d>f&&(f+=2*Math.PI),!O&&d<f&&(f-=2*Math.PI),v=[],x=d,p=(f-d)/(g=Math.ceil(2*Math.abs(d-f)/Math.PI)),m=4*Math.tan(p/4)/3,k=0;k<=g;k++)y=Math.cos(x),b=Math.sin(x),w=new SVG.Point(c.x+y,c.y+b),v[k]=[new SVG.Point(w.x+m*b,w.y-m*y),w,new SVG.Point(w.x-m*b,w.y+m*y)],x+=p;for(v[0][0]=v[0][1].clone(),v[v.length-1][2]=v[v.length-1][1].clone(),a=(new SVG.Matrix).rotate(I).scale(T,L).rotate(-I),k=0,S=v.length;k<S;k++)v[k][0]=v[k][0].transform(a),v[k][1]=v[k][1].transform(a),v[k][2]=v[k][2].transform(a);for(k=1,S=v.length;k<S;k++)A=(w=v[k-1][2]).x,C=w.y,E=(w=v[k][0]).x,P=w.y,z=(w=v[k][1]).x,R=w.y,D.push(["C",A,C,E,P,z,R]);return D}(this.pos,e))[0]}return e[0]="C",this.pos=[e[5],e[6]],this.reflection=[2*e[5]-e[3],2*e[6]-e[4]],t}function a(e,t){if(!1===t)return!1;for(var i=t,n=e.length;i<n;++i)if("M"==e[i][0])return i;return!1}SVG.extend(SVG.PathArray,{morph:function(t){for(var i=this.value,n=this.parse(t),r=0,s=0,o=!1,l=!1;!1!==r||!1!==s;){var c;o=a(i,!1!==r&&r+1),l=a(n,!1!==s&&s+1),!1===r&&(r=0==(c=new SVG.PathArray(u.start).bbox()).height||0==c.width?i.push(i[0])-1:i.push(["M",c.x+c.width/2,c.y+c.height/2])-1),!1===s&&(s=0==(c=new SVG.PathArray(u.dest).bbox()).height||0==c.width?n.push(n[0])-1:n.push(["M",c.x+c.width/2,c.y+c.height/2])-1);var u=e(i,r,o,n,s,l);i=i.slice(0,r).concat(u.start,!1===o?[]:i.slice(o)),n=n.slice(0,s).concat(u.dest,!1===l?[]:n.slice(l)),r=!1!==o&&r+u.start.length,s=!1!==l&&s+u.dest.length}return this.value=i,this.destination=new SVG.PathArray,this.destination.value=n,this}})}(),function(){function e(e){e.remember("_draggable",this),this.el=e}e.prototype.init=function(e,t){var i=this;this.constraint=e,this.value=t,this.el.on("mousedown.drag",(function(e){i.start(e)})),this.el.on("touchstart.drag",(function(e){i.start(e)}))},e.prototype.transformPoint=function(e,t){var i=(e=e||window.event).changedTouches&&e.changedTouches[0]||e;return this.p.x=i.clientX-(t||0),this.p.y=i.clientY,this.p.matrixTransform(this.m)},e.prototype.getBBox=function(){var e=this.el.bbox();return this.el instanceof SVG.Nested&&(e=this.el.rbox()),(this.el instanceof SVG.G||this.el instanceof SVG.Use||this.el instanceof SVG.Nested)&&(e.x=this.el.x(),e.y=this.el.y()),e},e.prototype.start=function(e){if("click"!=e.type&&"mousedown"!=e.type&&"mousemove"!=e.type||1==(e.which||e.buttons)){var t=this;if(this.el.fire("beforedrag",{event:e,handler:this}),!this.el.event().defaultPrevented){e.preventDefault(),e.stopPropagation(),this.parent=this.parent||this.el.parent(SVG.Nested)||this.el.parent(SVG.Doc),this.p=this.parent.node.createSVGPoint(),this.m=this.el.node.getScreenCTM().inverse();var i,n=this.getBBox();if(this.el instanceof SVG.Text)switch(i=this.el.node.getComputedTextLength(),this.el.attr("text-anchor")){case"middle":i/=2;break;case"start":i=0}this.startPoints={point:this.transformPoint(e,i),box:n,transform:this.el.transform()},SVG.on(window,"mousemove.drag",(function(e){t.drag(e)})),SVG.on(window,"touchmove.drag",(function(e){t.drag(e)})),SVG.on(window,"mouseup.drag",(function(e){t.end(e)})),SVG.on(window,"touchend.drag",(function(e){t.end(e)})),this.el.fire("dragstart",{event:e,p:this.startPoints.point,m:this.m,handler:this})}}},e.prototype.drag=function(e){var t=this.getBBox(),i=this.transformPoint(e),n=this.startPoints.box.x+i.x-this.startPoints.point.x,a=this.startPoints.box.y+i.y-this.startPoints.point.y,r=this.constraint,s=i.x-this.startPoints.point.x,o=i.y-this.startPoints.point.y;if(this.el.fire("dragmove",{event:e,p:i,m:this.m,handler:this}),this.el.event().defaultPrevented)return i;if("function"==typeof r){var l=r.call(this.el,n,a,this.m);"boolean"==typeof l&&(l={x:l,y:l}),!0===l.x?this.el.x(n):!1!==l.x&&this.el.x(l.x),!0===l.y?this.el.y(a):!1!==l.y&&this.el.y(l.y)}else"object"==typeof r&&(null!=r.minX&&n<r.minX?s=(n=r.minX)-this.startPoints.box.x:null!=r.maxX&&n>r.maxX-t.width&&(s=(n=r.maxX-t.width)-this.startPoints.box.x),null!=r.minY&&a<r.minY?o=(a=r.minY)-this.startPoints.box.y:null!=r.maxY&&a>r.maxY-t.height&&(o=(a=r.maxY-t.height)-this.startPoints.box.y),null!=r.snapToGrid&&(n-=n%r.snapToGrid,a-=a%r.snapToGrid,s-=s%r.snapToGrid,o-=o%r.snapToGrid),this.el instanceof SVG.G?this.el.matrix(this.startPoints.transform).transform({x:s,y:o},!0):this.el.move(n,a));return i},e.prototype.end=function(e){var t=this.drag(e);this.el.fire("dragend",{event:e,p:t,m:this.m,handler:this}),SVG.off(window,"mousemove.drag"),SVG.off(window,"touchmove.drag"),SVG.off(window,"mouseup.drag"),SVG.off(window,"touchend.drag")},SVG.extend(SVG.Element,{draggable:function(t,i){"function"!=typeof t&&"object"!=typeof t||(i=t,t=!0);var n=this.remember("_draggable")||new e(this);return(t=void 0===t||t)?n.init(i||{},t):(this.off("mousedown.drag"),this.off("touchstart.drag")),this}})}.call(void 0),function(){function e(e){this.el=e,e.remember("_selectHandler",this),this.pointSelection={isSelected:!1},this.rectSelection={isSelected:!1},this.pointsList={lt:[0,0],rt:["width",0],rb:["width","height"],lb:[0,"height"],t:["width",0],r:["width","height"],b:["width","height"],l:[0,"height"]},this.pointCoord=function(e,t,i){var n="string"!=typeof e?e:t[e];return i?n/2:n},this.pointCoords=function(e,t){var i=this.pointsList[e];return{x:this.pointCoord(i[0],t,"t"===e||"b"===e),y:this.pointCoord(i[1],t,"r"===e||"l"===e)}}}e.prototype.init=function(e,t){var i=this.el.bbox();this.options={};var n=this.el.selectize.defaults.points;for(var a in this.el.selectize.defaults)this.options[a]=this.el.selectize.defaults[a],void 0!==t[a]&&(this.options[a]=t[a]);var r=["points","pointsExclude"];for(var a in r){var s=this.options[r[a]];"string"==typeof s?s=s.length>0?s.split(/\s*,\s*/i):[]:"boolean"==typeof s&&"points"===r[a]&&(s=s?n:[]),this.options[r[a]]=s}this.options.points=[n,this.options.points].reduce((function(e,t){return e.filter((function(e){return t.indexOf(e)>-1}))})),this.options.points=[this.options.points,this.options.pointsExclude].reduce((function(e,t){return e.filter((function(e){return t.indexOf(e)<0}))})),this.parent=this.el.parent(),this.nested=this.nested||this.parent.group(),this.nested.matrix(new SVG.Matrix(this.el).translate(i.x,i.y)),this.options.deepSelect&&-1!==["line","polyline","polygon"].indexOf(this.el.type)?this.selectPoints(e):this.selectRect(e),this.observe(),this.cleanup()},e.prototype.selectPoints=function(e){return this.pointSelection.isSelected=e,this.pointSelection.set||(this.pointSelection.set=this.parent.set(),this.drawPoints()),this},e.prototype.getPointArray=function(){var e=this.el.bbox();return this.el.array().valueOf().map((function(t){return[t[0]-e.x,t[1]-e.y]}))},e.prototype.drawPoints=function(){for(var e=this,t=this.getPointArray(),i=0,n=t.length;i<n;++i){var a=function(t){return function(i){(i=i||window.event).preventDefault?i.preventDefault():i.returnValue=!1,i.stopPropagation();var n=i.pageX||i.touches[0].pageX,a=i.pageY||i.touches[0].pageY;e.el.fire("point",{x:n,y:a,i:t,event:i})}}(i),r=this.drawPoint(t[i][0],t[i][1]).addClass(this.options.classPoints).addClass(this.options.classPoints+"_point").on("touchstart",a).on("mousedown",a);this.pointSelection.set.add(r)}},e.prototype.drawPoint=function(e,t){var i=this.options.pointType;switch(i){case"circle":return this.drawCircle(e,t);case"rect":return this.drawRect(e,t);default:if("function"==typeof i)return i.call(this,e,t);throw new Error("Unknown "+i+" point type!")}},e.prototype.drawCircle=function(e,t){return this.nested.circle(this.options.pointSize).center(e,t)},e.prototype.drawRect=function(e,t){return this.nested.rect(this.options.pointSize,this.options.pointSize).center(e,t)},e.prototype.updatePointSelection=function(){var e=this.getPointArray();this.pointSelection.set.each((function(t){this.cx()===e[t][0]&&this.cy()===e[t][1]||this.center(e[t][0],e[t][1])}))},e.prototype.updateRectSelection=function(){var e=this,t=this.el.bbox();if(this.rectSelection.set.get(0).attr({width:t.width,height:t.height}),this.options.points.length&&this.options.points.map((function(i,n){var a=e.pointCoords(i,t);e.rectSelection.set.get(n+1).center(a.x,a.y)})),this.options.rotationPoint){var i=this.rectSelection.set.length();this.rectSelection.set.get(i-1).center(t.width/2,20)}},e.prototype.selectRect=function(e){var t=this,i=this.el.bbox();function n(e){return function(i){(i=i||window.event).preventDefault?i.preventDefault():i.returnValue=!1,i.stopPropagation();var n=i.pageX||i.touches[0].pageX,a=i.pageY||i.touches[0].pageY;t.el.fire(e,{x:n,y:a,event:i})}}if(this.rectSelection.isSelected=e,this.rectSelection.set=this.rectSelection.set||this.parent.set(),this.rectSelection.set.get(0)||this.rectSelection.set.add(this.nested.rect(i.width,i.height).addClass(this.options.classRect)),this.options.points.length&&this.rectSelection.set.length()<2&&(this.options.points.map((function(e,a){var r=t.pointCoords(e,i),s=t.drawPoint(r.x,r.y).attr("class",t.options.classPoints+"_"+e).on("mousedown",n(e)).on("touchstart",n(e));t.rectSelection.set.add(s)})),this.rectSelection.set.each((function(){this.addClass(t.options.classPoints)}))),this.options.rotationPoint&&(this.options.points&&!this.rectSelection.set.get(9)||!this.options.points&&!this.rectSelection.set.get(1))){var a=function(e){(e=e||window.event).preventDefault?e.preventDefault():e.returnValue=!1,e.stopPropagation();var i=e.pageX||e.touches[0].pageX,n=e.pageY||e.touches[0].pageY;t.el.fire("rot",{x:i,y:n,event:e})},r=this.drawPoint(i.width/2,20).attr("class",this.options.classPoints+"_rot").on("touchstart",a).on("mousedown",a);this.rectSelection.set.add(r)}},e.prototype.handler=function(){var e=this.el.bbox();this.nested.matrix(new SVG.Matrix(this.el).translate(e.x,e.y)),this.rectSelection.isSelected&&this.updateRectSelection(),this.pointSelection.isSelected&&this.updatePointSelection()},e.prototype.observe=function(){var e=this;if(MutationObserver)if(this.rectSelection.isSelected||this.pointSelection.isSelected)this.observerInst=this.observerInst||new MutationObserver((function(){e.handler()})),this.observerInst.observe(this.el.node,{attributes:!0});else try{this.observerInst.disconnect(),delete this.observerInst}catch(e){}else this.el.off("DOMAttrModified.select"),(this.rectSelection.isSelected||this.pointSelection.isSelected)&&this.el.on("DOMAttrModified.select",(function(){e.handler()}))},e.prototype.cleanup=function(){!this.rectSelection.isSelected&&this.rectSelection.set&&(this.rectSelection.set.each((function(){this.remove()})),this.rectSelection.set.clear(),delete this.rectSelection.set),!this.pointSelection.isSelected&&this.pointSelection.set&&(this.pointSelection.set.each((function(){this.remove()})),this.pointSelection.set.clear(),delete this.pointSelection.set),this.pointSelection.isSelected||this.rectSelection.isSelected||(this.nested.remove(),delete this.nested)},SVG.extend(SVG.Element,{selectize:function(t,i){return"object"==typeof t&&(i=t,t=!0),(this.remember("_selectHandler")||new e(this)).init(void 0===t||t,i||{}),this}}),SVG.Element.prototype.selectize.defaults={points:["lt","rt","rb","lb","t","r","b","l"],pointsExclude:[],classRect:"svg_select_boundingRect",classPoints:"svg_select_points",pointSize:7,rotationPoint:!0,deepSelect:!1,pointType:"circle"}}(),function(){(function(){function e(e){e.remember("_resizeHandler",this),this.el=e,this.parameters={},this.lastUpdateCall=null,this.p=e.doc().node.createSVGPoint()}e.prototype.transformPoint=function(e,t,i){return this.p.x=e-(this.offset.x-window.pageXOffset),this.p.y=t-(this.offset.y-window.pageYOffset),this.p.matrixTransform(i||this.m)},e.prototype._extractPosition=function(e){return{x:null!=e.clientX?e.clientX:e.touches[0].clientX,y:null!=e.clientY?e.clientY:e.touches[0].clientY}},e.prototype.init=function(e){var t=this;if(this.stop(),"stop"!==e){for(var i in this.options={},this.el.resize.defaults)this.options[i]=this.el.resize.defaults[i],void 0!==e[i]&&(this.options[i]=e[i]);this.el.on("lt.resize",(function(e){t.resize(e||window.event)})),this.el.on("rt.resize",(function(e){t.resize(e||window.event)})),this.el.on("rb.resize",(function(e){t.resize(e||window.event)})),this.el.on("lb.resize",(function(e){t.resize(e||window.event)})),this.el.on("t.resize",(function(e){t.resize(e||window.event)})),this.el.on("r.resize",(function(e){t.resize(e||window.event)})),this.el.on("b.resize",(function(e){t.resize(e||window.event)})),this.el.on("l.resize",(function(e){t.resize(e||window.event)})),this.el.on("rot.resize",(function(e){t.resize(e||window.event)})),this.el.on("point.resize",(function(e){t.resize(e||window.event)})),this.update()}},e.prototype.stop=function(){return this.el.off("lt.resize"),this.el.off("rt.resize"),this.el.off("rb.resize"),this.el.off("lb.resize"),this.el.off("t.resize"),this.el.off("r.resize"),this.el.off("b.resize"),this.el.off("l.resize"),this.el.off("rot.resize"),this.el.off("point.resize"),this},e.prototype.resize=function(e){var t=this;this.m=this.el.node.getScreenCTM().inverse(),this.offset={x:window.pageXOffset,y:window.pageYOffset};var i=this._extractPosition(e.detail.event);if(this.parameters={type:this.el.type,p:this.transformPoint(i.x,i.y),x:e.detail.x,y:e.detail.y,box:this.el.bbox(),rotation:this.el.transform().rotation},"text"===this.el.type&&(this.parameters.fontSize=this.el.attr()["font-size"]),void 0!==e.detail.i){var n=this.el.array().valueOf();this.parameters.i=e.detail.i,this.parameters.pointCoords=[n[e.detail.i][0],n[e.detail.i][1]]}switch(e.type){case"lt":this.calc=function(e,t){var i=this.snapToGrid(e,t);if(this.parameters.box.width-i[0]>0&&this.parameters.box.height-i[1]>0){if("text"===this.parameters.type)return this.el.move(this.parameters.box.x+i[0],this.parameters.box.y),void this.el.attr("font-size",this.parameters.fontSize-i[0]);i=this.checkAspectRatio(i),this.el.move(this.parameters.box.x+i[0],this.parameters.box.y+i[1]).size(this.parameters.box.width-i[0],this.parameters.box.height-i[1])}};break;case"rt":this.calc=function(e,t){var i=this.snapToGrid(e,t,2);if(this.parameters.box.width+i[0]>0&&this.parameters.box.height-i[1]>0){if("text"===this.parameters.type)return this.el.move(this.parameters.box.x-i[0],this.parameters.box.y),void this.el.attr("font-size",this.parameters.fontSize+i[0]);i=this.checkAspectRatio(i,!0),this.el.move(this.parameters.box.x,this.parameters.box.y+i[1]).size(this.parameters.box.width+i[0],this.parameters.box.height-i[1])}};break;case"rb":this.calc=function(e,t){var i=this.snapToGrid(e,t,0);if(this.parameters.box.width+i[0]>0&&this.parameters.box.height+i[1]>0){if("text"===this.parameters.type)return this.el.move(this.parameters.box.x-i[0],this.parameters.box.y),void this.el.attr("font-size",this.parameters.fontSize+i[0]);i=this.checkAspectRatio(i),this.el.move(this.parameters.box.x,this.parameters.box.y).size(this.parameters.box.width+i[0],this.parameters.box.height+i[1])}};break;case"lb":this.calc=function(e,t){var i=this.snapToGrid(e,t,1);if(this.parameters.box.width-i[0]>0&&this.parameters.box.height+i[1]>0){if("text"===this.parameters.type)return this.el.move(this.parameters.box.x+i[0],this.parameters.box.y),void this.el.attr("font-size",this.parameters.fontSize-i[0]);i=this.checkAspectRatio(i,!0),this.el.move(this.parameters.box.x+i[0],this.parameters.box.y).size(this.parameters.box.width-i[0],this.parameters.box.height+i[1])}};break;case"t":this.calc=function(e,t){var i=this.snapToGrid(e,t,2);if(this.parameters.box.height-i[1]>0){if("text"===this.parameters.type)return;this.el.move(this.parameters.box.x,this.parameters.box.y+i[1]).height(this.parameters.box.height-i[1])}};break;case"r":this.calc=function(e,t){var i=this.snapToGrid(e,t,0);if(this.parameters.box.width+i[0]>0){if("text"===this.parameters.type)return;this.el.move(this.parameters.box.x,this.parameters.box.y).width(this.parameters.box.width+i[0])}};break;case"b":this.calc=function(e,t){var i=this.snapToGrid(e,t,0);if(this.parameters.box.height+i[1]>0){if("text"===this.parameters.type)return;this.el.move(this.parameters.box.x,this.parameters.box.y).height(this.parameters.box.height+i[1])}};break;case"l":this.calc=function(e,t){var i=this.snapToGrid(e,t,1);if(this.parameters.box.width-i[0]>0){if("text"===this.parameters.type)return;this.el.move(this.parameters.box.x+i[0],this.parameters.box.y).width(this.parameters.box.width-i[0])}};break;case"rot":this.calc=function(e,t){var i=e+this.parameters.p.x,n=t+this.parameters.p.y,a=Math.atan2(this.parameters.p.y-this.parameters.box.y-this.parameters.box.height/2,this.parameters.p.x-this.parameters.box.x-this.parameters.box.width/2),r=Math.atan2(n-this.parameters.box.y-this.parameters.box.height/2,i-this.parameters.box.x-this.parameters.box.width/2),s=this.parameters.rotation+180*(r-a)/Math.PI+this.options.snapToAngle/2;this.el.center(this.parameters.box.cx,this.parameters.box.cy).rotate(s-s%this.options.snapToAngle,this.parameters.box.cx,this.parameters.box.cy)};break;case"point":this.calc=function(e,t){var i=this.snapToGrid(e,t,this.parameters.pointCoords[0],this.parameters.pointCoords[1]),n=this.el.array().valueOf();n[this.parameters.i][0]=this.parameters.pointCoords[0]+i[0],n[this.parameters.i][1]=this.parameters.pointCoords[1]+i[1],this.el.plot(n)}}this.el.fire("resizestart",{dx:this.parameters.x,dy:this.parameters.y,event:e}),SVG.on(window,"touchmove.resize",(function(e){t.update(e||window.event)})),SVG.on(window,"touchend.resize",(function(){t.done()})),SVG.on(window,"mousemove.resize",(function(e){t.update(e||window.event)})),SVG.on(window,"mouseup.resize",(function(){t.done()}))},e.prototype.update=function(e){if(e){var t=this._extractPosition(e),i=this.transformPoint(t.x,t.y),n=i.x-this.parameters.p.x,a=i.y-this.parameters.p.y;this.lastUpdateCall=[n,a],this.calc(n,a),this.el.fire("resizing",{dx:n,dy:a,event:e})}else this.lastUpdateCall&&this.calc(this.lastUpdateCall[0],this.lastUpdateCall[1])},e.prototype.done=function(){this.lastUpdateCall=null,SVG.off(window,"mousemove.resize"),SVG.off(window,"mouseup.resize"),SVG.off(window,"touchmove.resize"),SVG.off(window,"touchend.resize"),this.el.fire("resizedone")},e.prototype.snapToGrid=function(e,t,i,n){var a;return void 0!==n?a=[(i+e)%this.options.snapToGrid,(n+t)%this.options.snapToGrid]:(i=null==i?3:i,a=[(this.parameters.box.x+e+(1&i?0:this.parameters.box.width))%this.options.snapToGrid,(this.parameters.box.y+t+(2&i?0:this.parameters.box.height))%this.options.snapToGrid]),e<0&&(a[0]-=this.options.snapToGrid),t<0&&(a[1]-=this.options.snapToGrid),e-=Math.abs(a[0])<this.options.snapToGrid/2?a[0]:a[0]-(e<0?-this.options.snapToGrid:this.options.snapToGrid),t-=Math.abs(a[1])<this.options.snapToGrid/2?a[1]:a[1]-(t<0?-this.options.snapToGrid:this.options.snapToGrid),this.constraintToBox(e,t,i,n)},e.prototype.constraintToBox=function(e,t,i,n){var a,r,s=this.options.constraint||{};return void 0!==n?(a=i,r=n):(a=this.parameters.box.x+(1&i?0:this.parameters.box.width),r=this.parameters.box.y+(2&i?0:this.parameters.box.height)),void 0!==s.minX&&a+e<s.minX&&(e=s.minX-a),void 0!==s.maxX&&a+e>s.maxX&&(e=s.maxX-a),void 0!==s.minY&&r+t<s.minY&&(t=s.minY-r),void 0!==s.maxY&&r+t>s.maxY&&(t=s.maxY-r),[e,t]},e.prototype.checkAspectRatio=function(e,t){if(!this.options.saveAspectRatio)return e;var i=e.slice(),n=this.parameters.box.width/this.parameters.box.height,a=this.parameters.box.width+e[0],r=this.parameters.box.height-e[1],s=a/r;return s<n?(i[1]=a/n-this.parameters.box.height,t&&(i[1]=-i[1])):s>n&&(i[0]=this.parameters.box.width-r*n,t&&(i[0]=-i[0])),i},SVG.extend(SVG.Element,{resize:function(t){return(this.remember("_resizeHandler")||new e(this)).init(t||{}),this}}),SVG.Element.prototype.resize.defaults={snapToAngle:.1,snapToGrid:1,constraint:{},saveAspectRatio:!1}}).call(this)}(),void 0===window.Apex&&(window.Apex={});var Xe=function(){function e(t){o(this,e),this.ctx=t,this.w=t.w}return c(e,[{key:"initModules",value:function(){this.ctx.publicMethods=["updateOptions","updateSeries","appendData","appendSeries","toggleSeries","showSeries","hideSeries","setLocale","resetSeries","zoomX","toggleDataPointSelection","dataURI","addXaxisAnnotation","addYaxisAnnotation","addPointAnnotation","clearAnnotations","removeAnnotation","paper","destroy"],this.ctx.eventList=["click","mousedown","mousemove","mouseleave","touchstart","touchmove","touchleave","mouseup","touchend"],this.ctx.animations=new b(this.ctx),this.ctx.axes=new te(this.ctx),this.ctx.core=new Ne(this.ctx.el,this.ctx),this.ctx.config=new B({}),this.ctx.data=new j(this.ctx),this.ctx.grid=new $(this.ctx),this.ctx.graphics=new w(this.ctx),this.ctx.coreUtils=new A(this.ctx),this.ctx.crosshairs=new ie(this.ctx),this.ctx.events=new J(this.ctx),this.ctx.exports=new U(this.ctx),this.ctx.localization=new ee(this.ctx),this.ctx.options=new T,this.ctx.responsive=new ne(this.ctx),this.ctx.series=new F(this.ctx),this.ctx.theme=new ae(this.ctx),this.ctx.formatters=new V(this.ctx),this.ctx.titleSubtitle=new re(this.ctx),this.ctx.legend=new de(this.ctx),this.ctx.toolbar=new fe(this.ctx),this.ctx.dimensions=new ue(this.ctx),this.ctx.updateHelpers=new De(this.ctx),this.ctx.zoomPanSelection=new pe(this.ctx),this.ctx.w.globals.tooltip=new we(this.ctx)}}]),e}(),Ye=function(){function e(t){o(this,e),this.ctx=t,this.w=t.w}return c(e,[{key:"clear",value:function(e){var t=e.isUpdating;this.ctx.zoomPanSelection&&this.ctx.zoomPanSelection.destroy(),this.ctx.toolbar&&this.ctx.toolbar.destroy(),this.ctx.animations=null,this.ctx.axes=null,this.ctx.annotations=null,this.ctx.core=null,this.ctx.data=null,this.ctx.grid=null,this.ctx.series=null,this.ctx.responsive=null,this.ctx.theme=null,this.ctx.formatters=null,this.ctx.titleSubtitle=null,this.ctx.legend=null,this.ctx.dimensions=null,this.ctx.options=null,this.ctx.crosshairs=null,this.ctx.zoomPanSelection=null,this.ctx.updateHelpers=null,this.ctx.toolbar=null,this.ctx.localization=null,this.ctx.w.globals.tooltip=null,this.clearDomElements({isUpdating:t})}},{key:"killSVG",value:function(e){e.each((function(e,t){this.removeClass("*"),this.off(),this.stop()}),!0),e.ungroup(),e.clear()}},{key:"clearDomElements",value:function(e){var t=this,i=e.isUpdating,n=this.w.globals.dom.Paper.node;n.parentNode&&n.parentNode.parentNode&&!i&&(n.parentNode.parentNode.style.minHeight="unset");var a=this.w.globals.dom.baseEl;a&&this.ctx.eventList.forEach((function(e){a.removeEventListener(e,t.ctx.events.documentEvent)}));var r=this.w.globals.dom;if(null!==this.ctx.el)for(;this.ctx.el.firstChild;)this.ctx.el.removeChild(this.ctx.el.firstChild);this.killSVG(r.Paper),r.Paper.remove(),r.elWrap=null,r.elGraphical=null,r.elAnnotations=null,r.elLegendWrap=null,r.baseEl=null,r.elGridRect=null,r.elGridRectMask=null,r.elGridRectMarkerMask=null,r.elForecastMask=null,r.elNonForecastMask=null,r.elDefs=null}}]),e}(),He=new WeakMap,Be=function(){function e(t,i){o(this,e),this.opts=i,this.ctx=this,this.w=new W(i).init(),this.el=t,this.w.globals.cuid=x.randomId(),this.w.globals.chartID=this.w.config.chart.id?x.escapeString(this.w.config.chart.id):this.w.globals.cuid,new Xe(this).initModules(),this.create=x.bind(this.create,this),this.windowResizeHandler=this._windowResizeHandler.bind(this),this.parentResizeHandler=this._parentResizeCallback.bind(this)}return c(e,[{key:"render",value:function(){var e=this;return new Promise((function(t,i){if(null!==e.el){void 0===Apex._chartInstances&&(Apex._chartInstances=[]),e.w.config.chart.id&&Apex._chartInstances.push({id:e.w.globals.chartID,group:e.w.config.chart.group,chart:e}),e.setLocale(e.w.config.chart.defaultLocale);var n=e.w.config.chart.events.beforeMount;if("function"==typeof n&&n(e,e.w),e.events.fireEvent("beforeMount",[e,e.w]),window.addEventListener("resize",e.windowResizeHandler),c=e.el.parentNode,u=e.parentResizeHandler,h=!1,d=new ResizeObserver((function(e){h&&u.call(c,e),h=!0})),c.nodeType===Node.DOCUMENT_FRAGMENT_NODE?Array.from(c.children).forEach((function(e){return d.observe(e)})):d.observe(c),He.set(u,d),!e.css){var a=e.el.getRootNode&&e.el.getRootNode(),r=x.is("ShadowRoot",a),s=e.el.ownerDocument,o=s.getElementById("apexcharts-css");!r&&o||(e.css=document.createElement("style"),e.css.id="apexcharts-css",e.css.textContent='.apexcharts-canvas {\n  position: relative;\n  user-select: none;\n  /* cannot give overflow: hidden as it will crop tooltips which overflow outside chart area */\n}\n\n\n/* scrollbar is not visible by default for legend, hence forcing the visibility */\n.apexcharts-canvas ::-webkit-scrollbar {\n  -webkit-appearance: none;\n  width: 6px;\n}\n\n.apexcharts-canvas ::-webkit-scrollbar-thumb {\n  border-radius: 4px;\n  background-color: rgba(0, 0, 0, .5);\n  box-shadow: 0 0 1px rgba(255, 255, 255, .5);\n  -webkit-box-shadow: 0 0 1px rgba(255, 255, 255, .5);\n}\n\n\n.apexcharts-inner {\n  position: relative;\n}\n\n.apexcharts-text tspan {\n  font-family: inherit;\n}\n\n.legend-mouseover-inactive {\n  transition: 0.15s ease all;\n  opacity: 0.20;\n}\n\n.apexcharts-series-collapsed {\n  opacity: 0;\n}\n\n.apexcharts-tooltip {\n  border-radius: 5px;\n  box-shadow: 2px 2px 6px -4px #999;\n  cursor: default;\n  font-size: 14px;\n  left: 62px;\n  opacity: 0;\n  pointer-events: none;\n  position: absolute;\n  top: 20px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  white-space: nowrap;\n  z-index: 12;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-tooltip.apexcharts-active {\n  opacity: 1;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-tooltip.apexcharts-theme-light {\n  border: 1px solid #e3e3e3;\n  background: rgba(255, 255, 255, 0.96);\n}\n\n.apexcharts-tooltip.apexcharts-theme-dark {\n  color: #fff;\n  background: rgba(30, 30, 30, 0.8);\n}\n\n.apexcharts-tooltip * {\n  font-family: inherit;\n}\n\n\n.apexcharts-tooltip-title {\n  padding: 6px;\n  font-size: 15px;\n  margin-bottom: 4px;\n}\n\n.apexcharts-tooltip.apexcharts-theme-light .apexcharts-tooltip-title {\n  background: #ECEFF1;\n  border-bottom: 1px solid #ddd;\n}\n\n.apexcharts-tooltip.apexcharts-theme-dark .apexcharts-tooltip-title {\n  background: rgba(0, 0, 0, 0.7);\n  border-bottom: 1px solid #333;\n}\n\n.apexcharts-tooltip-text-y-value,\n.apexcharts-tooltip-text-goals-value,\n.apexcharts-tooltip-text-z-value {\n  display: inline-block;\n  font-weight: 600;\n  margin-left: 5px;\n}\n\n.apexcharts-tooltip-title:empty,\n.apexcharts-tooltip-text-y-label:empty,\n.apexcharts-tooltip-text-y-value:empty,\n.apexcharts-tooltip-text-goals-label:empty,\n.apexcharts-tooltip-text-goals-value:empty,\n.apexcharts-tooltip-text-z-value:empty {\n  display: none;\n}\n\n.apexcharts-tooltip-text-y-value,\n.apexcharts-tooltip-text-goals-value,\n.apexcharts-tooltip-text-z-value {\n  font-weight: 600;\n}\n\n.apexcharts-tooltip-text-goals-label, \n.apexcharts-tooltip-text-goals-value {\n  padding: 6px 0 5px;\n}\n\n.apexcharts-tooltip-goals-group, \n.apexcharts-tooltip-text-goals-label, \n.apexcharts-tooltip-text-goals-value {\n  display: flex;\n}\n.apexcharts-tooltip-text-goals-label:not(:empty),\n.apexcharts-tooltip-text-goals-value:not(:empty) {\n  margin-top: -6px;\n}\n\n.apexcharts-tooltip-marker {\n  width: 12px;\n  height: 12px;\n  position: relative;\n  top: 0px;\n  margin-right: 10px;\n  border-radius: 50%;\n}\n\n.apexcharts-tooltip-series-group {\n  padding: 0 10px;\n  display: none;\n  text-align: left;\n  justify-content: left;\n  align-items: center;\n}\n\n.apexcharts-tooltip-series-group.apexcharts-active .apexcharts-tooltip-marker {\n  opacity: 1;\n}\n\n.apexcharts-tooltip-series-group.apexcharts-active,\n.apexcharts-tooltip-series-group:last-child {\n  padding-bottom: 4px;\n}\n\n.apexcharts-tooltip-series-group-hidden {\n  opacity: 0;\n  height: 0;\n  line-height: 0;\n  padding: 0 !important;\n}\n\n.apexcharts-tooltip-y-group {\n  padding: 6px 0 5px;\n}\n\n.apexcharts-tooltip-box, .apexcharts-custom-tooltip {\n  padding: 4px 8px;\n}\n\n.apexcharts-tooltip-boxPlot {\n  display: flex;\n  flex-direction: column-reverse;\n}\n\n.apexcharts-tooltip-box>div {\n  margin: 4px 0;\n}\n\n.apexcharts-tooltip-box span.value {\n  font-weight: bold;\n}\n\n.apexcharts-tooltip-rangebar {\n  padding: 5px 8px;\n}\n\n.apexcharts-tooltip-rangebar .category {\n  font-weight: 600;\n  color: #777;\n}\n\n.apexcharts-tooltip-rangebar .series-name {\n  font-weight: bold;\n  display: block;\n  margin-bottom: 5px;\n}\n\n.apexcharts-xaxistooltip {\n  opacity: 0;\n  padding: 9px 10px;\n  pointer-events: none;\n  color: #373d3f;\n  font-size: 13px;\n  text-align: center;\n  border-radius: 2px;\n  position: absolute;\n  z-index: 10;\n  background: #ECEFF1;\n  border: 1px solid #90A4AE;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-xaxistooltip.apexcharts-theme-dark {\n  background: rgba(0, 0, 0, 0.7);\n  border: 1px solid rgba(0, 0, 0, 0.5);\n  color: #fff;\n}\n\n.apexcharts-xaxistooltip:after,\n.apexcharts-xaxistooltip:before {\n  left: 50%;\n  border: solid transparent;\n  content: " ";\n  height: 0;\n  width: 0;\n  position: absolute;\n  pointer-events: none;\n}\n\n.apexcharts-xaxistooltip:after {\n  border-color: rgba(236, 239, 241, 0);\n  border-width: 6px;\n  margin-left: -6px;\n}\n\n.apexcharts-xaxistooltip:before {\n  border-color: rgba(144, 164, 174, 0);\n  border-width: 7px;\n  margin-left: -7px;\n}\n\n.apexcharts-xaxistooltip-bottom:after,\n.apexcharts-xaxistooltip-bottom:before {\n  bottom: 100%;\n}\n\n.apexcharts-xaxistooltip-top:after,\n.apexcharts-xaxistooltip-top:before {\n  top: 100%;\n}\n\n.apexcharts-xaxistooltip-bottom:after {\n  border-bottom-color: #ECEFF1;\n}\n\n.apexcharts-xaxistooltip-bottom:before {\n  border-bottom-color: #90A4AE;\n}\n\n.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:after {\n  border-bottom-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:before {\n  border-bottom-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-xaxistooltip-top:after {\n  border-top-color: #ECEFF1\n}\n\n.apexcharts-xaxistooltip-top:before {\n  border-top-color: #90A4AE;\n}\n\n.apexcharts-xaxistooltip-top.apexcharts-theme-dark:after {\n  border-top-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-xaxistooltip-top.apexcharts-theme-dark:before {\n  border-top-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-xaxistooltip.apexcharts-active {\n  opacity: 1;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-yaxistooltip {\n  opacity: 0;\n  padding: 4px 10px;\n  pointer-events: none;\n  color: #373d3f;\n  font-size: 13px;\n  text-align: center;\n  border-radius: 2px;\n  position: absolute;\n  z-index: 10;\n  background: #ECEFF1;\n  border: 1px solid #90A4AE;\n}\n\n.apexcharts-yaxistooltip.apexcharts-theme-dark {\n  background: rgba(0, 0, 0, 0.7);\n  border: 1px solid rgba(0, 0, 0, 0.5);\n  color: #fff;\n}\n\n.apexcharts-yaxistooltip:after,\n.apexcharts-yaxistooltip:before {\n  top: 50%;\n  border: solid transparent;\n  content: " ";\n  height: 0;\n  width: 0;\n  position: absolute;\n  pointer-events: none;\n}\n\n.apexcharts-yaxistooltip:after {\n  border-color: rgba(236, 239, 241, 0);\n  border-width: 6px;\n  margin-top: -6px;\n}\n\n.apexcharts-yaxistooltip:before {\n  border-color: rgba(144, 164, 174, 0);\n  border-width: 7px;\n  margin-top: -7px;\n}\n\n.apexcharts-yaxistooltip-left:after,\n.apexcharts-yaxistooltip-left:before {\n  left: 100%;\n}\n\n.apexcharts-yaxistooltip-right:after,\n.apexcharts-yaxistooltip-right:before {\n  right: 100%;\n}\n\n.apexcharts-yaxistooltip-left:after {\n  border-left-color: #ECEFF1;\n}\n\n.apexcharts-yaxistooltip-left:before {\n  border-left-color: #90A4AE;\n}\n\n.apexcharts-yaxistooltip-left.apexcharts-theme-dark:after {\n  border-left-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-yaxistooltip-left.apexcharts-theme-dark:before {\n  border-left-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-yaxistooltip-right:after {\n  border-right-color: #ECEFF1;\n}\n\n.apexcharts-yaxistooltip-right:before {\n  border-right-color: #90A4AE;\n}\n\n.apexcharts-yaxistooltip-right.apexcharts-theme-dark:after {\n  border-right-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-yaxistooltip-right.apexcharts-theme-dark:before {\n  border-right-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-yaxistooltip.apexcharts-active {\n  opacity: 1;\n}\n\n.apexcharts-yaxistooltip-hidden {\n  display: none;\n}\n\n.apexcharts-xcrosshairs,\n.apexcharts-ycrosshairs {\n  pointer-events: none;\n  opacity: 0;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-xcrosshairs.apexcharts-active,\n.apexcharts-ycrosshairs.apexcharts-active {\n  opacity: 1;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-ycrosshairs-hidden {\n  opacity: 0;\n}\n\n.apexcharts-selection-rect {\n  cursor: move;\n}\n\n.svg_select_boundingRect, .svg_select_points_rot {\n  pointer-events: none;\n  opacity: 0;\n  visibility: hidden;\n}\n.apexcharts-selection-rect + g .svg_select_boundingRect,\n.apexcharts-selection-rect + g .svg_select_points_rot {\n  opacity: 0;\n  visibility: hidden;\n}\n\n.apexcharts-selection-rect + g .svg_select_points_l,\n.apexcharts-selection-rect + g .svg_select_points_r {\n  cursor: ew-resize;\n  opacity: 1;\n  visibility: visible;\n}\n\n.svg_select_points {\n  fill: #efefef;\n  stroke: #333;\n  rx: 2;\n}\n\n.apexcharts-svg.apexcharts-zoomable.hovering-zoom {\n  cursor: crosshair\n}\n\n.apexcharts-svg.apexcharts-zoomable.hovering-pan {\n  cursor: move\n}\n\n.apexcharts-zoom-icon,\n.apexcharts-zoomin-icon,\n.apexcharts-zoomout-icon,\n.apexcharts-reset-icon,\n.apexcharts-pan-icon,\n.apexcharts-selection-icon,\n.apexcharts-menu-icon,\n.apexcharts-toolbar-custom-icon {\n  cursor: pointer;\n  width: 20px;\n  height: 20px;\n  line-height: 24px;\n  color: #6E8192;\n  text-align: center;\n}\n\n.apexcharts-zoom-icon svg,\n.apexcharts-zoomin-icon svg,\n.apexcharts-zoomout-icon svg,\n.apexcharts-reset-icon svg,\n.apexcharts-menu-icon svg {\n  fill: #6E8192;\n}\n\n.apexcharts-selection-icon svg {\n  fill: #444;\n  transform: scale(0.76)\n}\n\n.apexcharts-theme-dark .apexcharts-zoom-icon svg,\n.apexcharts-theme-dark .apexcharts-zoomin-icon svg,\n.apexcharts-theme-dark .apexcharts-zoomout-icon svg,\n.apexcharts-theme-dark .apexcharts-reset-icon svg,\n.apexcharts-theme-dark .apexcharts-pan-icon svg,\n.apexcharts-theme-dark .apexcharts-selection-icon svg,\n.apexcharts-theme-dark .apexcharts-menu-icon svg,\n.apexcharts-theme-dark .apexcharts-toolbar-custom-icon svg {\n  fill: #f3f4f5;\n}\n\n.apexcharts-canvas .apexcharts-zoom-icon.apexcharts-selected svg,\n.apexcharts-canvas .apexcharts-selection-icon.apexcharts-selected svg,\n.apexcharts-canvas .apexcharts-reset-zoom-icon.apexcharts-selected svg {\n  fill: #008FFB;\n}\n\n.apexcharts-theme-light .apexcharts-selection-icon:not(.apexcharts-selected):hover svg,\n.apexcharts-theme-light .apexcharts-zoom-icon:not(.apexcharts-selected):hover svg,\n.apexcharts-theme-light .apexcharts-zoomin-icon:hover svg,\n.apexcharts-theme-light .apexcharts-zoomout-icon:hover svg,\n.apexcharts-theme-light .apexcharts-reset-icon:hover svg,\n.apexcharts-theme-light .apexcharts-menu-icon:hover svg {\n  fill: #333;\n}\n\n.apexcharts-selection-icon,\n.apexcharts-menu-icon {\n  position: relative;\n}\n\n.apexcharts-reset-icon {\n  margin-left: 5px;\n}\n\n.apexcharts-zoom-icon,\n.apexcharts-reset-icon,\n.apexcharts-menu-icon {\n  transform: scale(0.85);\n}\n\n.apexcharts-zoomin-icon,\n.apexcharts-zoomout-icon {\n  transform: scale(0.7)\n}\n\n.apexcharts-zoomout-icon {\n  margin-right: 3px;\n}\n\n.apexcharts-pan-icon {\n  transform: scale(0.62);\n  position: relative;\n  left: 1px;\n  top: 0px;\n}\n\n.apexcharts-pan-icon svg {\n  fill: #fff;\n  stroke: #6E8192;\n  stroke-width: 2;\n}\n\n.apexcharts-pan-icon.apexcharts-selected svg {\n  stroke: #008FFB;\n}\n\n.apexcharts-pan-icon:not(.apexcharts-selected):hover svg {\n  stroke: #333;\n}\n\n.apexcharts-toolbar {\n  position: absolute;\n  z-index: 11;\n  max-width: 176px;\n  text-align: right;\n  border-radius: 3px;\n  padding: 0px 6px 2px 6px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.apexcharts-menu {\n  background: #fff;\n  position: absolute;\n  top: 100%;\n  border: 1px solid #ddd;\n  border-radius: 3px;\n  padding: 3px;\n  right: 10px;\n  opacity: 0;\n  min-width: 110px;\n  transition: 0.15s ease all;\n  pointer-events: none;\n}\n\n.apexcharts-menu.apexcharts-menu-open {\n  opacity: 1;\n  pointer-events: all;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-menu-item {\n  padding: 6px 7px;\n  font-size: 12px;\n  cursor: pointer;\n}\n\n.apexcharts-theme-light .apexcharts-menu-item:hover {\n  background: #eee;\n}\n\n.apexcharts-theme-dark .apexcharts-menu {\n  background: rgba(0, 0, 0, 0.7);\n  color: #fff;\n}\n\n@media screen and (min-width: 768px) {\n  .apexcharts-canvas:hover .apexcharts-toolbar {\n    opacity: 1;\n  }\n}\n\n.apexcharts-datalabel.apexcharts-element-hidden {\n  opacity: 0;\n}\n\n.apexcharts-pie-label,\n.apexcharts-datalabels,\n.apexcharts-datalabel,\n.apexcharts-datalabel-label,\n.apexcharts-datalabel-value {\n  cursor: default;\n  pointer-events: none;\n}\n\n.apexcharts-pie-label-delay {\n  opacity: 0;\n  animation-name: opaque;\n  animation-duration: 0.3s;\n  animation-fill-mode: forwards;\n  animation-timing-function: ease;\n}\n\n.apexcharts-canvas .apexcharts-element-hidden {\n  opacity: 0;\n}\n\n.apexcharts-hide .apexcharts-series-points {\n  opacity: 0;\n}\n\n.apexcharts-gridline,\n.apexcharts-annotation-rect,\n.apexcharts-tooltip .apexcharts-marker,\n.apexcharts-area-series .apexcharts-area,\n.apexcharts-line,\n.apexcharts-zoom-rect,\n.apexcharts-toolbar svg,\n.apexcharts-area-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,\n.apexcharts-line-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,\n.apexcharts-radar-series path,\n.apexcharts-radar-series polygon {\n  pointer-events: none;\n}\n\n\n/* markers */\n\n.apexcharts-marker {\n  transition: 0.15s ease all;\n}\n\n@keyframes opaque {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n\n/* Resize generated styles */\n\n@keyframes resizeanim {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 0;\n  }\n}\n\n.resize-triggers {\n  animation: 1ms resizeanim;\n  visibility: hidden;\n  opacity: 0;\n}\n\n.resize-triggers,\n.resize-triggers>div,\n.contract-trigger:before {\n  content: " ";\n  display: block;\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n}\n\n.resize-triggers>div {\n  background: #eee;\n  overflow: auto;\n}\n\n.contract-trigger:before {\n  width: 200%;\n  height: 200%;\n}',r?a.prepend(e.css):s.head.appendChild(e.css))}var l=e.create(e.w.config.series,{});if(!l)return t(e);e.mount(l).then((function(){"function"==typeof e.w.config.chart.events.mounted&&e.w.config.chart.events.mounted(e,e.w),e.events.fireEvent("mounted",[e,e.w]),t(l)})).catch((function(e){i(e)}))}else i(new Error("Element not found"));var c,u,h,d}))}},{key:"create",value:function(e,t){var i=this.w;new Xe(this).initModules();var n=this.w.globals;if(n.noData=!1,n.animationEnded=!1,this.responsive.checkResponsiveConfig(t),i.config.xaxis.convertedCatToNumeric&&new H(i.config).convertCatToNumericXaxis(i.config,this.ctx),null===this.el)return n.animationEnded=!0,null;if(this.core.setupElements(),"treemap"===i.config.chart.type&&(i.config.grid.show=!1,i.config.yaxis[0].show=!1),0===n.svgWidth)return n.animationEnded=!0,null;var a=A.checkComboSeries(e);n.comboCharts=a.comboCharts,n.comboBarCount=a.comboBarCount;var r=e.every((function(e){return e.data&&0===e.data.length}));(0===e.length||r)&&this.series.handleNoData(),this.events.setupEventHandlers(),this.data.parseData(e),this.theme.init(),new M(this).setGlobalMarkerSize(),this.formatters.setLabelFormatters(),this.titleSubtitle.draw(),n.noData&&n.collapsedSeries.length!==n.series.length&&!i.config.legend.showForSingleSeries||this.legend.init(),this.series.hasAllSeriesEqualX(),n.axisCharts&&(this.core.coreCalculations(),"category"!==i.config.xaxis.type&&this.formatters.setLabelFormatters(),this.ctx.toolbar.minX=i.globals.minX,this.ctx.toolbar.maxX=i.globals.maxX),this.formatters.heatmapLabelFormatters(),this.dimensions.plotCoords();var s=this.core.xySettings();this.grid.createGridMask();var o=this.core.plotChartType(e,s),l=new z(this);l.bringForward(),i.config.dataLabels.background.enabled&&l.dataLabelsBackground(),this.core.shiftGraphPosition();var c={plot:{left:i.globals.translateX,top:i.globals.translateY,width:i.globals.gridWidth,height:i.globals.gridHeight}};return{elGraph:o,xyRatios:s,elInner:i.globals.dom.elGraphical,dimensions:c}}},{key:"mount",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,i=this,n=i.w;return new Promise((function(a,r){if(null===i.el)return r(new Error("Not enough data to display or target element not found"));(null===t||n.globals.allSeriesCollapsed)&&i.series.handleNoData(),"treemap"!==n.config.chart.type&&i.axes.drawAxis(n.config.chart.type,t.xyRatios),i.grid=new $(i);var s=i.grid.drawGrid();i.annotations=new L(i),i.annotations.drawImageAnnos(),i.annotations.drawTextAnnos(),"back"===n.config.grid.position&&s&&n.globals.dom.elGraphical.add(s.el);var o=new q(e.ctx),l=new K(e.ctx);if(null!==s&&(o.xAxisLabelCorrections(s.xAxisTickWidth),l.setYAxisTextAlignments(),n.config.yaxis.map((function(e,t){-1===n.globals.ignoreYAxisIndexes.indexOf(t)&&l.yAxisTitleRotate(t,e.opposite)}))),"back"===n.config.annotations.position&&(n.globals.dom.Paper.add(n.globals.dom.elAnnotations),i.annotations.drawAxesAnnotations()),Array.isArray(t.elGraph))for(var c=0;c<t.elGraph.length;c++)n.globals.dom.elGraphical.add(t.elGraph[c]);else n.globals.dom.elGraphical.add(t.elGraph);if("front"===n.config.grid.position&&s&&n.globals.dom.elGraphical.add(s.el),"front"===n.config.xaxis.crosshairs.position&&i.crosshairs.drawXCrosshairs(),"front"===n.config.yaxis[0].crosshairs.position&&i.crosshairs.drawYCrosshairs(),"front"===n.config.annotations.position&&(n.globals.dom.Paper.add(n.globals.dom.elAnnotations),i.annotations.drawAxesAnnotations()),!n.globals.noData){if(n.config.tooltip.enabled&&!n.globals.noData&&i.w.globals.tooltip.drawTooltip(t.xyRatios),n.globals.axisCharts&&(n.globals.isXNumeric||n.config.xaxis.convertedCatToNumeric||n.globals.isRangeBar))(n.config.chart.zoom.enabled||n.config.chart.selection&&n.config.chart.selection.enabled||n.config.chart.pan&&n.config.chart.pan.enabled)&&i.zoomPanSelection.init({xyRatios:t.xyRatios});else{var u=n.config.chart.toolbar.tools;["zoom","zoomin","zoomout","selection","pan","reset"].forEach((function(e){u[e]=!1}))}n.config.chart.toolbar.show&&!n.globals.allSeriesCollapsed&&i.toolbar.createToolbar()}n.globals.memory.methodsToExec.length>0&&n.globals.memory.methodsToExec.forEach((function(e){e.method(e.params,!1,e.context)})),n.globals.axisCharts||n.globals.noData||i.core.resizeNonAxisCharts(),a(i)}))}},{key:"destroy",value:function(){var e,t;window.removeEventListener("resize",this.windowResizeHandler),this.el.parentNode,e=this.parentResizeHandler,(t=He.get(e))&&(t.disconnect(),He.delete(e));var i=this.w.config.chart.id;i&&Apex._chartInstances.forEach((function(e,t){e.id===x.escapeString(i)&&Apex._chartInstances.splice(t,1)})),new Ye(this.ctx).clear({isUpdating:!1})}},{key:"updateOptions",value:function(e){var t=this,i=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],s=this.w;return s.globals.selection=void 0,e.series&&(this.series.resetSeries(!1,!0,!1),e.series.length&&e.series[0].data&&(e.series=e.series.map((function(e,i){return t.updateHelpers._extendSeries(e,i)}))),this.updateHelpers.revertDefaultAxisMinMax()),e.xaxis&&(e=this.updateHelpers.forceXAxisUpdate(e)),e.yaxis&&(e=this.updateHelpers.forceYAxisUpdate(e)),s.globals.collapsedSeriesIndices.length>0&&this.series.clearPreviousPaths(),e.theme&&(e=this.theme.updateThemeOptions(e)),this.updateHelpers._updateOptions(e,i,n,a,r)}},{key:"updateSeries",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.series.resetSeries(!1),this.updateHelpers.revertDefaultAxisMinMax(),this.updateHelpers._updateSeries(e,t,i)}},{key:"appendSeries",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],n=this.w.config.series.slice();return n.push(e),this.series.resetSeries(!1),this.updateHelpers.revertDefaultAxisMinMax(),this.updateHelpers._updateSeries(n,t,i)}},{key:"appendData",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=this;i.w.globals.dataChanged=!0,i.series.getPreviousPaths();for(var n=i.w.config.series.slice(),a=0;a<n.length;a++)if(null!==e[a]&&void 0!==e[a])for(var r=0;r<e[a].data.length;r++)n[a].data.push(e[a].data[r]);return i.w.config.series=n,t&&(i.w.globals.initialSeries=x.clone(i.w.config.series)),this.update()}},{key:"update",value:function(e){var t=this;return new Promise((function(i,n){new Ye(t.ctx).clear({isUpdating:!0});var a=t.create(t.w.config.series,e);if(!a)return i(t);t.mount(a).then((function(){"function"==typeof t.w.config.chart.events.updated&&t.w.config.chart.events.updated(t,t.w),t.events.fireEvent("updated",[t,t.w]),t.w.globals.isDirty=!0,i(t)})).catch((function(e){n(e)}))}))}},{key:"getSyncedCharts",value:function(){var e=this.getGroupedCharts(),t=[this];return e.length&&(t=[],e.forEach((function(e){t.push(e)}))),t}},{key:"getGroupedCharts",value:function(){var e=this;return Apex._chartInstances.filter((function(e){if(e.group)return!0})).map((function(t){return e.w.config.chart.group===t.group?t.chart:e}))}},{key:"toggleSeries",value:function(e){return this.series.toggleSeries(e)}},{key:"highlightSeriesOnLegendHover",value:function(e,t){return this.series.toggleSeriesOnHover(e,t)}},{key:"showSeries",value:function(e){this.series.showSeries(e)}},{key:"hideSeries",value:function(e){this.series.hideSeries(e)}},{key:"resetSeries",value:function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this.series.resetSeries(e,t)}},{key:"addEventListener",value:function(e,t){this.events.addEventListener(e,t)}},{key:"removeEventListener",value:function(e,t){this.events.removeEventListener(e,t)}},{key:"addXaxisAnnotation",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0,n=this;i&&(n=i),n.annotations.addXaxisAnnotationExternal(e,t,n)}},{key:"addYaxisAnnotation",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0,n=this;i&&(n=i),n.annotations.addYaxisAnnotationExternal(e,t,n)}},{key:"addPointAnnotation",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0,n=this;i&&(n=i),n.annotations.addPointAnnotationExternal(e,t,n)}},{key:"clearAnnotations",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0,t=this;e&&(t=e),t.annotations.clearAnnotations(t)}},{key:"removeAnnotation",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0,i=this;t&&(i=t),i.annotations.removeAnnotation(i,e)}},{key:"getChartArea",value:function(){return this.w.globals.dom.baseEl.querySelector(".apexcharts-inner")}},{key:"getSeriesTotalXRange",value:function(e,t){return this.coreUtils.getSeriesTotalsXRange(e,t)}},{key:"getHighestValueInSeries",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=new Q(this.ctx);return t.getMinYMaxY(e).highestY}},{key:"getLowestValueInSeries",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=new Q(this.ctx);return t.getMinYMaxY(e).lowestY}},{key:"getSeriesTotal",value:function(){return this.w.globals.seriesTotals}},{key:"toggleDataPointSelection",value:function(e,t){return this.updateHelpers.toggleDataPointSelection(e,t)}},{key:"zoomX",value:function(e,t){this.ctx.toolbar.zoomUpdateOptions(e,t)}},{key:"setLocale",value:function(e){this.localization.setCurrentLocaleValues(e)}},{key:"dataURI",value:function(e){return new U(this.ctx).dataURI(e)}},{key:"paper",value:function(){return this.w.globals.dom.Paper}},{key:"_parentResizeCallback",value:function(){this.w.globals.animationEnded&&this.w.config.chart.redrawOnParentResize&&this._windowResize()}},{key:"_windowResize",value:function(){var e=this;clearTimeout(this.w.globals.resizeTimer),this.w.globals.resizeTimer=window.setTimeout((function(){e.w.globals.resized=!0,e.w.globals.dataChanged=!1,e.ctx.update()}),150)}},{key:"_windowResizeHandler",value:function(){var e=this.w.config.chart.redrawOnWindowResize;"function"==typeof e&&(e=e()),e&&this._windowResize()}}],[{key:"getChartByID",value:function(e){var t=x.escapeString(e),i=Apex._chartInstances.filter((function(e){return e.id===t}))[0];return i&&i.chart}},{key:"initOnLoad",value:function(){for(var t=document.querySelectorAll("[data-apexcharts]"),i=0;i<t.length;i++)new e(t[i],JSON.parse(t[i].getAttribute("data-options"))).render()}},{key:"exec",value:function(e,t){var i=this.getChartByID(e);if(i){i.w.globals.isExecCalled=!0;var n=null;if(-1!==i.publicMethods.indexOf(t)){for(var a=arguments.length,r=new Array(a>2?a-2:0),s=2;s<a;s++)r[s-2]=arguments[s];n=i[t].apply(i,r)}return n}}},{key:"merge",value:function(e,t){return x.extend(e,t)}}]),e}();e.exports=Be},282:(e,t,i)=>{"use strict";i.d(t,{Z:()=>o});var n=i(537),a=i.n(n),r=i(645),s=i.n(r)()(a());s.push([e.id,"/* 스피너 애니메이션 */\r\n@-webkit-keyframes spinner {\r\n  from {\r\n    -webkit-transform: rotateX(0deg);\r\n    transform: rotateX(0deg);\r\n  }\r\n  to {\r\n    -webkit-transform: rotateX(360deg);\r\n    transform: rotateX(360deg);\r\n  }\r\n}\r\n@keyframes spinner {\r\n  0% {\r\n    -webkit-transform: rotateX(0deg);\r\n    transform: rotateX(0deg);\r\n  }\r\n  100% {\r\n    -webkit-transform: rotateX(360deg);\r\n    transform: rotateX(360deg);\r\n  }\r\n}\r\n\r\n/* 사이드 버튼 애니메이션 */\r\n@-webkit-keyframes appear {\r\n  from {\r\n    opacity: 0.01;\r\n  }\r\n  to {\r\n    opacity: 1;\r\n  }\r\n}\r\n@keyframes spinner {\r\n  0% {\r\n    opacity: 0.01;\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n  }\r\n}","",{version:3,sources:["webpack://./src/css/animation.css"],names:[],mappings:"AAAA,cAAc;AACd;EACE;IACE,gCAAgC;IAChC,wBAAwB;EAC1B;EACA;IACE,kCAAkC;IAClC,0BAA0B;EAC5B;AACF;AACA;EACE;IACE,gCAAgC;IAChC,wBAAwB;EAC1B;EACA;IACE,kCAAkC;IAClC,0BAA0B;EAC5B;AACF;;AAEA,iBAAiB;AACjB;EACE;IACE,aAAa;EACf;EACA;IACE,UAAU;EACZ;AACF;AACA;EACE;IACE,aAAa;EACf;EACA;IACE,UAAU;EACZ;AACF",sourcesContent:["/* 스피너 애니메이션 */\r\n@-webkit-keyframes spinner {\r\n  from {\r\n    -webkit-transform: rotateX(0deg);\r\n    transform: rotateX(0deg);\r\n  }\r\n  to {\r\n    -webkit-transform: rotateX(360deg);\r\n    transform: rotateX(360deg);\r\n  }\r\n}\r\n@keyframes spinner {\r\n  0% {\r\n    -webkit-transform: rotateX(0deg);\r\n    transform: rotateX(0deg);\r\n  }\r\n  100% {\r\n    -webkit-transform: rotateX(360deg);\r\n    transform: rotateX(360deg);\r\n  }\r\n}\r\n\r\n/* 사이드 버튼 애니메이션 */\r\n@-webkit-keyframes appear {\r\n  from {\r\n    opacity: 0.01;\r\n  }\r\n  to {\r\n    opacity: 1;\r\n  }\r\n}\r\n@keyframes spinner {\r\n  0% {\r\n    opacity: 0.01;\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n  }\r\n}"],sourceRoot:""}]);const o=s},421:(e,t,i)=>{"use strict";i.d(t,{Z:()=>o});var n=i(537),a=i.n(n),r=i(645),s=i.n(r)()(a());s.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Noto+Sans:ital@0;1&display=swap);"]),s.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Yeon+Sung&display=swap);"]),s.push([e.id,":root {\r\n  --background-color: #fafafa;\r\n  --icon-color: #262626;\r\n  --facebook-color: #3f62a9;\r\n  --naver-color: #00bd39;\r\n  --kakao-color: #eed700;\r\n\r\n  --light-blue: #0095f6;\r\n  --heart-color: #ed4956;\r\n}\r\n\r\n/* 일반 폰트 */\r\n/* 차트 폰트 */\r\n\r\n/* 임시 부여 */\r\n#root {\r\n  /* width: 100%;\r\n  height: 100%; */\r\n}","",{version:3,sources:["webpack://./src/css/common.css"],names:[],mappings:"AAAA;EACE,2BAA2B;EAC3B,qBAAqB;EACrB,yBAAyB;EACzB,sBAAsB;EACtB,sBAAsB;;EAEtB,qBAAqB;EACrB,sBAAsB;AACxB;;AAEA,UAAU;AAEV,UAAU;;AAGV,UAAU;AACV;EACE;iBACe;AACjB",sourcesContent:[":root {\r\n  --background-color: #fafafa;\r\n  --icon-color: #262626;\r\n  --facebook-color: #3f62a9;\r\n  --naver-color: #00bd39;\r\n  --kakao-color: #eed700;\r\n\r\n  --light-blue: #0095f6;\r\n  --heart-color: #ed4956;\r\n}\r\n\r\n/* 일반 폰트 */\r\n@import url('https://fonts.googleapis.com/css2?family=Noto+Sans:ital@0;1&display=swap');\r\n/* 차트 폰트 */\r\n@import url('https://fonts.googleapis.com/css2?family=Yeon+Sung&display=swap');\r\n\r\n/* 임시 부여 */\r\n#root {\r\n  /* width: 100%;\r\n  height: 100%; */\r\n}"],sourceRoot:""}]);const o=s},538:(e,t,i)=>{"use strict";i.d(t,{Z:()=>o});var n=i(537),a=i.n(n),r=i(645),s=i.n(r)()(a());s.push([e.id,"* {\r\n  box-sizing: border-box;\r\n}\r\nbody {\r\n  margin: 0;\r\n}\r\nul {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\nli {\r\n  list-style: none;\r\n}\r\na {\r\n  text-decoration: none;\r\n  color: black;\r\n}\r\na:visited {\r\n  color: black;\r\n}\r\na:hover {\r\n  text-decoration: none;\r\n}\r\ninput:focus {\r\n  outline: none;\r\n}\r\ninput:disabled {\r\n  color: black;\r\n}\r\nselect:focus {\r\n  outline: none;\r\n}\r\ntextarea:focus {\r\n  outline: none;\r\n}\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6 {\r\n  margin: 0;\r\n}\r\nhr {\r\n  color: black;\r\n  background-color: black;\r\n  width: 100%;\r\n}\r\npre {\r\n  white-space: pre-line;\r\n  margin: 0;\r\n}\r\nbutton {\r\n  border: none;\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n  padding: 0;\r\n}\r\np {\r\n  margin: 0;\r\n}\r\nfigure {\r\n  margin: 0;\r\n}","",{version:3,sources:["webpack://./src/css/reset.css"],names:[],mappings:"AAAA;EACE,sBAAsB;AACxB;AACA;EACE,SAAS;AACX;AACA;EACE,SAAS;EACT,UAAU;AACZ;AACA;EACE,gBAAgB;AAClB;AACA;EACE,qBAAqB;EACrB,YAAY;AACd;AACA;EACE,YAAY;AACd;AACA;EACE,qBAAqB;AACvB;AACA;EACE,aAAa;AACf;AACA;EACE,YAAY;AACd;AACA;EACE,aAAa;AACf;AACA;EACE,aAAa;AACf;AACA;;;;;;EAME,SAAS;AACX;AACA;EACE,YAAY;EACZ,uBAAuB;EACvB,WAAW;AACb;AACA;EACE,qBAAqB;EACrB,SAAS;AACX;AACA;EACE,YAAY;EACZ,6BAA6B;EAC7B,eAAe;EACf,UAAU;AACZ;AACA;EACE,SAAS;AACX;AACA;EACE,SAAS;AACX",sourcesContent:["* {\r\n  box-sizing: border-box;\r\n}\r\nbody {\r\n  margin: 0;\r\n}\r\nul {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\nli {\r\n  list-style: none;\r\n}\r\na {\r\n  text-decoration: none;\r\n  color: black;\r\n}\r\na:visited {\r\n  color: black;\r\n}\r\na:hover {\r\n  text-decoration: none;\r\n}\r\ninput:focus {\r\n  outline: none;\r\n}\r\ninput:disabled {\r\n  color: black;\r\n}\r\nselect:focus {\r\n  outline: none;\r\n}\r\ntextarea:focus {\r\n  outline: none;\r\n}\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6 {\r\n  margin: 0;\r\n}\r\nhr {\r\n  color: black;\r\n  background-color: black;\r\n  width: 100%;\r\n}\r\npre {\r\n  white-space: pre-line;\r\n  margin: 0;\r\n}\r\nbutton {\r\n  border: none;\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n  padding: 0;\r\n}\r\np {\r\n  margin: 0;\r\n}\r\nfigure {\r\n  margin: 0;\r\n}"],sourceRoot:""}]);const o=s},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var i="",n=void 0!==t[5];return t[4]&&(i+="@supports (".concat(t[4],") {")),t[2]&&(i+="@media ".concat(t[2]," {")),n&&(i+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),i+=e(t),n&&(i+="}"),t[2]&&(i+="}"),t[4]&&(i+="}"),i})).join("")},t.i=function(e,i,n,a,r){"string"==typeof e&&(e=[[null,e,void 0]]);var s={};if(n)for(var o=0;o<this.length;o++){var l=this[o][0];null!=l&&(s[l]=!0)}for(var c=0;c<e.length;c++){var u=[].concat(e[c]);n&&s[u[0]]||(void 0!==r&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=r),i&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=i):u[2]=i),a&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=a):u[4]="".concat(a)),t.push(u))}},t}},537:e=>{"use strict";e.exports=function(e){var t=e[1],i=e[3];if(!i)return t;if("function"==typeof btoa){var n=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(n),r="/*# ".concat(a," */"),s=i.sources.map((function(e){return"/*# sourceURL=".concat(i.sourceRoot||"").concat(e," */")}));return[t].concat(s).concat([r]).join("\n")}return[t].join("\n")}},679:(e,t,i)=>{"use strict";var n=i(296),a={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},r={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},s={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},o={};function l(e){return n.isMemo(e)?s:o[e.$$typeof]||a}o[n.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},o[n.Memo]=s;var c=Object.defineProperty,u=Object.getOwnPropertyNames,h=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,f=Object.getPrototypeOf,p=Object.prototype;e.exports=function e(t,i,n){if("string"!=typeof i){if(p){var a=f(i);a&&a!==p&&e(t,a,n)}var s=u(i);h&&(s=s.concat(h(i)));for(var o=l(t),g=l(i),m=0;m<s.length;++m){var v=s[m];if(!(r[v]||n&&n[v]||g&&g[v]||o&&o[v])){var x=d(i,v);try{c(t,v,x)}catch(e){}}}}return t}},103:(e,t)=>{"use strict";var i="function"==typeof Symbol&&Symbol.for,n=i?Symbol.for("react.element"):60103,a=i?Symbol.for("react.portal"):60106,r=i?Symbol.for("react.fragment"):60107,s=i?Symbol.for("react.strict_mode"):60108,o=i?Symbol.for("react.profiler"):60114,l=i?Symbol.for("react.provider"):60109,c=i?Symbol.for("react.context"):60110,u=i?Symbol.for("react.async_mode"):60111,h=i?Symbol.for("react.concurrent_mode"):60111,d=i?Symbol.for("react.forward_ref"):60112,f=i?Symbol.for("react.suspense"):60113,p=i?Symbol.for("react.suspense_list"):60120,g=i?Symbol.for("react.memo"):60115,m=i?Symbol.for("react.lazy"):60116,v=i?Symbol.for("react.block"):60121,x=i?Symbol.for("react.fundamental"):60117,b=i?Symbol.for("react.responder"):60118,y=i?Symbol.for("react.scope"):60119;function w(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case n:switch(e=e.type){case u:case h:case r:case o:case s:case f:return e;default:switch(e=e&&e.$$typeof){case c:case d:case m:case g:case l:return e;default:return t}}case a:return t}}}function k(e){return w(e)===h}t.AsyncMode=u,t.ConcurrentMode=h,t.ContextConsumer=c,t.ContextProvider=l,t.Element=n,t.ForwardRef=d,t.Fragment=r,t.Lazy=m,t.Memo=g,t.Portal=a,t.Profiler=o,t.StrictMode=s,t.Suspense=f,t.isAsyncMode=function(e){return k(e)||w(e)===u},t.isConcurrentMode=k,t.isContextConsumer=function(e){return w(e)===c},t.isContextProvider=function(e){return w(e)===l},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===n},t.isForwardRef=function(e){return w(e)===d},t.isFragment=function(e){return w(e)===r},t.isLazy=function(e){return w(e)===m},t.isMemo=function(e){return w(e)===g},t.isPortal=function(e){return w(e)===a},t.isProfiler=function(e){return w(e)===o},t.isStrictMode=function(e){return w(e)===s},t.isSuspense=function(e){return w(e)===f},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===r||e===h||e===o||e===s||e===f||e===p||"object"==typeof e&&null!==e&&(e.$$typeof===m||e.$$typeof===g||e.$$typeof===l||e.$$typeof===c||e.$$typeof===d||e.$$typeof===x||e.$$typeof===b||e.$$typeof===y||e.$$typeof===v)},t.typeOf=w},296:(e,t,i)=>{"use strict";e.exports=i(103)},418:e=>{"use strict";var t=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,n=Object.prototype.propertyIsEnumerable;function a(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},i=0;i<10;i++)t["_"+String.fromCharCode(i)]=i;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var n={};return"abcdefghijklmnopqrst".split("").forEach((function(e){n[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},n)).join("")}catch(e){return!1}}()?Object.assign:function(e,r){for(var s,o,l=a(e),c=1;c<arguments.length;c++){for(var u in s=Object(arguments[c]))i.call(s,u)&&(l[u]=s[u]);if(t){o=t(s);for(var h=0;h<o.length;h++)n.call(s,o[h])&&(l[o[h]]=s[o[h]])}}return l}},703:(e,t,i)=>{"use strict";var n=i(414);function a(){}function r(){}r.resetWarningCache=a,e.exports=function(){function e(e,t,i,a,r,s){if(s!==n){var o=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw o.name="Invariant Violation",o}}function t(){return e}e.isRequired=e;var i={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:r,resetWarningCache:a};return i.PropTypes=i,i}},697:(e,t,i)=>{e.exports=i(703)()},414:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},229:(e,t,i)=>{"use strict";var n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var i=arguments[t];for(var n in i)Object.prototype.hasOwnProperty.call(i,n)&&(e[n]=i[n])}return e},r=function(){function e(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,i,n){return i&&e(t.prototype,i),n&&e(t,n),t}}(),s=u(i(927)),o=i(294),l=u(o),c=u(i(697));function u(e){return e&&e.__esModule?e:{default:e}}window.ApexCharts=s.default;var h=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e);var i=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t));return l.default.createRef?i.chartRef=l.default.createRef():i.setRef=function(e){return i.chartRef=e},i.chart=null,i}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(e,o.Component),r(e,[{key:"render",value:function(){var e=function(e,t){var i={};for(var n in e)0<=t.indexOf(n)||Object.prototype.hasOwnProperty.call(e,n)&&(i[n]=e[n]);return i}(this.props,[]);return l.default.createElement("div",a({ref:l.default.createRef?this.chartRef:this.setRef},e))}},{key:"componentDidMount",value:function(){var e=l.default.createRef?this.chartRef.current:this.chartRef;this.chart=new s.default(e,this.getConfig()),this.chart.render()}},{key:"getConfig",value:function(){var e=this.props,t=e.type,i=e.height,n=e.width,a=e.series,r=e.options,s={chart:{type:t,height:i,width:n},series:a};return this.extend(r,s)}},{key:"isObject",value:function(e){return e&&"object"===(void 0===e?"undefined":n(e))&&!Array.isArray(e)&&null!=e}},{key:"extend",value:function(e,t){var i=this;"function"!=typeof Object.assign&&(Object.assign=function(e){if(null==e)throw new TypeError("Cannot convert undefined or null to object");for(var t=Object(e),i=1;i<arguments.length;i++){var n=arguments[i];if(null!=n)for(var a in n)n.hasOwnProperty(a)&&(t[a]=n[a])}return t});var n=Object.assign({},e);return this.isObject(e)&&this.isObject(t)&&Object.keys(t).forEach((function(a){i.isObject(t[a])&&a in e?n[a]=i.extend(e[a],t[a]):Object.assign(n,function(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}({},a,t[a]))})),n}},{key:"componentDidUpdate",value:function(e){if(!this.chart)return null;var t=this.props,i=t.options,n=t.series,a=t.height,r=t.width,s=JSON.stringify(e.options),o=JSON.stringify(e.series),l=JSON.stringify(i),c=JSON.stringify(n);s===l&&o===c&&a===e.height&&r===e.width||(o===c?this.chart.updateOptions(this.getConfig()):s===l&&a===e.height&&r===e.width?this.chart.updateSeries(n):this.chart.updateOptions(this.getConfig()))}},{key:"componentWillUnmount",value:function(){this.chart&&"function"==typeof this.chart.destroy&&this.chart.destroy()}}]),e}();(t.Z=h).propTypes={type:c.default.string.isRequired,width:c.default.any,height:c.default.any,series:c.default.array.isRequired,options:c.default.object.isRequired},h.defaultProps={type:"line",width:"100%",height:"auto"}},448:(e,t,i)=>{"use strict";var n=i(294),a=i(418),r=i(840);function s(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,i=1;i<arguments.length;i++)t+="&args[]="+encodeURIComponent(arguments[i]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!n)throw Error(s(227));var o=new Set,l={};function c(e,t){u(e,t),u(e+"Capture",t)}function u(e,t){for(l[e]=t,e=0;e<t.length;e++)o.add(t[e])}var h=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,f=Object.prototype.hasOwnProperty,p={},g={};function m(e,t,i,n,a,r,s){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=n,this.attributeNamespace=a,this.mustUseProperty=i,this.propertyName=e,this.type=t,this.sanitizeURL=r,this.removeEmptyString=s}var v={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){v[e]=new m(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];v[t]=new m(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){v[e]=new m(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){v[e]=new m(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){v[e]=new m(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){v[e]=new m(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){v[e]=new m(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){v[e]=new m(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){v[e]=new m(e,5,!1,e.toLowerCase(),null,!1,!1)}));var x=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function y(e,t,i,n){var a=v.hasOwnProperty(t)?v[t]:null;(null!==a?0===a.type:!n&&2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1]))||(function(e,t,i,n){if(null==t||function(e,t,i,n){if(null!==i&&0===i.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!n&&(null!==i?!i.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,i,n))return!0;if(n)return!1;if(null!==i)switch(i.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,i,a,n)&&(i=null),n||null===a?function(e){return!!f.call(g,e)||!f.call(p,e)&&(d.test(e)?g[e]=!0:(p[e]=!0,!1))}(t)&&(null===i?e.removeAttribute(t):e.setAttribute(t,""+i)):a.mustUseProperty?e[a.propertyName]=null===i?3!==a.type&&"":i:(t=a.attributeName,n=a.attributeNamespace,null===i?e.removeAttribute(t):(i=3===(a=a.type)||4===a&&!0===i?"":""+i,n?e.setAttributeNS(n,t,i):e.setAttribute(t,i))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(x,b);v[t]=new m(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(x,b);v[t]=new m(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(x,b);v[t]=new m(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){v[e]=new m(e,1,!1,e.toLowerCase(),null,!1,!1)})),v.xlinkHref=new m("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){v[e]=new m(e,1,!1,e.toLowerCase(),null,!0,!0)}));var w=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,k=60103,S=60106,A=60107,C=60108,E=60114,P=60109,T=60110,L=60112,I=60113,M=60120,O=60115,z=60116,R=60121,F=60128,N=60129,D=60130,X=60131;if("function"==typeof Symbol&&Symbol.for){var Y=Symbol.for;k=Y("react.element"),S=Y("react.portal"),A=Y("react.fragment"),C=Y("react.strict_mode"),E=Y("react.profiler"),P=Y("react.provider"),T=Y("react.context"),L=Y("react.forward_ref"),I=Y("react.suspense"),M=Y("react.suspense_list"),O=Y("react.memo"),z=Y("react.lazy"),R=Y("react.block"),Y("react.scope"),F=Y("react.opaque.id"),N=Y("react.debug_trace_mode"),D=Y("react.offscreen"),X=Y("react.legacy_hidden")}var H,B="function"==typeof Symbol&&Symbol.iterator;function _(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=B&&e[B]||e["@@iterator"])?e:null}function W(e){if(void 0===H)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);H=t&&t[1]||""}return"\n"+H+e}var j=!1;function V(e,t){if(!e||j)return"";j=!0;var i=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var n=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){n=e}e.call(t.prototype)}else{try{throw Error()}catch(e){n=e}e()}}catch(e){if(e&&n&&"string"==typeof e.stack){for(var a=e.stack.split("\n"),r=n.stack.split("\n"),s=a.length-1,o=r.length-1;1<=s&&0<=o&&a[s]!==r[o];)o--;for(;1<=s&&0<=o;s--,o--)if(a[s]!==r[o]){if(1!==s||1!==o)do{if(s--,0>--o||a[s]!==r[o])return"\n"+a[s].replace(" at new "," at ")}while(1<=s&&0<=o);break}}}finally{j=!1,Error.prepareStackTrace=i}return(e=e?e.displayName||e.name:"")?W(e):""}function G(e){switch(e.tag){case 5:return W(e.type);case 16:return W("Lazy");case 13:return W("Suspense");case 19:return W("SuspenseList");case 0:case 2:case 15:return V(e.type,!1);case 11:return V(e.type.render,!1);case 22:return V(e.type._render,!1);case 1:return V(e.type,!0);default:return""}}function U(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case A:return"Fragment";case S:return"Portal";case E:return"Profiler";case C:return"StrictMode";case I:return"Suspense";case M:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case T:return(e.displayName||"Context")+".Consumer";case P:return(e._context.displayName||"Context")+".Provider";case L:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case O:return U(e.type);case R:return U(e._render);case z:t=e._payload,e=e._init;try{return U(e(t))}catch(e){}}return null}function q(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function $(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function Z(e){e._valueTracker||(e._valueTracker=function(e){var t=$(e)?"checked":"value",i=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),n=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==i&&"function"==typeof i.get&&"function"==typeof i.set){var a=i.get,r=i.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){n=""+e,r.call(this,e)}}),Object.defineProperty(e,t,{enumerable:i.enumerable}),{getValue:function(){return n},setValue:function(e){n=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Q(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var i=t.getValue(),n="";return e&&(n=$(e)?e.checked?"true":"false":e.value),(e=n)!==i&&(t.setValue(e),!0)}function K(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function J(e,t){var i=t.checked;return a({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=i?i:e._wrapperState.initialChecked})}function ee(e,t){var i=null==t.defaultValue?"":t.defaultValue,n=null!=t.checked?t.checked:t.defaultChecked;i=q(null!=t.value?t.value:i),e._wrapperState={initialChecked:n,initialValue:i,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function te(e,t){null!=(t=t.checked)&&y(e,"checked",t,!1)}function ie(e,t){te(e,t);var i=q(t.value),n=t.type;if(null!=i)"number"===n?(0===i&&""===e.value||e.value!=i)&&(e.value=""+i):e.value!==""+i&&(e.value=""+i);else if("submit"===n||"reset"===n)return void e.removeAttribute("value");t.hasOwnProperty("value")?ae(e,t.type,i):t.hasOwnProperty("defaultValue")&&ae(e,t.type,q(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function ne(e,t,i){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var n=t.type;if(!("submit"!==n&&"reset"!==n||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,i||t===e.value||(e.value=t),e.defaultValue=t}""!==(i=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==i&&(e.name=i)}function ae(e,t,i){"number"===t&&K(e.ownerDocument)===e||(null==i?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+i&&(e.defaultValue=""+i))}function re(e,t){return e=a({children:void 0},t),(t=function(e){var t="";return n.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function se(e,t,i,n){if(e=e.options,t){t={};for(var a=0;a<i.length;a++)t["$"+i[a]]=!0;for(i=0;i<e.length;i++)a=t.hasOwnProperty("$"+e[i].value),e[i].selected!==a&&(e[i].selected=a),a&&n&&(e[i].defaultSelected=!0)}else{for(i=""+q(i),t=null,a=0;a<e.length;a++){if(e[a].value===i)return e[a].selected=!0,void(n&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function oe(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(s(91));return a({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function le(e,t){var i=t.value;if(null==i){if(i=t.children,t=t.defaultValue,null!=i){if(null!=t)throw Error(s(92));if(Array.isArray(i)){if(!(1>=i.length))throw Error(s(93));i=i[0]}t=i}null==t&&(t=""),i=t}e._wrapperState={initialValue:q(i)}}function ce(e,t){var i=q(t.value),n=q(t.defaultValue);null!=i&&((i=""+i)!==e.value&&(e.value=i),null==t.defaultValue&&e.defaultValue!==i&&(e.defaultValue=i)),null!=n&&(e.defaultValue=""+n)}function ue(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var he="http://www.w3.org/1999/xhtml";function de(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function fe(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?de(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var pe,ge,me=(ge=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((pe=pe||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=pe.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,i,n){MSApp.execUnsafeLocalFunction((function(){return ge(e,t)}))}:ge);function ve(e,t){if(t){var i=e.firstChild;if(i&&i===e.lastChild&&3===i.nodeType)return void(i.nodeValue=t)}e.textContent=t}var xe={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},be=["Webkit","ms","Moz","O"];function ye(e,t,i){return null==t||"boolean"==typeof t||""===t?"":i||"number"!=typeof t||0===t||xe.hasOwnProperty(e)&&xe[e]?(""+t).trim():t+"px"}function we(e,t){for(var i in e=e.style,t)if(t.hasOwnProperty(i)){var n=0===i.indexOf("--"),a=ye(i,t[i],n);"float"===i&&(i="cssFloat"),n?e.setProperty(i,a):e[i]=a}}Object.keys(xe).forEach((function(e){be.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),xe[t]=xe[e]}))}));var ke=a({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Se(e,t){if(t){if(ke[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(s(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(s(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(s(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(s(62))}}function Ae(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function Ce(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Ee=null,Pe=null,Te=null;function Le(e){if(e=ia(e)){if("function"!=typeof Ee)throw Error(s(280));var t=e.stateNode;t&&(t=aa(t),Ee(e.stateNode,e.type,t))}}function Ie(e){Pe?Te?Te.push(e):Te=[e]:Pe=e}function Me(){if(Pe){var e=Pe,t=Te;if(Te=Pe=null,Le(e),t)for(e=0;e<t.length;e++)Le(t[e])}}function Oe(e,t){return e(t)}function ze(e,t,i,n,a){return e(t,i,n,a)}function Re(){}var Fe=Oe,Ne=!1,De=!1;function Xe(){null===Pe&&null===Te||(Re(),Me())}function Ye(e,t){var i=e.stateNode;if(null===i)return null;var n=aa(i);if(null===n)return null;i=n[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(n=!n.disabled)||(n=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!n;break e;default:e=!1}if(e)return null;if(i&&"function"!=typeof i)throw Error(s(231,t,typeof i));return i}var He=!1;if(h)try{var Be={};Object.defineProperty(Be,"passive",{get:function(){He=!0}}),window.addEventListener("test",Be,Be),window.removeEventListener("test",Be,Be)}catch(ge){He=!1}function _e(e,t,i,n,a,r,s,o,l){var c=Array.prototype.slice.call(arguments,3);try{t.apply(i,c)}catch(e){this.onError(e)}}var We=!1,je=null,Ve=!1,Ge=null,Ue={onError:function(e){We=!0,je=e}};function qe(e,t,i,n,a,r,s,o,l){We=!1,je=null,_e.apply(Ue,arguments)}function $e(e){var t=e,i=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).flags)&&(i=t.return),e=t.return}while(e)}return 3===t.tag?i:null}function Ze(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function Qe(e){if($e(e)!==e)throw Error(s(188))}function Ke(e){if(e=function(e){var t=e.alternate;if(!t){if(null===(t=$e(e)))throw Error(s(188));return t!==e?null:e}for(var i=e,n=t;;){var a=i.return;if(null===a)break;var r=a.alternate;if(null===r){if(null!==(n=a.return)){i=n;continue}break}if(a.child===r.child){for(r=a.child;r;){if(r===i)return Qe(a),e;if(r===n)return Qe(a),t;r=r.sibling}throw Error(s(188))}if(i.return!==n.return)i=a,n=r;else{for(var o=!1,l=a.child;l;){if(l===i){o=!0,i=a,n=r;break}if(l===n){o=!0,n=a,i=r;break}l=l.sibling}if(!o){for(l=r.child;l;){if(l===i){o=!0,i=r,n=a;break}if(l===n){o=!0,n=r,i=a;break}l=l.sibling}if(!o)throw Error(s(189))}}if(i.alternate!==n)throw Error(s(190))}if(3!==i.tag)throw Error(s(188));return i.stateNode.current===i?e:t}(e),!e)return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function Je(e,t){for(var i=e.alternate;null!==t;){if(t===e||t===i)return!0;t=t.return}return!1}var et,tt,it,nt,at=!1,rt=[],st=null,ot=null,lt=null,ct=new Map,ut=new Map,ht=[],dt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function ft(e,t,i,n,a){return{blockedOn:e,domEventName:t,eventSystemFlags:16|i,nativeEvent:a,targetContainers:[n]}}function pt(e,t){switch(e){case"focusin":case"focusout":st=null;break;case"dragenter":case"dragleave":ot=null;break;case"mouseover":case"mouseout":lt=null;break;case"pointerover":case"pointerout":ct.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":ut.delete(t.pointerId)}}function gt(e,t,i,n,a,r){return null===e||e.nativeEvent!==r?(e=ft(t,i,n,a,r),null!==t&&null!==(t=ia(t))&&tt(t),e):(e.eventSystemFlags|=n,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function mt(e){var t=ta(e.target);if(null!==t){var i=$e(t);if(null!==i)if(13===(t=i.tag)){if(null!==(t=Ze(i)))return e.blockedOn=t,void nt(e.lanePriority,(function(){r.unstable_runWithPriority(e.priority,(function(){it(i)}))}))}else if(3===t&&i.stateNode.hydrate)return void(e.blockedOn=3===i.tag?i.stateNode.containerInfo:null)}e.blockedOn=null}function vt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var i=Kt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==i)return null!==(t=ia(i))&&tt(t),e.blockedOn=i,!1;t.shift()}return!0}function xt(e,t,i){vt(e)&&i.delete(t)}function bt(){for(at=!1;0<rt.length;){var e=rt[0];if(null!==e.blockedOn){null!==(e=ia(e.blockedOn))&&et(e);break}for(var t=e.targetContainers;0<t.length;){var i=Kt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==i){e.blockedOn=i;break}t.shift()}null===e.blockedOn&&rt.shift()}null!==st&&vt(st)&&(st=null),null!==ot&&vt(ot)&&(ot=null),null!==lt&&vt(lt)&&(lt=null),ct.forEach(xt),ut.forEach(xt)}function yt(e,t){e.blockedOn===t&&(e.blockedOn=null,at||(at=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,bt)))}function wt(e){function t(t){return yt(t,e)}if(0<rt.length){yt(rt[0],e);for(var i=1;i<rt.length;i++){var n=rt[i];n.blockedOn===e&&(n.blockedOn=null)}}for(null!==st&&yt(st,e),null!==ot&&yt(ot,e),null!==lt&&yt(lt,e),ct.forEach(t),ut.forEach(t),i=0;i<ht.length;i++)(n=ht[i]).blockedOn===e&&(n.blockedOn=null);for(;0<ht.length&&null===(i=ht[0]).blockedOn;)mt(i),null===i.blockedOn&&ht.shift()}function kt(e,t){var i={};return i[e.toLowerCase()]=t.toLowerCase(),i["Webkit"+e]="webkit"+t,i["Moz"+e]="moz"+t,i}var St={animationend:kt("Animation","AnimationEnd"),animationiteration:kt("Animation","AnimationIteration"),animationstart:kt("Animation","AnimationStart"),transitionend:kt("Transition","TransitionEnd")},At={},Ct={};function Et(e){if(At[e])return At[e];if(!St[e])return e;var t,i=St[e];for(t in i)if(i.hasOwnProperty(t)&&t in Ct)return At[e]=i[t];return e}h&&(Ct=document.createElement("div").style,"AnimationEvent"in window||(delete St.animationend.animation,delete St.animationiteration.animation,delete St.animationstart.animation),"TransitionEvent"in window||delete St.transitionend.transition);var Pt=Et("animationend"),Tt=Et("animationiteration"),Lt=Et("animationstart"),It=Et("transitionend"),Mt=new Map,Ot=new Map,zt=["abort","abort",Pt,"animationEnd",Tt,"animationIteration",Lt,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",It,"transitionEnd","waiting","waiting"];function Rt(e,t){for(var i=0;i<e.length;i+=2){var n=e[i],a=e[i+1];a="on"+(a[0].toUpperCase()+a.slice(1)),Ot.set(n,t),Mt.set(n,a),c(a,[n])}}(0,r.unstable_now)();var Ft=8;function Nt(e){if(0!=(1&e))return Ft=15,1;if(0!=(2&e))return Ft=14,2;if(0!=(4&e))return Ft=13,4;var t=24&e;return 0!==t?(Ft=12,t):0!=(32&e)?(Ft=11,32):0!=(t=192&e)?(Ft=10,t):0!=(256&e)?(Ft=9,256):0!=(t=3584&e)?(Ft=8,t):0!=(4096&e)?(Ft=7,4096):0!=(t=4186112&e)?(Ft=6,t):0!=(t=62914560&e)?(Ft=5,t):67108864&e?(Ft=4,67108864):0!=(134217728&e)?(Ft=3,134217728):0!=(t=805306368&e)?(Ft=2,t):0!=(1073741824&e)?(Ft=1,1073741824):(Ft=8,e)}function Dt(e,t){var i=e.pendingLanes;if(0===i)return Ft=0;var n=0,a=0,r=e.expiredLanes,s=e.suspendedLanes,o=e.pingedLanes;if(0!==r)n=r,a=Ft=15;else if(0!=(r=134217727&i)){var l=r&~s;0!==l?(n=Nt(l),a=Ft):0!=(o&=r)&&(n=Nt(o),a=Ft)}else 0!=(r=i&~s)?(n=Nt(r),a=Ft):0!==o&&(n=Nt(o),a=Ft);if(0===n)return 0;if(n=i&((0>(n=31-Wt(n))?0:1<<n)<<1)-1,0!==t&&t!==n&&0==(t&s)){if(Nt(t),a<=Ft)return t;Ft=a}if(0!==(t=e.entangledLanes))for(e=e.entanglements,t&=n;0<t;)a=1<<(i=31-Wt(t)),n|=e[i],t&=~a;return n}function Xt(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Yt(e,t){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=Ht(24&~t))?Yt(10,t):e;case 10:return 0===(e=Ht(192&~t))?Yt(8,t):e;case 8:return 0===(e=Ht(3584&~t))&&0===(e=Ht(4186112&~t))&&(e=512),e;case 2:return 0===(t=Ht(805306368&~t))&&(t=268435456),t}throw Error(s(358,e))}function Ht(e){return e&-e}function Bt(e){for(var t=[],i=0;31>i;i++)t.push(e);return t}function _t(e,t,i){e.pendingLanes|=t;var n=t-1;e.suspendedLanes&=n,e.pingedLanes&=n,(e=e.eventTimes)[t=31-Wt(t)]=i}var Wt=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(jt(e)/Vt|0)|0},jt=Math.log,Vt=Math.LN2,Gt=r.unstable_UserBlockingPriority,Ut=r.unstable_runWithPriority,qt=!0;function $t(e,t,i,n){Ne||Re();var a=Qt,r=Ne;Ne=!0;try{ze(a,e,t,i,n)}finally{(Ne=r)||Xe()}}function Zt(e,t,i,n){Ut(Gt,Qt.bind(null,e,t,i,n))}function Qt(e,t,i,n){var a;if(qt)if((a=0==(4&t))&&0<rt.length&&-1<dt.indexOf(e))e=ft(null,e,t,i,n),rt.push(e);else{var r=Kt(e,t,i,n);if(null===r)a&&pt(e,n);else{if(a){if(-1<dt.indexOf(e))return e=ft(r,e,t,i,n),void rt.push(e);if(function(e,t,i,n,a){switch(t){case"focusin":return st=gt(st,e,t,i,n,a),!0;case"dragenter":return ot=gt(ot,e,t,i,n,a),!0;case"mouseover":return lt=gt(lt,e,t,i,n,a),!0;case"pointerover":var r=a.pointerId;return ct.set(r,gt(ct.get(r)||null,e,t,i,n,a)),!0;case"gotpointercapture":return r=a.pointerId,ut.set(r,gt(ut.get(r)||null,e,t,i,n,a)),!0}return!1}(r,e,t,i,n))return;pt(e,n)}Rn(e,t,n,null,i)}}}function Kt(e,t,i,n){var a=Ce(n);if(null!==(a=ta(a))){var r=$e(a);if(null===r)a=null;else{var s=r.tag;if(13===s){if(null!==(a=Ze(r)))return a;a=null}else if(3===s){if(r.stateNode.hydrate)return 3===r.tag?r.stateNode.containerInfo:null;a=null}else r!==a&&(a=null)}}return Rn(e,t,n,a,i),null}var Jt=null,ei=null,ti=null;function ii(){if(ti)return ti;var e,t,i=ei,n=i.length,a="value"in Jt?Jt.value:Jt.textContent,r=a.length;for(e=0;e<n&&i[e]===a[e];e++);var s=n-e;for(t=1;t<=s&&i[n-t]===a[r-t];t++);return ti=a.slice(e,1<t?1-t:void 0)}function ni(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function ai(){return!0}function ri(){return!1}function si(e){function t(t,i,n,a,r){for(var s in this._reactName=t,this._targetInst=n,this.type=i,this.nativeEvent=a,this.target=r,this.currentTarget=null,e)e.hasOwnProperty(s)&&(t=e[s],this[s]=t?t(a):a[s]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?ai:ri,this.isPropagationStopped=ri,this}return a(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=ai)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=ai)},persist:function(){},isPersistent:ai}),t}var oi,li,ci,ui={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},hi=si(ui),di=a({},ui,{view:0,detail:0}),fi=si(di),pi=a({},di,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Ei,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==ci&&(ci&&"mousemove"===e.type?(oi=e.screenX-ci.screenX,li=e.screenY-ci.screenY):li=oi=0,ci=e),oi)},movementY:function(e){return"movementY"in e?e.movementY:li}}),gi=si(pi),mi=si(a({},pi,{dataTransfer:0})),vi=si(a({},di,{relatedTarget:0})),xi=si(a({},ui,{animationName:0,elapsedTime:0,pseudoElement:0})),bi=a({},ui,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),yi=si(bi),wi=si(a({},ui,{data:0})),ki={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Si={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Ai={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Ci(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Ai[e])&&!!t[e]}function Ei(){return Ci}var Pi=a({},di,{key:function(e){if(e.key){var t=ki[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=ni(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Si[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Ei,charCode:function(e){return"keypress"===e.type?ni(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?ni(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Ti=si(Pi),Li=si(a({},pi,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Ii=si(a({},di,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Ei})),Mi=si(a({},ui,{propertyName:0,elapsedTime:0,pseudoElement:0})),Oi=a({},pi,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),zi=si(Oi),Ri=[9,13,27,32],Fi=h&&"CompositionEvent"in window,Ni=null;h&&"documentMode"in document&&(Ni=document.documentMode);var Di=h&&"TextEvent"in window&&!Ni,Xi=h&&(!Fi||Ni&&8<Ni&&11>=Ni),Yi=String.fromCharCode(32),Hi=!1;function Bi(e,t){switch(e){case"keyup":return-1!==Ri.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function _i(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Wi=!1,ji={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Vi(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!ji[e.type]:"textarea"===t}function Gi(e,t,i,n){Ie(n),0<(t=Nn(t,"onChange")).length&&(i=new hi("onChange","change",null,i,n),e.push({event:i,listeners:t}))}var Ui=null,qi=null;function $i(e){Tn(e,0)}function Zi(e){if(Q(na(e)))return e}function Qi(e,t){if("change"===e)return t}var Ki=!1;if(h){var Ji;if(h){var en="oninput"in document;if(!en){var tn=document.createElement("div");tn.setAttribute("oninput","return;"),en="function"==typeof tn.oninput}Ji=en}else Ji=!1;Ki=Ji&&(!document.documentMode||9<document.documentMode)}function nn(){Ui&&(Ui.detachEvent("onpropertychange",an),qi=Ui=null)}function an(e){if("value"===e.propertyName&&Zi(qi)){var t=[];if(Gi(t,qi,e,Ce(e)),e=$i,Ne)e(t);else{Ne=!0;try{Oe(e,t)}finally{Ne=!1,Xe()}}}}function rn(e,t,i){"focusin"===e?(nn(),qi=i,(Ui=t).attachEvent("onpropertychange",an)):"focusout"===e&&nn()}function sn(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Zi(qi)}function on(e,t){if("click"===e)return Zi(t)}function ln(e,t){if("input"===e||"change"===e)return Zi(t)}var cn="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},un=Object.prototype.hasOwnProperty;function hn(e,t){if(cn(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var i=Object.keys(e),n=Object.keys(t);if(i.length!==n.length)return!1;for(n=0;n<i.length;n++)if(!un.call(t,i[n])||!cn(e[i[n]],t[i[n]]))return!1;return!0}function dn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function fn(e,t){var i,n=dn(e);for(e=0;n;){if(3===n.nodeType){if(i=e+n.textContent.length,e<=t&&i>=t)return{node:n,offset:t-e};e=i}e:{for(;n;){if(n.nextSibling){n=n.nextSibling;break e}n=n.parentNode}n=void 0}n=dn(n)}}function pn(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?pn(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function gn(){for(var e=window,t=K();t instanceof e.HTMLIFrameElement;){try{var i="string"==typeof t.contentWindow.location.href}catch(e){i=!1}if(!i)break;t=K((e=t.contentWindow).document)}return t}function mn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var vn=h&&"documentMode"in document&&11>=document.documentMode,xn=null,bn=null,yn=null,wn=!1;function kn(e,t,i){var n=i.window===i?i.document:9===i.nodeType?i:i.ownerDocument;wn||null==xn||xn!==K(n)||(n="selectionStart"in(n=xn)&&mn(n)?{start:n.selectionStart,end:n.selectionEnd}:{anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},yn&&hn(yn,n)||(yn=n,0<(n=Nn(bn,"onSelect")).length&&(t=new hi("onSelect","select",null,t,i),e.push({event:t,listeners:n}),t.target=xn)))}Rt("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Rt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Rt(zt,2);for(var Sn="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),An=0;An<Sn.length;An++)Ot.set(Sn[An],0);u("onMouseEnter",["mouseout","mouseover"]),u("onMouseLeave",["mouseout","mouseover"]),u("onPointerEnter",["pointerout","pointerover"]),u("onPointerLeave",["pointerout","pointerover"]),c("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),c("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),c("onBeforeInput",["compositionend","keypress","textInput","paste"]),c("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Cn="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),En=new Set("cancel close invalid load scroll toggle".split(" ").concat(Cn));function Pn(e,t,i){var n=e.type||"unknown-event";e.currentTarget=i,function(e,t,i,n,a,r,o,l,c){if(qe.apply(this,arguments),We){if(!We)throw Error(s(198));var u=je;We=!1,je=null,Ve||(Ve=!0,Ge=u)}}(n,t,void 0,e),e.currentTarget=null}function Tn(e,t){t=0!=(4&t);for(var i=0;i<e.length;i++){var n=e[i],a=n.event;n=n.listeners;e:{var r=void 0;if(t)for(var s=n.length-1;0<=s;s--){var o=n[s],l=o.instance,c=o.currentTarget;if(o=o.listener,l!==r&&a.isPropagationStopped())break e;Pn(a,o,c),r=l}else for(s=0;s<n.length;s++){if(l=(o=n[s]).instance,c=o.currentTarget,o=o.listener,l!==r&&a.isPropagationStopped())break e;Pn(a,o,c),r=l}}}if(Ve)throw e=Ge,Ve=!1,Ge=null,e}function Ln(e,t){var i=ra(t),n=e+"__bubble";i.has(n)||(zn(t,e,2,!1),i.add(n))}var In="_reactListening"+Math.random().toString(36).slice(2);function Mn(e){e[In]||(e[In]=!0,o.forEach((function(t){En.has(t)||On(t,!1,e,null),On(t,!0,e,null)})))}function On(e,t,i,n){var a=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,r=i;if("selectionchange"===e&&9!==i.nodeType&&(r=i.ownerDocument),null!==n&&!t&&En.has(e)){if("scroll"!==e)return;a|=2,r=n}var s=ra(r),o=e+"__"+(t?"capture":"bubble");s.has(o)||(t&&(a|=4),zn(r,e,a,t),s.add(o))}function zn(e,t,i,n){var a=Ot.get(t);switch(void 0===a?2:a){case 0:a=$t;break;case 1:a=Zt;break;default:a=Qt}i=a.bind(null,t,i,e),a=void 0,!He||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),n?void 0!==a?e.addEventListener(t,i,{capture:!0,passive:a}):e.addEventListener(t,i,!0):void 0!==a?e.addEventListener(t,i,{passive:a}):e.addEventListener(t,i,!1)}function Rn(e,t,i,n,a){var r=n;if(0==(1&t)&&0==(2&t)&&null!==n)e:for(;;){if(null===n)return;var s=n.tag;if(3===s||4===s){var o=n.stateNode.containerInfo;if(o===a||8===o.nodeType&&o.parentNode===a)break;if(4===s)for(s=n.return;null!==s;){var l=s.tag;if((3===l||4===l)&&((l=s.stateNode.containerInfo)===a||8===l.nodeType&&l.parentNode===a))return;s=s.return}for(;null!==o;){if(null===(s=ta(o)))return;if(5===(l=s.tag)||6===l){n=r=s;continue e}o=o.parentNode}}n=n.return}!function(e,t,i){if(De)return e();De=!0;try{Fe(e,t,i)}finally{De=!1,Xe()}}((function(){var n=r,a=Ce(i),s=[];e:{var o=Mt.get(e);if(void 0!==o){var l=hi,c=e;switch(e){case"keypress":if(0===ni(i))break e;case"keydown":case"keyup":l=Ti;break;case"focusin":c="focus",l=vi;break;case"focusout":c="blur",l=vi;break;case"beforeblur":case"afterblur":l=vi;break;case"click":if(2===i.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":l=gi;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":l=mi;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":l=Ii;break;case Pt:case Tt:case Lt:l=xi;break;case It:l=Mi;break;case"scroll":l=fi;break;case"wheel":l=zi;break;case"copy":case"cut":case"paste":l=yi;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":l=Li}var u=0!=(4&t),h=!u&&"scroll"===e,d=u?null!==o?o+"Capture":null:o;u=[];for(var f,p=n;null!==p;){var g=(f=p).stateNode;if(5===f.tag&&null!==g&&(f=g,null!==d&&null!=(g=Ye(p,d))&&u.push(Fn(p,g,f))),h)break;p=p.return}0<u.length&&(o=new l(o,c,null,i,a),s.push({event:o,listeners:u}))}}if(0==(7&t)){if(l="mouseout"===e||"pointerout"===e,(!(o="mouseover"===e||"pointerover"===e)||0!=(16&t)||!(c=i.relatedTarget||i.fromElement)||!ta(c)&&!c[Jn])&&(l||o)&&(o=a.window===a?a:(o=a.ownerDocument)?o.defaultView||o.parentWindow:window,l?(l=n,null!==(c=(c=i.relatedTarget||i.toElement)?ta(c):null)&&(c!==(h=$e(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(l=null,c=n),l!==c)){if(u=gi,g="onMouseLeave",d="onMouseEnter",p="mouse","pointerout"!==e&&"pointerover"!==e||(u=Li,g="onPointerLeave",d="onPointerEnter",p="pointer"),h=null==l?o:na(l),f=null==c?o:na(c),(o=new u(g,p+"leave",l,i,a)).target=h,o.relatedTarget=f,g=null,ta(a)===n&&((u=new u(d,p+"enter",c,i,a)).target=f,u.relatedTarget=h,g=u),h=g,l&&c)e:{for(d=c,p=0,f=u=l;f;f=Dn(f))p++;for(f=0,g=d;g;g=Dn(g))f++;for(;0<p-f;)u=Dn(u),p--;for(;0<f-p;)d=Dn(d),f--;for(;p--;){if(u===d||null!==d&&u===d.alternate)break e;u=Dn(u),d=Dn(d)}u=null}else u=null;null!==l&&Xn(s,o,l,u,!1),null!==c&&null!==h&&Xn(s,h,c,u,!0)}if("select"===(l=(o=n?na(n):window).nodeName&&o.nodeName.toLowerCase())||"input"===l&&"file"===o.type)var m=Qi;else if(Vi(o))if(Ki)m=ln;else{m=sn;var v=rn}else(l=o.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(m=on);switch(m&&(m=m(e,n))?Gi(s,m,i,a):(v&&v(e,o,n),"focusout"===e&&(v=o._wrapperState)&&v.controlled&&"number"===o.type&&ae(o,"number",o.value)),v=n?na(n):window,e){case"focusin":(Vi(v)||"true"===v.contentEditable)&&(xn=v,bn=n,yn=null);break;case"focusout":yn=bn=xn=null;break;case"mousedown":wn=!0;break;case"contextmenu":case"mouseup":case"dragend":wn=!1,kn(s,i,a);break;case"selectionchange":if(vn)break;case"keydown":case"keyup":kn(s,i,a)}var x;if(Fi)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else Wi?Bi(e,i)&&(b="onCompositionEnd"):"keydown"===e&&229===i.keyCode&&(b="onCompositionStart");b&&(Xi&&"ko"!==i.locale&&(Wi||"onCompositionStart"!==b?"onCompositionEnd"===b&&Wi&&(x=ii()):(ei="value"in(Jt=a)?Jt.value:Jt.textContent,Wi=!0)),0<(v=Nn(n,b)).length&&(b=new wi(b,e,null,i,a),s.push({event:b,listeners:v}),(x||null!==(x=_i(i)))&&(b.data=x))),(x=Di?function(e,t){switch(e){case"compositionend":return _i(t);case"keypress":return 32!==t.which?null:(Hi=!0,Yi);case"textInput":return(e=t.data)===Yi&&Hi?null:e;default:return null}}(e,i):function(e,t){if(Wi)return"compositionend"===e||!Fi&&Bi(e,t)?(e=ii(),ti=ei=Jt=null,Wi=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Xi&&"ko"!==t.locale?null:t.data}}(e,i))&&0<(n=Nn(n,"onBeforeInput")).length&&(a=new wi("onBeforeInput","beforeinput",null,i,a),s.push({event:a,listeners:n}),a.data=x)}Tn(s,t)}))}function Fn(e,t,i){return{instance:e,listener:t,currentTarget:i}}function Nn(e,t){for(var i=t+"Capture",n=[];null!==e;){var a=e,r=a.stateNode;5===a.tag&&null!==r&&(a=r,null!=(r=Ye(e,i))&&n.unshift(Fn(e,r,a)),null!=(r=Ye(e,t))&&n.push(Fn(e,r,a))),e=e.return}return n}function Dn(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Xn(e,t,i,n,a){for(var r=t._reactName,s=[];null!==i&&i!==n;){var o=i,l=o.alternate,c=o.stateNode;if(null!==l&&l===n)break;5===o.tag&&null!==c&&(o=c,a?null!=(l=Ye(i,r))&&s.unshift(Fn(i,l,o)):a||null!=(l=Ye(i,r))&&s.push(Fn(i,l,o))),i=i.return}0!==s.length&&e.push({event:t,listeners:s})}function Yn(){}var Hn=null,Bn=null;function _n(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Wn(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var jn="function"==typeof setTimeout?setTimeout:void 0,Vn="function"==typeof clearTimeout?clearTimeout:void 0;function Gn(e){(1===e.nodeType||9===e.nodeType&&null!=(e=e.body))&&(e.textContent="")}function Un(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function qn(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var i=e.data;if("$"===i||"$!"===i||"$?"===i){if(0===t)return e;t--}else"/$"===i&&t++}e=e.previousSibling}return null}var $n=0,Zn=Math.random().toString(36).slice(2),Qn="__reactFiber$"+Zn,Kn="__reactProps$"+Zn,Jn="__reactContainer$"+Zn,ea="__reactEvents$"+Zn;function ta(e){var t=e[Qn];if(t)return t;for(var i=e.parentNode;i;){if(t=i[Jn]||i[Qn]){if(i=t.alternate,null!==t.child||null!==i&&null!==i.child)for(e=qn(e);null!==e;){if(i=e[Qn])return i;e=qn(e)}return t}i=(e=i).parentNode}return null}function ia(e){return!(e=e[Qn]||e[Jn])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function na(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(s(33))}function aa(e){return e[Kn]||null}function ra(e){var t=e[ea];return void 0===t&&(t=e[ea]=new Set),t}var sa=[],oa=-1;function la(e){return{current:e}}function ca(e){0>oa||(e.current=sa[oa],sa[oa]=null,oa--)}function ua(e,t){oa++,sa[oa]=e.current,e.current=t}var ha={},da=la(ha),fa=la(!1),pa=ha;function ga(e,t){var i=e.type.contextTypes;if(!i)return ha;var n=e.stateNode;if(n&&n.__reactInternalMemoizedUnmaskedChildContext===t)return n.__reactInternalMemoizedMaskedChildContext;var a,r={};for(a in i)r[a]=t[a];return n&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=r),r}function ma(e){return null!=e.childContextTypes}function va(){ca(fa),ca(da)}function xa(e,t,i){if(da.current!==ha)throw Error(s(168));ua(da,t),ua(fa,i)}function ba(e,t,i){var n=e.stateNode;if(e=t.childContextTypes,"function"!=typeof n.getChildContext)return i;for(var r in n=n.getChildContext())if(!(r in e))throw Error(s(108,U(t)||"Unknown",r));return a({},i,n)}function ya(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||ha,pa=da.current,ua(da,e),ua(fa,fa.current),!0}function wa(e,t,i){var n=e.stateNode;if(!n)throw Error(s(169));i?(e=ba(e,t,pa),n.__reactInternalMemoizedMergedChildContext=e,ca(fa),ca(da),ua(da,e)):ca(fa),ua(fa,i)}var ka=null,Sa=null,Aa=r.unstable_runWithPriority,Ca=r.unstable_scheduleCallback,Ea=r.unstable_cancelCallback,Pa=r.unstable_shouldYield,Ta=r.unstable_requestPaint,La=r.unstable_now,Ia=r.unstable_getCurrentPriorityLevel,Ma=r.unstable_ImmediatePriority,Oa=r.unstable_UserBlockingPriority,za=r.unstable_NormalPriority,Ra=r.unstable_LowPriority,Fa=r.unstable_IdlePriority,Na={},Da=void 0!==Ta?Ta:function(){},Xa=null,Ya=null,Ha=!1,Ba=La(),_a=1e4>Ba?La:function(){return La()-Ba};function Wa(){switch(Ia()){case Ma:return 99;case Oa:return 98;case za:return 97;case Ra:return 96;case Fa:return 95;default:throw Error(s(332))}}function ja(e){switch(e){case 99:return Ma;case 98:return Oa;case 97:return za;case 96:return Ra;case 95:return Fa;default:throw Error(s(332))}}function Va(e,t){return e=ja(e),Aa(e,t)}function Ga(e,t,i){return e=ja(e),Ca(e,t,i)}function Ua(){if(null!==Ya){var e=Ya;Ya=null,Ea(e)}qa()}function qa(){if(!Ha&&null!==Xa){Ha=!0;var e=0;try{var t=Xa;Va(99,(function(){for(;e<t.length;e++){var i=t[e];do{i=i(!0)}while(null!==i)}})),Xa=null}catch(t){throw null!==Xa&&(Xa=Xa.slice(e+1)),Ca(Ma,Ua),t}finally{Ha=!1}}}var $a=w.ReactCurrentBatchConfig;function Za(e,t){if(e&&e.defaultProps){for(var i in t=a({},t),e=e.defaultProps)void 0===t[i]&&(t[i]=e[i]);return t}return t}var Qa=la(null),Ka=null,Ja=null,er=null;function tr(){er=Ja=Ka=null}function ir(e){var t=Qa.current;ca(Qa),e.type._context._currentValue=t}function nr(e,t){for(;null!==e;){var i=e.alternate;if((e.childLanes&t)===t){if(null===i||(i.childLanes&t)===t)break;i.childLanes|=t}else e.childLanes|=t,null!==i&&(i.childLanes|=t);e=e.return}}function ar(e,t){Ka=e,er=Ja=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(Fs=!0),e.firstContext=null)}function rr(e,t){if(er!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(er=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Ja){if(null===Ka)throw Error(s(308));Ja=t,Ka.dependencies={lanes:0,firstContext:t,responders:null}}else Ja=Ja.next=t;return e._currentValue}var sr=!1;function or(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function lr(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function cr(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function ur(e,t){if(null!==(e=e.updateQueue)){var i=(e=e.shared).pending;null===i?t.next=t:(t.next=i.next,i.next=t),e.pending=t}}function hr(e,t){var i=e.updateQueue,n=e.alternate;if(null!==n&&i===(n=n.updateQueue)){var a=null,r=null;if(null!==(i=i.firstBaseUpdate)){do{var s={eventTime:i.eventTime,lane:i.lane,tag:i.tag,payload:i.payload,callback:i.callback,next:null};null===r?a=r=s:r=r.next=s,i=i.next}while(null!==i);null===r?a=r=t:r=r.next=t}else a=r=t;return i={baseState:n.baseState,firstBaseUpdate:a,lastBaseUpdate:r,shared:n.shared,effects:n.effects},void(e.updateQueue=i)}null===(e=i.lastBaseUpdate)?i.firstBaseUpdate=t:e.next=t,i.lastBaseUpdate=t}function dr(e,t,i,n){var r=e.updateQueue;sr=!1;var s=r.firstBaseUpdate,o=r.lastBaseUpdate,l=r.shared.pending;if(null!==l){r.shared.pending=null;var c=l,u=c.next;c.next=null,null===o?s=u:o.next=u,o=c;var h=e.alternate;if(null!==h){var d=(h=h.updateQueue).lastBaseUpdate;d!==o&&(null===d?h.firstBaseUpdate=u:d.next=u,h.lastBaseUpdate=c)}}if(null!==s){for(d=r.baseState,o=0,h=u=c=null;;){l=s.lane;var f=s.eventTime;if((n&l)===l){null!==h&&(h=h.next={eventTime:f,lane:0,tag:s.tag,payload:s.payload,callback:s.callback,next:null});e:{var p=e,g=s;switch(l=t,f=i,g.tag){case 1:if("function"==typeof(p=g.payload)){d=p.call(f,d,l);break e}d=p;break e;case 3:p.flags=-4097&p.flags|64;case 0:if(null==(l="function"==typeof(p=g.payload)?p.call(f,d,l):p))break e;d=a({},d,l);break e;case 2:sr=!0}}null!==s.callback&&(e.flags|=32,null===(l=r.effects)?r.effects=[s]:l.push(s))}else f={eventTime:f,lane:l,tag:s.tag,payload:s.payload,callback:s.callback,next:null},null===h?(u=h=f,c=d):h=h.next=f,o|=l;if(null===(s=s.next)){if(null===(l=r.shared.pending))break;s=l.next,l.next=null,r.lastBaseUpdate=l,r.shared.pending=null}}null===h&&(c=d),r.baseState=c,r.firstBaseUpdate=u,r.lastBaseUpdate=h,Xo|=o,e.lanes=o,e.memoizedState=d}}function fr(e,t,i){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var n=e[t],a=n.callback;if(null!==a){if(n.callback=null,n=i,"function"!=typeof a)throw Error(s(191,a));a.call(n)}}}var pr=(new n.Component).refs;function gr(e,t,i,n){i=null==(i=i(n,t=e.memoizedState))?t:a({},t,i),e.memoizedState=i,0===e.lanes&&(e.updateQueue.baseState=i)}var mr={isMounted:function(e){return!!(e=e._reactInternals)&&$e(e)===e},enqueueSetState:function(e,t,i){e=e._reactInternals;var n=cl(),a=ul(e),r=cr(n,a);r.payload=t,null!=i&&(r.callback=i),ur(e,r),hl(e,a,n)},enqueueReplaceState:function(e,t,i){e=e._reactInternals;var n=cl(),a=ul(e),r=cr(n,a);r.tag=1,r.payload=t,null!=i&&(r.callback=i),ur(e,r),hl(e,a,n)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var i=cl(),n=ul(e),a=cr(i,n);a.tag=2,null!=t&&(a.callback=t),ur(e,a),hl(e,n,i)}};function vr(e,t,i,n,a,r,s){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(n,r,s):!(t.prototype&&t.prototype.isPureReactComponent&&hn(i,n)&&hn(a,r))}function xr(e,t,i){var n=!1,a=ha,r=t.contextType;return"object"==typeof r&&null!==r?r=rr(r):(a=ma(t)?pa:da.current,r=(n=null!=(n=t.contextTypes))?ga(e,a):ha),t=new t(i,r),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=mr,e.stateNode=t,t._reactInternals=e,n&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=r),t}function br(e,t,i,n){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(i,n),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(i,n),t.state!==e&&mr.enqueueReplaceState(t,t.state,null)}function yr(e,t,i,n){var a=e.stateNode;a.props=i,a.state=e.memoizedState,a.refs=pr,or(e);var r=t.contextType;"object"==typeof r&&null!==r?a.context=rr(r):(r=ma(t)?pa:da.current,a.context=ga(e,r)),dr(e,i,a,n),a.state=e.memoizedState,"function"==typeof(r=t.getDerivedStateFromProps)&&(gr(e,t,r,i),a.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(t=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&mr.enqueueReplaceState(a,a.state,null),dr(e,i,a,n),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4)}var wr=Array.isArray;function kr(e,t,i){if(null!==(e=i.ref)&&"function"!=typeof e&&"object"!=typeof e){if(i._owner){if(i=i._owner){if(1!==i.tag)throw Error(s(309));var n=i.stateNode}if(!n)throw Error(s(147,e));var a=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===a?t.ref:(t=function(e){var t=n.refs;t===pr&&(t=n.refs={}),null===e?delete t[a]:t[a]=e},t._stringRef=a,t)}if("string"!=typeof e)throw Error(s(284));if(!i._owner)throw Error(s(290,e))}return e}function Sr(e,t){if("textarea"!==e.type)throw Error(s(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t))}function Ar(e){function t(t,i){if(e){var n=t.lastEffect;null!==n?(n.nextEffect=i,t.lastEffect=i):t.firstEffect=t.lastEffect=i,i.nextEffect=null,i.flags=8}}function i(i,n){if(!e)return null;for(;null!==n;)t(i,n),n=n.sibling;return null}function n(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=Wl(e,t)).index=0,e.sibling=null,e}function r(t,i,n){return t.index=n,e?null!==(n=t.alternate)?(n=n.index)<i?(t.flags=2,i):n:(t.flags=2,i):i}function o(t){return e&&null===t.alternate&&(t.flags=2),t}function l(e,t,i,n){return null===t||6!==t.tag?((t=Ul(i,e.mode,n)).return=e,t):((t=a(t,i)).return=e,t)}function c(e,t,i,n){return null!==t&&t.elementType===i.type?((n=a(t,i.props)).ref=kr(e,t,i),n.return=e,n):((n=jl(i.type,i.key,i.props,null,e.mode,n)).ref=kr(e,t,i),n.return=e,n)}function u(e,t,i,n){return null===t||4!==t.tag||t.stateNode.containerInfo!==i.containerInfo||t.stateNode.implementation!==i.implementation?((t=ql(i,e.mode,n)).return=e,t):((t=a(t,i.children||[])).return=e,t)}function h(e,t,i,n,r){return null===t||7!==t.tag?((t=Vl(i,e.mode,n,r)).return=e,t):((t=a(t,i)).return=e,t)}function d(e,t,i){if("string"==typeof t||"number"==typeof t)return(t=Ul(""+t,e.mode,i)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case k:return(i=jl(t.type,t.key,t.props,null,e.mode,i)).ref=kr(e,null,t),i.return=e,i;case S:return(t=ql(t,e.mode,i)).return=e,t}if(wr(t)||_(t))return(t=Vl(t,e.mode,i,null)).return=e,t;Sr(e,t)}return null}function f(e,t,i,n){var a=null!==t?t.key:null;if("string"==typeof i||"number"==typeof i)return null!==a?null:l(e,t,""+i,n);if("object"==typeof i&&null!==i){switch(i.$$typeof){case k:return i.key===a?i.type===A?h(e,t,i.props.children,n,a):c(e,t,i,n):null;case S:return i.key===a?u(e,t,i,n):null}if(wr(i)||_(i))return null!==a?null:h(e,t,i,n,null);Sr(e,i)}return null}function p(e,t,i,n,a){if("string"==typeof n||"number"==typeof n)return l(t,e=e.get(i)||null,""+n,a);if("object"==typeof n&&null!==n){switch(n.$$typeof){case k:return e=e.get(null===n.key?i:n.key)||null,n.type===A?h(t,e,n.props.children,a,n.key):c(t,e,n,a);case S:return u(t,e=e.get(null===n.key?i:n.key)||null,n,a)}if(wr(n)||_(n))return h(t,e=e.get(i)||null,n,a,null);Sr(t,n)}return null}function g(a,s,o,l){for(var c=null,u=null,h=s,g=s=0,m=null;null!==h&&g<o.length;g++){h.index>g?(m=h,h=null):m=h.sibling;var v=f(a,h,o[g],l);if(null===v){null===h&&(h=m);break}e&&h&&null===v.alternate&&t(a,h),s=r(v,s,g),null===u?c=v:u.sibling=v,u=v,h=m}if(g===o.length)return i(a,h),c;if(null===h){for(;g<o.length;g++)null!==(h=d(a,o[g],l))&&(s=r(h,s,g),null===u?c=h:u.sibling=h,u=h);return c}for(h=n(a,h);g<o.length;g++)null!==(m=p(h,a,g,o[g],l))&&(e&&null!==m.alternate&&h.delete(null===m.key?g:m.key),s=r(m,s,g),null===u?c=m:u.sibling=m,u=m);return e&&h.forEach((function(e){return t(a,e)})),c}function m(a,o,l,c){var u=_(l);if("function"!=typeof u)throw Error(s(150));if(null==(l=u.call(l)))throw Error(s(151));for(var h=u=null,g=o,m=o=0,v=null,x=l.next();null!==g&&!x.done;m++,x=l.next()){g.index>m?(v=g,g=null):v=g.sibling;var b=f(a,g,x.value,c);if(null===b){null===g&&(g=v);break}e&&g&&null===b.alternate&&t(a,g),o=r(b,o,m),null===h?u=b:h.sibling=b,h=b,g=v}if(x.done)return i(a,g),u;if(null===g){for(;!x.done;m++,x=l.next())null!==(x=d(a,x.value,c))&&(o=r(x,o,m),null===h?u=x:h.sibling=x,h=x);return u}for(g=n(a,g);!x.done;m++,x=l.next())null!==(x=p(g,a,m,x.value,c))&&(e&&null!==x.alternate&&g.delete(null===x.key?m:x.key),o=r(x,o,m),null===h?u=x:h.sibling=x,h=x);return e&&g.forEach((function(e){return t(a,e)})),u}return function(e,n,r,l){var c="object"==typeof r&&null!==r&&r.type===A&&null===r.key;c&&(r=r.props.children);var u="object"==typeof r&&null!==r;if(u)switch(r.$$typeof){case k:e:{for(u=r.key,c=n;null!==c;){if(c.key===u){if(7===c.tag){if(r.type===A){i(e,c.sibling),(n=a(c,r.props.children)).return=e,e=n;break e}}else if(c.elementType===r.type){i(e,c.sibling),(n=a(c,r.props)).ref=kr(e,c,r),n.return=e,e=n;break e}i(e,c);break}t(e,c),c=c.sibling}r.type===A?((n=Vl(r.props.children,e.mode,l,r.key)).return=e,e=n):((l=jl(r.type,r.key,r.props,null,e.mode,l)).ref=kr(e,n,r),l.return=e,e=l)}return o(e);case S:e:{for(c=r.key;null!==n;){if(n.key===c){if(4===n.tag&&n.stateNode.containerInfo===r.containerInfo&&n.stateNode.implementation===r.implementation){i(e,n.sibling),(n=a(n,r.children||[])).return=e,e=n;break e}i(e,n);break}t(e,n),n=n.sibling}(n=ql(r,e.mode,l)).return=e,e=n}return o(e)}if("string"==typeof r||"number"==typeof r)return r=""+r,null!==n&&6===n.tag?(i(e,n.sibling),(n=a(n,r)).return=e,e=n):(i(e,n),(n=Ul(r,e.mode,l)).return=e,e=n),o(e);if(wr(r))return g(e,n,r,l);if(_(r))return m(e,n,r,l);if(u&&Sr(e,r),void 0===r&&!c)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(s(152,U(e.type)||"Component"))}return i(e,n)}}var Cr=Ar(!0),Er=Ar(!1),Pr={},Tr=la(Pr),Lr=la(Pr),Ir=la(Pr);function Mr(e){if(e===Pr)throw Error(s(174));return e}function Or(e,t){switch(ua(Ir,t),ua(Lr,e),ua(Tr,Pr),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:fe(null,"");break;default:t=fe(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}ca(Tr),ua(Tr,t)}function zr(){ca(Tr),ca(Lr),ca(Ir)}function Rr(e){Mr(Ir.current);var t=Mr(Tr.current),i=fe(t,e.type);t!==i&&(ua(Lr,e),ua(Tr,i))}function Fr(e){Lr.current===e&&(ca(Tr),ca(Lr))}var Nr=la(0);function Dr(e){for(var t=e;null!==t;){if(13===t.tag){var i=t.memoizedState;if(null!==i&&(null===(i=i.dehydrated)||"$?"===i.data||"$!"===i.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var Xr=null,Yr=null,Hr=!1;function Br(e,t){var i=Bl(5,null,null,0);i.elementType="DELETED",i.type="DELETED",i.stateNode=t,i.return=e,i.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=i,e.lastEffect=i):e.firstEffect=e.lastEffect=i}function _r(e,t){switch(e.tag){case 5:var i=e.type;return null!==(t=1!==t.nodeType||i.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);default:return!1}}function Wr(e){if(Hr){var t=Yr;if(t){var i=t;if(!_r(e,t)){if(!(t=Un(i.nextSibling))||!_r(e,t))return e.flags=-1025&e.flags|2,Hr=!1,void(Xr=e);Br(Xr,i)}Xr=e,Yr=Un(t.firstChild)}else e.flags=-1025&e.flags|2,Hr=!1,Xr=e}}function jr(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Xr=e}function Vr(e){if(e!==Xr)return!1;if(!Hr)return jr(e),Hr=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Wn(t,e.memoizedProps))for(t=Yr;t;)Br(e,t),t=Un(t.nextSibling);if(jr(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(s(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var i=e.data;if("/$"===i){if(0===t){Yr=Un(e.nextSibling);break e}t--}else"$"!==i&&"$!"!==i&&"$?"!==i||t++}e=e.nextSibling}Yr=null}}else Yr=Xr?Un(e.stateNode.nextSibling):null;return!0}function Gr(){Yr=Xr=null,Hr=!1}var Ur=[];function qr(){for(var e=0;e<Ur.length;e++)Ur[e]._workInProgressVersionPrimary=null;Ur.length=0}var $r=w.ReactCurrentDispatcher,Zr=w.ReactCurrentBatchConfig,Qr=0,Kr=null,Jr=null,es=null,ts=!1,is=!1;function ns(){throw Error(s(321))}function as(e,t){if(null===t)return!1;for(var i=0;i<t.length&&i<e.length;i++)if(!cn(e[i],t[i]))return!1;return!0}function rs(e,t,i,n,a,r){if(Qr=r,Kr=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,$r.current=null===e||null===e.memoizedState?Ms:Os,e=i(n,a),is){r=0;do{if(is=!1,!(25>r))throw Error(s(301));r+=1,es=Jr=null,t.updateQueue=null,$r.current=zs,e=i(n,a)}while(is)}if($r.current=Is,t=null!==Jr&&null!==Jr.next,Qr=0,es=Jr=Kr=null,ts=!1,t)throw Error(s(300));return e}function ss(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===es?Kr.memoizedState=es=e:es=es.next=e,es}function os(){if(null===Jr){var e=Kr.alternate;e=null!==e?e.memoizedState:null}else e=Jr.next;var t=null===es?Kr.memoizedState:es.next;if(null!==t)es=t,Jr=e;else{if(null===e)throw Error(s(310));e={memoizedState:(Jr=e).memoizedState,baseState:Jr.baseState,baseQueue:Jr.baseQueue,queue:Jr.queue,next:null},null===es?Kr.memoizedState=es=e:es=es.next=e}return es}function ls(e,t){return"function"==typeof t?t(e):t}function cs(e){var t=os(),i=t.queue;if(null===i)throw Error(s(311));i.lastRenderedReducer=e;var n=Jr,a=n.baseQueue,r=i.pending;if(null!==r){if(null!==a){var o=a.next;a.next=r.next,r.next=o}n.baseQueue=a=r,i.pending=null}if(null!==a){a=a.next,n=n.baseState;var l=o=r=null,c=a;do{var u=c.lane;if((Qr&u)===u)null!==l&&(l=l.next={lane:0,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),n=c.eagerReducer===e?c.eagerState:e(n,c.action);else{var h={lane:u,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===l?(o=l=h,r=n):l=l.next=h,Kr.lanes|=u,Xo|=u}c=c.next}while(null!==c&&c!==a);null===l?r=n:l.next=o,cn(n,t.memoizedState)||(Fs=!0),t.memoizedState=n,t.baseState=r,t.baseQueue=l,i.lastRenderedState=n}return[t.memoizedState,i.dispatch]}function us(e){var t=os(),i=t.queue;if(null===i)throw Error(s(311));i.lastRenderedReducer=e;var n=i.dispatch,a=i.pending,r=t.memoizedState;if(null!==a){i.pending=null;var o=a=a.next;do{r=e(r,o.action),o=o.next}while(o!==a);cn(r,t.memoizedState)||(Fs=!0),t.memoizedState=r,null===t.baseQueue&&(t.baseState=r),i.lastRenderedState=r}return[r,n]}function hs(e,t,i){var n=t._getVersion;n=n(t._source);var a=t._workInProgressVersionPrimary;if(null!==a?e=a===n:(e=e.mutableReadLanes,(e=(Qr&e)===e)&&(t._workInProgressVersionPrimary=n,Ur.push(t))),e)return i(t._source);throw Ur.push(t),Error(s(350))}function ds(e,t,i,n){var a=Io;if(null===a)throw Error(s(349));var r=t._getVersion,o=r(t._source),l=$r.current,c=l.useState((function(){return hs(a,t,i)})),u=c[1],h=c[0];c=es;var d=e.memoizedState,f=d.refs,p=f.getSnapshot,g=d.source;d=d.subscribe;var m=Kr;return e.memoizedState={refs:f,source:t,subscribe:n},l.useEffect((function(){f.getSnapshot=i,f.setSnapshot=u;var e=r(t._source);if(!cn(o,e)){e=i(t._source),cn(h,e)||(u(e),e=ul(m),a.mutableReadLanes|=e&a.pendingLanes),e=a.mutableReadLanes,a.entangledLanes|=e;for(var n=a.entanglements,s=e;0<s;){var l=31-Wt(s),c=1<<l;n[l]|=e,s&=~c}}}),[i,t,n]),l.useEffect((function(){return n(t._source,(function(){var e=f.getSnapshot,i=f.setSnapshot;try{i(e(t._source));var n=ul(m);a.mutableReadLanes|=n&a.pendingLanes}catch(e){i((function(){throw e}))}}))}),[t,n]),cn(p,i)&&cn(g,t)&&cn(d,n)||((e={pending:null,dispatch:null,lastRenderedReducer:ls,lastRenderedState:h}).dispatch=u=Ls.bind(null,Kr,e),c.queue=e,c.baseQueue=null,h=hs(a,t,i),c.memoizedState=c.baseState=h),h}function fs(e,t,i){return ds(os(),e,t,i)}function ps(e){var t=ss();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:ls,lastRenderedState:e}).dispatch=Ls.bind(null,Kr,e),[t.memoizedState,e]}function gs(e,t,i,n){return e={tag:e,create:t,destroy:i,deps:n,next:null},null===(t=Kr.updateQueue)?(t={lastEffect:null},Kr.updateQueue=t,t.lastEffect=e.next=e):null===(i=t.lastEffect)?t.lastEffect=e.next=e:(n=i.next,i.next=e,e.next=n,t.lastEffect=e),e}function ms(e){return e={current:e},ss().memoizedState=e}function vs(){return os().memoizedState}function xs(e,t,i,n){var a=ss();Kr.flags|=e,a.memoizedState=gs(1|t,i,void 0,void 0===n?null:n)}function bs(e,t,i,n){var a=os();n=void 0===n?null:n;var r=void 0;if(null!==Jr){var s=Jr.memoizedState;if(r=s.destroy,null!==n&&as(n,s.deps))return void gs(t,i,r,n)}Kr.flags|=e,a.memoizedState=gs(1|t,i,r,n)}function ys(e,t){return xs(516,4,e,t)}function ws(e,t){return bs(516,4,e,t)}function ks(e,t){return bs(4,2,e,t)}function Ss(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function As(e,t,i){return i=null!=i?i.concat([e]):null,bs(4,2,Ss.bind(null,t,e),i)}function Cs(){}function Es(e,t){var i=os();t=void 0===t?null:t;var n=i.memoizedState;return null!==n&&null!==t&&as(t,n[1])?n[0]:(i.memoizedState=[e,t],e)}function Ps(e,t){var i=os();t=void 0===t?null:t;var n=i.memoizedState;return null!==n&&null!==t&&as(t,n[1])?n[0]:(e=e(),i.memoizedState=[e,t],e)}function Ts(e,t){var i=Wa();Va(98>i?98:i,(function(){e(!0)})),Va(97<i?97:i,(function(){var i=Zr.transition;Zr.transition=1;try{e(!1),t()}finally{Zr.transition=i}}))}function Ls(e,t,i){var n=cl(),a=ul(e),r={lane:a,action:i,eagerReducer:null,eagerState:null,next:null},s=t.pending;if(null===s?r.next=r:(r.next=s.next,s.next=r),t.pending=r,s=e.alternate,e===Kr||null!==s&&s===Kr)is=ts=!0;else{if(0===e.lanes&&(null===s||0===s.lanes)&&null!==(s=t.lastRenderedReducer))try{var o=t.lastRenderedState,l=s(o,i);if(r.eagerReducer=s,r.eagerState=l,cn(l,o))return}catch(e){}hl(e,a,n)}}var Is={readContext:rr,useCallback:ns,useContext:ns,useEffect:ns,useImperativeHandle:ns,useLayoutEffect:ns,useMemo:ns,useReducer:ns,useRef:ns,useState:ns,useDebugValue:ns,useDeferredValue:ns,useTransition:ns,useMutableSource:ns,useOpaqueIdentifier:ns,unstable_isNewReconciler:!1},Ms={readContext:rr,useCallback:function(e,t){return ss().memoizedState=[e,void 0===t?null:t],e},useContext:rr,useEffect:ys,useImperativeHandle:function(e,t,i){return i=null!=i?i.concat([e]):null,xs(4,2,Ss.bind(null,t,e),i)},useLayoutEffect:function(e,t){return xs(4,2,e,t)},useMemo:function(e,t){var i=ss();return t=void 0===t?null:t,e=e(),i.memoizedState=[e,t],e},useReducer:function(e,t,i){var n=ss();return t=void 0!==i?i(t):t,n.memoizedState=n.baseState=t,e=(e=n.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=Ls.bind(null,Kr,e),[n.memoizedState,e]},useRef:ms,useState:ps,useDebugValue:Cs,useDeferredValue:function(e){var t=ps(e),i=t[0],n=t[1];return ys((function(){var t=Zr.transition;Zr.transition=1;try{n(e)}finally{Zr.transition=t}}),[e]),i},useTransition:function(){var e=ps(!1),t=e[0];return ms(e=Ts.bind(null,e[1])),[e,t]},useMutableSource:function(e,t,i){var n=ss();return n.memoizedState={refs:{getSnapshot:t,setSnapshot:null},source:e,subscribe:i},ds(n,e,t,i)},useOpaqueIdentifier:function(){if(Hr){var e=!1,t=function(e){return{$$typeof:F,toString:e,valueOf:e}}((function(){throw e||(e=!0,i("r:"+($n++).toString(36))),Error(s(355))})),i=ps(t)[1];return 0==(2&Kr.mode)&&(Kr.flags|=516,gs(5,(function(){i("r:"+($n++).toString(36))}),void 0,null)),t}return ps(t="r:"+($n++).toString(36)),t},unstable_isNewReconciler:!1},Os={readContext:rr,useCallback:Es,useContext:rr,useEffect:ws,useImperativeHandle:As,useLayoutEffect:ks,useMemo:Ps,useReducer:cs,useRef:vs,useState:function(){return cs(ls)},useDebugValue:Cs,useDeferredValue:function(e){var t=cs(ls),i=t[0],n=t[1];return ws((function(){var t=Zr.transition;Zr.transition=1;try{n(e)}finally{Zr.transition=t}}),[e]),i},useTransition:function(){var e=cs(ls)[0];return[vs().current,e]},useMutableSource:fs,useOpaqueIdentifier:function(){return cs(ls)[0]},unstable_isNewReconciler:!1},zs={readContext:rr,useCallback:Es,useContext:rr,useEffect:ws,useImperativeHandle:As,useLayoutEffect:ks,useMemo:Ps,useReducer:us,useRef:vs,useState:function(){return us(ls)},useDebugValue:Cs,useDeferredValue:function(e){var t=us(ls),i=t[0],n=t[1];return ws((function(){var t=Zr.transition;Zr.transition=1;try{n(e)}finally{Zr.transition=t}}),[e]),i},useTransition:function(){var e=us(ls)[0];return[vs().current,e]},useMutableSource:fs,useOpaqueIdentifier:function(){return us(ls)[0]},unstable_isNewReconciler:!1},Rs=w.ReactCurrentOwner,Fs=!1;function Ns(e,t,i,n){t.child=null===e?Er(t,null,i,n):Cr(t,e.child,i,n)}function Ds(e,t,i,n,a){i=i.render;var r=t.ref;return ar(t,a),n=rs(e,t,i,n,r,a),null===e||Fs?(t.flags|=1,Ns(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~a,to(e,t,a))}function Xs(e,t,i,n,a,r){if(null===e){var s=i.type;return"function"!=typeof s||_l(s)||void 0!==s.defaultProps||null!==i.compare||void 0!==i.defaultProps?((e=jl(i.type,null,n,t,t.mode,r)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=s,Ys(e,t,s,n,a,r))}return s=e.child,0==(a&r)&&(a=s.memoizedProps,(i=null!==(i=i.compare)?i:hn)(a,n)&&e.ref===t.ref)?to(e,t,r):(t.flags|=1,(e=Wl(s,n)).ref=t.ref,e.return=t,t.child=e)}function Ys(e,t,i,n,a,r){if(null!==e&&hn(e.memoizedProps,n)&&e.ref===t.ref){if(Fs=!1,0==(r&a))return t.lanes=e.lanes,to(e,t,r);0!=(16384&e.flags)&&(Fs=!0)}return _s(e,t,i,n,r)}function Hs(e,t,i){var n=t.pendingProps,a=n.children,r=null!==e?e.memoizedState:null;if("hidden"===n.mode||"unstable-defer-without-hiding"===n.mode)if(0==(4&t.mode))t.memoizedState={baseLanes:0},bl(0,i);else{if(0==(1073741824&i))return e=null!==r?r.baseLanes|i:i,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e},bl(0,e),null;t.memoizedState={baseLanes:0},bl(0,null!==r?r.baseLanes:i)}else null!==r?(n=r.baseLanes|i,t.memoizedState=null):n=i,bl(0,n);return Ns(e,t,a,i),t.child}function Bs(e,t){var i=t.ref;(null===e&&null!==i||null!==e&&e.ref!==i)&&(t.flags|=128)}function _s(e,t,i,n,a){var r=ma(i)?pa:da.current;return r=ga(t,r),ar(t,a),i=rs(e,t,i,n,r,a),null===e||Fs?(t.flags|=1,Ns(e,t,i,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~a,to(e,t,a))}function Ws(e,t,i,n,a){if(ma(i)){var r=!0;ya(t)}else r=!1;if(ar(t,a),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),xr(t,i,n),yr(t,i,n,a),n=!0;else if(null===e){var s=t.stateNode,o=t.memoizedProps;s.props=o;var l=s.context,c=i.contextType;c="object"==typeof c&&null!==c?rr(c):ga(t,c=ma(i)?pa:da.current);var u=i.getDerivedStateFromProps,h="function"==typeof u||"function"==typeof s.getSnapshotBeforeUpdate;h||"function"!=typeof s.UNSAFE_componentWillReceiveProps&&"function"!=typeof s.componentWillReceiveProps||(o!==n||l!==c)&&br(t,s,n,c),sr=!1;var d=t.memoizedState;s.state=d,dr(t,n,s,a),l=t.memoizedState,o!==n||d!==l||fa.current||sr?("function"==typeof u&&(gr(t,i,u,n),l=t.memoizedState),(o=sr||vr(t,i,o,n,d,l,c))?(h||"function"!=typeof s.UNSAFE_componentWillMount&&"function"!=typeof s.componentWillMount||("function"==typeof s.componentWillMount&&s.componentWillMount(),"function"==typeof s.UNSAFE_componentWillMount&&s.UNSAFE_componentWillMount()),"function"==typeof s.componentDidMount&&(t.flags|=4)):("function"==typeof s.componentDidMount&&(t.flags|=4),t.memoizedProps=n,t.memoizedState=l),s.props=n,s.state=l,s.context=c,n=o):("function"==typeof s.componentDidMount&&(t.flags|=4),n=!1)}else{s=t.stateNode,lr(e,t),o=t.memoizedProps,c=t.type===t.elementType?o:Za(t.type,o),s.props=c,h=t.pendingProps,d=s.context,l="object"==typeof(l=i.contextType)&&null!==l?rr(l):ga(t,l=ma(i)?pa:da.current);var f=i.getDerivedStateFromProps;(u="function"==typeof f||"function"==typeof s.getSnapshotBeforeUpdate)||"function"!=typeof s.UNSAFE_componentWillReceiveProps&&"function"!=typeof s.componentWillReceiveProps||(o!==h||d!==l)&&br(t,s,n,l),sr=!1,d=t.memoizedState,s.state=d,dr(t,n,s,a);var p=t.memoizedState;o!==h||d!==p||fa.current||sr?("function"==typeof f&&(gr(t,i,f,n),p=t.memoizedState),(c=sr||vr(t,i,c,n,d,p,l))?(u||"function"!=typeof s.UNSAFE_componentWillUpdate&&"function"!=typeof s.componentWillUpdate||("function"==typeof s.componentWillUpdate&&s.componentWillUpdate(n,p,l),"function"==typeof s.UNSAFE_componentWillUpdate&&s.UNSAFE_componentWillUpdate(n,p,l)),"function"==typeof s.componentDidUpdate&&(t.flags|=4),"function"==typeof s.getSnapshotBeforeUpdate&&(t.flags|=256)):("function"!=typeof s.componentDidUpdate||o===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof s.getSnapshotBeforeUpdate||o===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),t.memoizedProps=n,t.memoizedState=p),s.props=n,s.state=p,s.context=l,n=c):("function"!=typeof s.componentDidUpdate||o===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof s.getSnapshotBeforeUpdate||o===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),n=!1)}return js(e,t,i,n,r,a)}function js(e,t,i,n,a,r){Bs(e,t);var s=0!=(64&t.flags);if(!n&&!s)return a&&wa(t,i,!1),to(e,t,r);n=t.stateNode,Rs.current=t;var o=s&&"function"!=typeof i.getDerivedStateFromError?null:n.render();return t.flags|=1,null!==e&&s?(t.child=Cr(t,e.child,null,r),t.child=Cr(t,null,o,r)):Ns(e,t,o,r),t.memoizedState=n.state,a&&wa(t,i,!0),t.child}function Vs(e){var t=e.stateNode;t.pendingContext?xa(0,t.pendingContext,t.pendingContext!==t.context):t.context&&xa(0,t.context,!1),Or(e,t.containerInfo)}var Gs,Us,qs,$s={dehydrated:null,retryLane:0};function Zs(e,t,i){var n,a=t.pendingProps,r=Nr.current,s=!1;return(n=0!=(64&t.flags))||(n=(null===e||null!==e.memoizedState)&&0!=(2&r)),n?(s=!0,t.flags&=-65):null!==e&&null===e.memoizedState||void 0===a.fallback||!0===a.unstable_avoidThisFallback||(r|=1),ua(Nr,1&r),null===e?(void 0!==a.fallback&&Wr(t),e=a.children,r=a.fallback,s?(e=Qs(t,e,r,i),t.child.memoizedState={baseLanes:i},t.memoizedState=$s,e):"number"==typeof a.unstable_expectedLoadTime?(e=Qs(t,e,r,i),t.child.memoizedState={baseLanes:i},t.memoizedState=$s,t.lanes=33554432,e):((i=Gl({mode:"visible",children:e},t.mode,i,null)).return=t,t.child=i)):(e.memoizedState,s?(a=function(e,t,i,n,a){var r=t.mode,s=e.child;e=s.sibling;var o={mode:"hidden",children:i};return 0==(2&r)&&t.child!==s?((i=t.child).childLanes=0,i.pendingProps=o,null!==(s=i.lastEffect)?(t.firstEffect=i.firstEffect,t.lastEffect=s,s.nextEffect=null):t.firstEffect=t.lastEffect=null):i=Wl(s,o),null!==e?n=Wl(e,n):(n=Vl(n,r,a,null)).flags|=2,n.return=t,i.return=t,i.sibling=n,t.child=i,n}(e,t,a.children,a.fallback,i),s=t.child,r=e.child.memoizedState,s.memoizedState=null===r?{baseLanes:i}:{baseLanes:r.baseLanes|i},s.childLanes=e.childLanes&~i,t.memoizedState=$s,a):(i=function(e,t,i,n){var a=e.child;return e=a.sibling,i=Wl(a,{mode:"visible",children:i}),0==(2&t.mode)&&(i.lanes=n),i.return=t,i.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,t.firstEffect=t.lastEffect=e),t.child=i}(e,t,a.children,i),t.memoizedState=null,i))}function Qs(e,t,i,n){var a=e.mode,r=e.child;return t={mode:"hidden",children:t},0==(2&a)&&null!==r?(r.childLanes=0,r.pendingProps=t):r=Gl(t,a,0,null),i=Vl(i,a,n,null),r.return=e,i.return=e,r.sibling=i,e.child=r,i}function Ks(e,t){e.lanes|=t;var i=e.alternate;null!==i&&(i.lanes|=t),nr(e.return,t)}function Js(e,t,i,n,a,r){var s=e.memoizedState;null===s?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:n,tail:i,tailMode:a,lastEffect:r}:(s.isBackwards=t,s.rendering=null,s.renderingStartTime=0,s.last=n,s.tail=i,s.tailMode=a,s.lastEffect=r)}function eo(e,t,i){var n=t.pendingProps,a=n.revealOrder,r=n.tail;if(Ns(e,t,n.children,i),0!=(2&(n=Nr.current)))n=1&n|2,t.flags|=64;else{if(null!==e&&0!=(64&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Ks(e,i);else if(19===e.tag)Ks(e,i);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}n&=1}if(ua(Nr,n),0==(2&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(i=t.child,a=null;null!==i;)null!==(e=i.alternate)&&null===Dr(e)&&(a=i),i=i.sibling;null===(i=a)?(a=t.child,t.child=null):(a=i.sibling,i.sibling=null),Js(t,!1,a,i,r,t.lastEffect);break;case"backwards":for(i=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===Dr(e)){t.child=a;break}e=a.sibling,a.sibling=i,i=a,a=e}Js(t,!0,i,null,r,t.lastEffect);break;case"together":Js(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function to(e,t,i){if(null!==e&&(t.dependencies=e.dependencies),Xo|=t.lanes,0!=(i&t.childLanes)){if(null!==e&&t.child!==e.child)throw Error(s(153));if(null!==t.child){for(i=Wl(e=t.child,e.pendingProps),t.child=i,i.return=t;null!==e.sibling;)e=e.sibling,(i=i.sibling=Wl(e,e.pendingProps)).return=t;i.sibling=null}return t.child}return null}function io(e,t){if(!Hr)switch(e.tailMode){case"hidden":t=e.tail;for(var i=null;null!==t;)null!==t.alternate&&(i=t),t=t.sibling;null===i?e.tail=null:i.sibling=null;break;case"collapsed":i=e.tail;for(var n=null;null!==i;)null!==i.alternate&&(n=i),i=i.sibling;null===n?t||null===e.tail?e.tail=null:e.tail.sibling=null:n.sibling=null}}function no(e,t,i){var n=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:case 17:return ma(t.type)&&va(),null;case 3:return zr(),ca(fa),ca(da),qr(),(n=t.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||(Vr(t)?t.flags|=4:n.hydrate||(t.flags|=256)),null;case 5:Fr(t);var r=Mr(Ir.current);if(i=t.type,null!==e&&null!=t.stateNode)Us(e,t,i,n),e.ref!==t.ref&&(t.flags|=128);else{if(!n){if(null===t.stateNode)throw Error(s(166));return null}if(e=Mr(Tr.current),Vr(t)){n=t.stateNode,i=t.type;var o=t.memoizedProps;switch(n[Qn]=t,n[Kn]=o,i){case"dialog":Ln("cancel",n),Ln("close",n);break;case"iframe":case"object":case"embed":Ln("load",n);break;case"video":case"audio":for(e=0;e<Cn.length;e++)Ln(Cn[e],n);break;case"source":Ln("error",n);break;case"img":case"image":case"link":Ln("error",n),Ln("load",n);break;case"details":Ln("toggle",n);break;case"input":ee(n,o),Ln("invalid",n);break;case"select":n._wrapperState={wasMultiple:!!o.multiple},Ln("invalid",n);break;case"textarea":le(n,o),Ln("invalid",n)}for(var c in Se(i,o),e=null,o)o.hasOwnProperty(c)&&(r=o[c],"children"===c?"string"==typeof r?n.textContent!==r&&(e=["children",r]):"number"==typeof r&&n.textContent!==""+r&&(e=["children",""+r]):l.hasOwnProperty(c)&&null!=r&&"onScroll"===c&&Ln("scroll",n));switch(i){case"input":Z(n),ne(n,o,!0);break;case"textarea":Z(n),ue(n);break;case"select":case"option":break;default:"function"==typeof o.onClick&&(n.onclick=Yn)}n=e,t.updateQueue=n,null!==n&&(t.flags|=4)}else{switch(c=9===r.nodeType?r:r.ownerDocument,e===he&&(e=de(i)),e===he?"script"===i?((e=c.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof n.is?e=c.createElement(i,{is:n.is}):(e=c.createElement(i),"select"===i&&(c=e,n.multiple?c.multiple=!0:n.size&&(c.size=n.size))):e=c.createElementNS(e,i),e[Qn]=t,e[Kn]=n,Gs(e,t),t.stateNode=e,c=Ae(i,n),i){case"dialog":Ln("cancel",e),Ln("close",e),r=n;break;case"iframe":case"object":case"embed":Ln("load",e),r=n;break;case"video":case"audio":for(r=0;r<Cn.length;r++)Ln(Cn[r],e);r=n;break;case"source":Ln("error",e),r=n;break;case"img":case"image":case"link":Ln("error",e),Ln("load",e),r=n;break;case"details":Ln("toggle",e),r=n;break;case"input":ee(e,n),r=J(e,n),Ln("invalid",e);break;case"option":r=re(e,n);break;case"select":e._wrapperState={wasMultiple:!!n.multiple},r=a({},n,{value:void 0}),Ln("invalid",e);break;case"textarea":le(e,n),r=oe(e,n),Ln("invalid",e);break;default:r=n}Se(i,r);var u=r;for(o in u)if(u.hasOwnProperty(o)){var h=u[o];"style"===o?we(e,h):"dangerouslySetInnerHTML"===o?null!=(h=h?h.__html:void 0)&&me(e,h):"children"===o?"string"==typeof h?("textarea"!==i||""!==h)&&ve(e,h):"number"==typeof h&&ve(e,""+h):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(l.hasOwnProperty(o)?null!=h&&"onScroll"===o&&Ln("scroll",e):null!=h&&y(e,o,h,c))}switch(i){case"input":Z(e),ne(e,n,!1);break;case"textarea":Z(e),ue(e);break;case"option":null!=n.value&&e.setAttribute("value",""+q(n.value));break;case"select":e.multiple=!!n.multiple,null!=(o=n.value)?se(e,!!n.multiple,o,!1):null!=n.defaultValue&&se(e,!!n.multiple,n.defaultValue,!0);break;default:"function"==typeof r.onClick&&(e.onclick=Yn)}_n(i,n)&&(t.flags|=4)}null!==t.ref&&(t.flags|=128)}return null;case 6:if(e&&null!=t.stateNode)qs(0,t,e.memoizedProps,n);else{if("string"!=typeof n&&null===t.stateNode)throw Error(s(166));i=Mr(Ir.current),Mr(Tr.current),Vr(t)?(n=t.stateNode,i=t.memoizedProps,n[Qn]=t,n.nodeValue!==i&&(t.flags|=4)):((n=(9===i.nodeType?i:i.ownerDocument).createTextNode(n))[Qn]=t,t.stateNode=n)}return null;case 13:return ca(Nr),n=t.memoizedState,0!=(64&t.flags)?(t.lanes=i,t):(n=null!==n,i=!1,null===e?void 0!==t.memoizedProps.fallback&&Vr(t):i=null!==e.memoizedState,n&&!i&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Nr.current)?0===Fo&&(Fo=3):(0!==Fo&&3!==Fo||(Fo=4),null===Io||0==(134217727&Xo)&&0==(134217727&Yo)||gl(Io,Oo))),(n||i)&&(t.flags|=4),null);case 4:return zr(),null===e&&Mn(t.stateNode.containerInfo),null;case 10:return ir(t),null;case 19:if(ca(Nr),null===(n=t.memoizedState))return null;if(o=0!=(64&t.flags),null===(c=n.rendering))if(o)io(n,!1);else{if(0!==Fo||null!==e&&0!=(64&e.flags))for(e=t.child;null!==e;){if(null!==(c=Dr(e))){for(t.flags|=64,io(n,!1),null!==(o=c.updateQueue)&&(t.updateQueue=o,t.flags|=4),null===n.lastEffect&&(t.firstEffect=null),t.lastEffect=n.lastEffect,n=i,i=t.child;null!==i;)e=n,(o=i).flags&=2,o.nextEffect=null,o.firstEffect=null,o.lastEffect=null,null===(c=o.alternate)?(o.childLanes=0,o.lanes=e,o.child=null,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=c.childLanes,o.lanes=c.lanes,o.child=c.child,o.memoizedProps=c.memoizedProps,o.memoizedState=c.memoizedState,o.updateQueue=c.updateQueue,o.type=c.type,e=c.dependencies,o.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),i=i.sibling;return ua(Nr,1&Nr.current|2),t.child}e=e.sibling}null!==n.tail&&_a()>Wo&&(t.flags|=64,o=!0,io(n,!1),t.lanes=33554432)}else{if(!o)if(null!==(e=Dr(c))){if(t.flags|=64,o=!0,null!==(i=e.updateQueue)&&(t.updateQueue=i,t.flags|=4),io(n,!0),null===n.tail&&"hidden"===n.tailMode&&!c.alternate&&!Hr)return null!==(t=t.lastEffect=n.lastEffect)&&(t.nextEffect=null),null}else 2*_a()-n.renderingStartTime>Wo&&1073741824!==i&&(t.flags|=64,o=!0,io(n,!1),t.lanes=33554432);n.isBackwards?(c.sibling=t.child,t.child=c):(null!==(i=n.last)?i.sibling=c:t.child=c,n.last=c)}return null!==n.tail?(i=n.tail,n.rendering=i,n.tail=i.sibling,n.lastEffect=t.lastEffect,n.renderingStartTime=_a(),i.sibling=null,t=Nr.current,ua(Nr,o?1&t|2:1&t),i):null;case 23:case 24:return yl(),null!==e&&null!==e.memoizedState!=(null!==t.memoizedState)&&"unstable-defer-without-hiding"!==n.mode&&(t.flags|=4),null}throw Error(s(156,t.tag))}function ao(e){switch(e.tag){case 1:ma(e.type)&&va();var t=e.flags;return 4096&t?(e.flags=-4097&t|64,e):null;case 3:if(zr(),ca(fa),ca(da),qr(),0!=(64&(t=e.flags)))throw Error(s(285));return e.flags=-4097&t|64,e;case 5:return Fr(e),null;case 13:return ca(Nr),4096&(t=e.flags)?(e.flags=-4097&t|64,e):null;case 19:return ca(Nr),null;case 4:return zr(),null;case 10:return ir(e),null;case 23:case 24:return yl(),null;default:return null}}function ro(e,t){try{var i="",n=t;do{i+=G(n),n=n.return}while(n);var a=i}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:a}}function so(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}Gs=function(e,t){for(var i=t.child;null!==i;){if(5===i.tag||6===i.tag)e.appendChild(i.stateNode);else if(4!==i.tag&&null!==i.child){i.child.return=i,i=i.child;continue}if(i===t)break;for(;null===i.sibling;){if(null===i.return||i.return===t)return;i=i.return}i.sibling.return=i.return,i=i.sibling}},Us=function(e,t,i,n){var r=e.memoizedProps;if(r!==n){e=t.stateNode,Mr(Tr.current);var s,o=null;switch(i){case"input":r=J(e,r),n=J(e,n),o=[];break;case"option":r=re(e,r),n=re(e,n),o=[];break;case"select":r=a({},r,{value:void 0}),n=a({},n,{value:void 0}),o=[];break;case"textarea":r=oe(e,r),n=oe(e,n),o=[];break;default:"function"!=typeof r.onClick&&"function"==typeof n.onClick&&(e.onclick=Yn)}for(h in Se(i,n),i=null,r)if(!n.hasOwnProperty(h)&&r.hasOwnProperty(h)&&null!=r[h])if("style"===h){var c=r[h];for(s in c)c.hasOwnProperty(s)&&(i||(i={}),i[s]="")}else"dangerouslySetInnerHTML"!==h&&"children"!==h&&"suppressContentEditableWarning"!==h&&"suppressHydrationWarning"!==h&&"autoFocus"!==h&&(l.hasOwnProperty(h)?o||(o=[]):(o=o||[]).push(h,null));for(h in n){var u=n[h];if(c=null!=r?r[h]:void 0,n.hasOwnProperty(h)&&u!==c&&(null!=u||null!=c))if("style"===h)if(c){for(s in c)!c.hasOwnProperty(s)||u&&u.hasOwnProperty(s)||(i||(i={}),i[s]="");for(s in u)u.hasOwnProperty(s)&&c[s]!==u[s]&&(i||(i={}),i[s]=u[s])}else i||(o||(o=[]),o.push(h,i)),i=u;else"dangerouslySetInnerHTML"===h?(u=u?u.__html:void 0,c=c?c.__html:void 0,null!=u&&c!==u&&(o=o||[]).push(h,u)):"children"===h?"string"!=typeof u&&"number"!=typeof u||(o=o||[]).push(h,""+u):"suppressContentEditableWarning"!==h&&"suppressHydrationWarning"!==h&&(l.hasOwnProperty(h)?(null!=u&&"onScroll"===h&&Ln("scroll",e),o||c===u||(o=[])):"object"==typeof u&&null!==u&&u.$$typeof===F?u.toString():(o=o||[]).push(h,u))}i&&(o=o||[]).push("style",i);var h=o;(t.updateQueue=h)&&(t.flags|=4)}},qs=function(e,t,i,n){i!==n&&(t.flags|=4)};var oo="function"==typeof WeakMap?WeakMap:Map;function lo(e,t,i){(i=cr(-1,i)).tag=3,i.payload={element:null};var n=t.value;return i.callback=function(){Uo||(Uo=!0,qo=n),so(0,t)},i}function co(e,t,i){(i=cr(-1,i)).tag=3;var n=e.type.getDerivedStateFromError;if("function"==typeof n){var a=t.value;i.payload=function(){return so(0,t),n(a)}}var r=e.stateNode;return null!==r&&"function"==typeof r.componentDidCatch&&(i.callback=function(){"function"!=typeof n&&(null===$o?$o=new Set([this]):$o.add(this),so(0,t));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),i}var uo="function"==typeof WeakSet?WeakSet:Set;function ho(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Dl(e,t)}else t.current=null}function fo(e,t){switch(t.tag){case 0:case 11:case 15:case 22:case 5:case 6:case 4:case 17:return;case 1:if(256&t.flags&&null!==e){var i=e.memoizedProps,n=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?i:Za(t.type,i),n),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:return void(256&t.flags&&Gn(t.stateNode.containerInfo))}throw Error(s(163))}function po(e,t,i){switch(i.tag){case 0:case 11:case 15:case 22:if(null!==(t=null!==(t=i.updateQueue)?t.lastEffect:null)){e=t=t.next;do{if(3==(3&e.tag)){var n=e.create;e.destroy=n()}e=e.next}while(e!==t)}if(null!==(t=null!==(t=i.updateQueue)?t.lastEffect:null)){e=t=t.next;do{var a=e;n=a.next,0!=(4&(a=a.tag))&&0!=(1&a)&&(Rl(i,e),zl(i,e)),e=n}while(e!==t)}return;case 1:return e=i.stateNode,4&i.flags&&(null===t?e.componentDidMount():(n=i.elementType===i.type?t.memoizedProps:Za(i.type,t.memoizedProps),e.componentDidUpdate(n,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(t=i.updateQueue)&&fr(i,t,e));case 3:if(null!==(t=i.updateQueue)){if(e=null,null!==i.child)switch(i.child.tag){case 5:case 1:e=i.child.stateNode}fr(i,t,e)}return;case 5:return e=i.stateNode,void(null===t&&4&i.flags&&_n(i.type,i.memoizedProps)&&e.focus());case 6:case 4:case 12:case 19:case 17:case 20:case 21:case 23:case 24:return;case 13:return void(null===i.memoizedState&&(i=i.alternate,null!==i&&(i=i.memoizedState,null!==i&&(i=i.dehydrated,null!==i&&wt(i)))))}throw Error(s(163))}function go(e,t){for(var i=e;;){if(5===i.tag){var n=i.stateNode;if(t)"function"==typeof(n=n.style).setProperty?n.setProperty("display","none","important"):n.display="none";else{n=i.stateNode;var a=i.memoizedProps.style;a=null!=a&&a.hasOwnProperty("display")?a.display:null,n.style.display=ye("display",a)}}else if(6===i.tag)i.stateNode.nodeValue=t?"":i.memoizedProps;else if((23!==i.tag&&24!==i.tag||null===i.memoizedState||i===e)&&null!==i.child){i.child.return=i,i=i.child;continue}if(i===e)break;for(;null===i.sibling;){if(null===i.return||i.return===e)return;i=i.return}i.sibling.return=i.return,i=i.sibling}}function mo(e,t){if(Sa&&"function"==typeof Sa.onCommitFiberUnmount)try{Sa.onCommitFiberUnmount(ka,t)}catch(e){}switch(t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var i=e=e.next;do{var n=i,a=n.destroy;if(n=n.tag,void 0!==a)if(0!=(4&n))Rl(t,i);else{n=t;try{a()}catch(e){Dl(n,e)}}i=i.next}while(i!==e)}break;case 1:if(ho(t),"function"==typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){Dl(t,e)}break;case 5:ho(t);break;case 4:ko(e,t)}}function vo(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function xo(e){return 5===e.tag||3===e.tag||4===e.tag}function bo(e){e:{for(var t=e.return;null!==t;){if(xo(t))break e;t=t.return}throw Error(s(160))}var i=t;switch(t=i.stateNode,i.tag){case 5:var n=!1;break;case 3:case 4:t=t.containerInfo,n=!0;break;default:throw Error(s(161))}16&i.flags&&(ve(t,""),i.flags&=-17);e:t:for(i=e;;){for(;null===i.sibling;){if(null===i.return||xo(i.return)){i=null;break e}i=i.return}for(i.sibling.return=i.return,i=i.sibling;5!==i.tag&&6!==i.tag&&18!==i.tag;){if(2&i.flags)continue t;if(null===i.child||4===i.tag)continue t;i.child.return=i,i=i.child}if(!(2&i.flags)){i=i.stateNode;break e}}n?yo(e,i,t):wo(e,i,t)}function yo(e,t,i){var n=e.tag,a=5===n||6===n;if(a)e=a?e.stateNode:e.stateNode.instance,t?8===i.nodeType?i.parentNode.insertBefore(e,t):i.insertBefore(e,t):(8===i.nodeType?(t=i.parentNode).insertBefore(e,i):(t=i).appendChild(e),null!=(i=i._reactRootContainer)||null!==t.onclick||(t.onclick=Yn));else if(4!==n&&null!==(e=e.child))for(yo(e,t,i),e=e.sibling;null!==e;)yo(e,t,i),e=e.sibling}function wo(e,t,i){var n=e.tag,a=5===n||6===n;if(a)e=a?e.stateNode:e.stateNode.instance,t?i.insertBefore(e,t):i.appendChild(e);else if(4!==n&&null!==(e=e.child))for(wo(e,t,i),e=e.sibling;null!==e;)wo(e,t,i),e=e.sibling}function ko(e,t){for(var i,n,a=t,r=!1;;){if(!r){r=a.return;e:for(;;){if(null===r)throw Error(s(160));switch(i=r.stateNode,r.tag){case 5:n=!1;break e;case 3:case 4:i=i.containerInfo,n=!0;break e}r=r.return}r=!0}if(5===a.tag||6===a.tag){e:for(var o=e,l=a,c=l;;)if(mo(o,c),null!==c.child&&4!==c.tag)c.child.return=c,c=c.child;else{if(c===l)break e;for(;null===c.sibling;){if(null===c.return||c.return===l)break e;c=c.return}c.sibling.return=c.return,c=c.sibling}n?(o=i,l=a.stateNode,8===o.nodeType?o.parentNode.removeChild(l):o.removeChild(l)):i.removeChild(a.stateNode)}else if(4===a.tag){if(null!==a.child){i=a.stateNode.containerInfo,n=!0,a.child.return=a,a=a.child;continue}}else if(mo(e,a),null!==a.child){a.child.return=a,a=a.child;continue}if(a===t)break;for(;null===a.sibling;){if(null===a.return||a.return===t)return;4===(a=a.return).tag&&(r=!1)}a.sibling.return=a.return,a=a.sibling}}function So(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:var i=t.updateQueue;if(null!==(i=null!==i?i.lastEffect:null)){var n=i=i.next;do{3==(3&n.tag)&&(e=n.destroy,n.destroy=void 0,void 0!==e&&e()),n=n.next}while(n!==i)}return;case 1:case 12:case 17:return;case 5:if(null!=(i=t.stateNode)){n=t.memoizedProps;var a=null!==e?e.memoizedProps:n;e=t.type;var r=t.updateQueue;if(t.updateQueue=null,null!==r){for(i[Kn]=n,"input"===e&&"radio"===n.type&&null!=n.name&&te(i,n),Ae(e,a),t=Ae(e,n),a=0;a<r.length;a+=2){var o=r[a],l=r[a+1];"style"===o?we(i,l):"dangerouslySetInnerHTML"===o?me(i,l):"children"===o?ve(i,l):y(i,o,l,t)}switch(e){case"input":ie(i,n);break;case"textarea":ce(i,n);break;case"select":e=i._wrapperState.wasMultiple,i._wrapperState.wasMultiple=!!n.multiple,null!=(r=n.value)?se(i,!!n.multiple,r,!1):e!==!!n.multiple&&(null!=n.defaultValue?se(i,!!n.multiple,n.defaultValue,!0):se(i,!!n.multiple,n.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(s(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((i=t.stateNode).hydrate&&(i.hydrate=!1,wt(i.containerInfo)));case 13:return null!==t.memoizedState&&(_o=_a(),go(t.child,!0)),void Ao(t);case 19:return void Ao(t);case 23:case 24:return void go(t,null!==t.memoizedState)}throw Error(s(163))}function Ao(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var i=e.stateNode;null===i&&(i=e.stateNode=new uo),t.forEach((function(t){var n=Yl.bind(null,e,t);i.has(t)||(i.add(t),t.then(n,n))}))}}function Co(e,t){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&null!==(t=t.memoizedState)&&null===t.dehydrated}var Eo=Math.ceil,Po=w.ReactCurrentDispatcher,To=w.ReactCurrentOwner,Lo=0,Io=null,Mo=null,Oo=0,zo=0,Ro=la(0),Fo=0,No=null,Do=0,Xo=0,Yo=0,Ho=0,Bo=null,_o=0,Wo=1/0;function jo(){Wo=_a()+500}var Vo,Go=null,Uo=!1,qo=null,$o=null,Zo=!1,Qo=null,Ko=90,Jo=[],el=[],tl=null,il=0,nl=null,al=-1,rl=0,sl=0,ol=null,ll=!1;function cl(){return 0!=(48&Lo)?_a():-1!==al?al:al=_a()}function ul(e){if(0==(2&(e=e.mode)))return 1;if(0==(4&e))return 99===Wa()?1:2;if(0===rl&&(rl=Do),0!==$a.transition){0!==sl&&(sl=null!==Bo?Bo.pendingLanes:0),e=rl;var t=4186112&~sl;return 0==(t&=-t)&&0==(t=(e=4186112&~e)&-e)&&(t=8192),t}return e=Wa(),e=Yt(0!=(4&Lo)&&98===e?12:e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),rl)}function hl(e,t,i){if(50<il)throw il=0,nl=null,Error(s(185));if(null===(e=dl(e,t)))return null;_t(e,t,i),e===Io&&(Yo|=t,4===Fo&&gl(e,Oo));var n=Wa();1===t?0!=(8&Lo)&&0==(48&Lo)?ml(e):(fl(e,i),0===Lo&&(jo(),Ua())):(0==(4&Lo)||98!==n&&99!==n||(null===tl?tl=new Set([e]):tl.add(e)),fl(e,i)),Bo=e}function dl(e,t){e.lanes|=t;var i=e.alternate;for(null!==i&&(i.lanes|=t),i=e,e=e.return;null!==e;)e.childLanes|=t,null!==(i=e.alternate)&&(i.childLanes|=t),i=e,e=e.return;return 3===i.tag?i.stateNode:null}function fl(e,t){for(var i=e.callbackNode,n=e.suspendedLanes,a=e.pingedLanes,r=e.expirationTimes,o=e.pendingLanes;0<o;){var l=31-Wt(o),c=1<<l,u=r[l];if(-1===u){if(0==(c&n)||0!=(c&a)){u=t,Nt(c);var h=Ft;r[l]=10<=h?u+250:6<=h?u+5e3:-1}}else u<=t&&(e.expiredLanes|=c);o&=~c}if(n=Dt(e,e===Io?Oo:0),t=Ft,0===n)null!==i&&(i!==Na&&Ea(i),e.callbackNode=null,e.callbackPriority=0);else{if(null!==i){if(e.callbackPriority===t)return;i!==Na&&Ea(i)}15===t?(i=ml.bind(null,e),null===Xa?(Xa=[i],Ya=Ca(Ma,qa)):Xa.push(i),i=Na):14===t?i=Ga(99,ml.bind(null,e)):(i=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(s(358,e))}}(t),i=Ga(i,pl.bind(null,e))),e.callbackPriority=t,e.callbackNode=i}}function pl(e){if(al=-1,sl=rl=0,0!=(48&Lo))throw Error(s(327));var t=e.callbackNode;if(Ol()&&e.callbackNode!==t)return null;var i=Dt(e,e===Io?Oo:0);if(0===i)return null;var n=i,a=Lo;Lo|=16;var r=Sl();for(Io===e&&Oo===n||(jo(),wl(e,n));;)try{El();break}catch(t){kl(e,t)}if(tr(),Po.current=r,Lo=a,null!==Mo?n=0:(Io=null,Oo=0,n=Fo),0!=(Do&Yo))wl(e,0);else if(0!==n){if(2===n&&(Lo|=64,e.hydrate&&(e.hydrate=!1,Gn(e.containerInfo)),0!==(i=Xt(e))&&(n=Al(e,i))),1===n)throw t=No,wl(e,0),gl(e,i),fl(e,_a()),t;switch(e.finishedWork=e.current.alternate,e.finishedLanes=i,n){case 0:case 1:throw Error(s(345));case 2:case 5:Ll(e);break;case 3:if(gl(e,i),(62914560&i)===i&&10<(n=_o+500-_a())){if(0!==Dt(e,0))break;if(((a=e.suspendedLanes)&i)!==i){cl(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=jn(Ll.bind(null,e),n);break}Ll(e);break;case 4:if(gl(e,i),(4186112&i)===i)break;for(n=e.eventTimes,a=-1;0<i;){var o=31-Wt(i);r=1<<o,(o=n[o])>a&&(a=o),i&=~r}if(i=a,10<(i=(120>(i=_a()-i)?120:480>i?480:1080>i?1080:1920>i?1920:3e3>i?3e3:4320>i?4320:1960*Eo(i/1960))-i)){e.timeoutHandle=jn(Ll.bind(null,e),i);break}Ll(e);break;default:throw Error(s(329))}}return fl(e,_a()),e.callbackNode===t?pl.bind(null,e):null}function gl(e,t){for(t&=~Ho,t&=~Yo,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var i=31-Wt(t),n=1<<i;e[i]=-1,t&=~n}}function ml(e){if(0!=(48&Lo))throw Error(s(327));if(Ol(),e===Io&&0!=(e.expiredLanes&Oo)){var t=Oo,i=Al(e,t);0!=(Do&Yo)&&(i=Al(e,t=Dt(e,t)))}else i=Al(e,t=Dt(e,0));if(0!==e.tag&&2===i&&(Lo|=64,e.hydrate&&(e.hydrate=!1,Gn(e.containerInfo)),0!==(t=Xt(e))&&(i=Al(e,t))),1===i)throw i=No,wl(e,0),gl(e,t),fl(e,_a()),i;return e.finishedWork=e.current.alternate,e.finishedLanes=t,Ll(e),fl(e,_a()),null}function vl(e,t){var i=Lo;Lo|=1;try{return e(t)}finally{0===(Lo=i)&&(jo(),Ua())}}function xl(e,t){var i=Lo;Lo&=-2,Lo|=8;try{return e(t)}finally{0===(Lo=i)&&(jo(),Ua())}}function bl(e,t){ua(Ro,zo),zo|=t,Do|=t}function yl(){zo=Ro.current,ca(Ro)}function wl(e,t){e.finishedWork=null,e.finishedLanes=0;var i=e.timeoutHandle;if(-1!==i&&(e.timeoutHandle=-1,Vn(i)),null!==Mo)for(i=Mo.return;null!==i;){var n=i;switch(n.tag){case 1:null!=(n=n.type.childContextTypes)&&va();break;case 3:zr(),ca(fa),ca(da),qr();break;case 5:Fr(n);break;case 4:zr();break;case 13:case 19:ca(Nr);break;case 10:ir(n);break;case 23:case 24:yl()}i=i.return}Io=e,Mo=Wl(e.current,null),Oo=zo=Do=t,Fo=0,No=null,Ho=Yo=Xo=0}function kl(e,t){for(;;){var i=Mo;try{if(tr(),$r.current=Is,ts){for(var n=Kr.memoizedState;null!==n;){var a=n.queue;null!==a&&(a.pending=null),n=n.next}ts=!1}if(Qr=0,es=Jr=Kr=null,is=!1,To.current=null,null===i||null===i.return){Fo=1,No=t,Mo=null;break}e:{var r=e,s=i.return,o=i,l=t;if(t=Oo,o.flags|=2048,o.firstEffect=o.lastEffect=null,null!==l&&"object"==typeof l&&"function"==typeof l.then){var c=l;if(0==(2&o.mode)){var u=o.alternate;u?(o.updateQueue=u.updateQueue,o.memoizedState=u.memoizedState,o.lanes=u.lanes):(o.updateQueue=null,o.memoizedState=null)}var h=0!=(1&Nr.current),d=s;do{var f;if(f=13===d.tag){var p=d.memoizedState;if(null!==p)f=null!==p.dehydrated;else{var g=d.memoizedProps;f=void 0!==g.fallback&&(!0!==g.unstable_avoidThisFallback||!h)}}if(f){var m=d.updateQueue;if(null===m){var v=new Set;v.add(c),d.updateQueue=v}else m.add(c);if(0==(2&d.mode)){if(d.flags|=64,o.flags|=16384,o.flags&=-2981,1===o.tag)if(null===o.alternate)o.tag=17;else{var x=cr(-1,1);x.tag=2,ur(o,x)}o.lanes|=1;break e}l=void 0,o=t;var b=r.pingCache;if(null===b?(b=r.pingCache=new oo,l=new Set,b.set(c,l)):void 0===(l=b.get(c))&&(l=new Set,b.set(c,l)),!l.has(o)){l.add(o);var y=Xl.bind(null,r,c,o);c.then(y,y)}d.flags|=4096,d.lanes=t;break e}d=d.return}while(null!==d);l=Error((U(o.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==Fo&&(Fo=2),l=ro(l,o),d=s;do{switch(d.tag){case 3:r=l,d.flags|=4096,t&=-t,d.lanes|=t,hr(d,lo(0,r,t));break e;case 1:r=l;var w=d.type,k=d.stateNode;if(0==(64&d.flags)&&("function"==typeof w.getDerivedStateFromError||null!==k&&"function"==typeof k.componentDidCatch&&(null===$o||!$o.has(k)))){d.flags|=4096,t&=-t,d.lanes|=t,hr(d,co(d,r,t));break e}}d=d.return}while(null!==d)}Tl(i)}catch(e){t=e,Mo===i&&null!==i&&(Mo=i=i.return);continue}break}}function Sl(){var e=Po.current;return Po.current=Is,null===e?Is:e}function Al(e,t){var i=Lo;Lo|=16;var n=Sl();for(Io===e&&Oo===t||wl(e,t);;)try{Cl();break}catch(t){kl(e,t)}if(tr(),Lo=i,Po.current=n,null!==Mo)throw Error(s(261));return Io=null,Oo=0,Fo}function Cl(){for(;null!==Mo;)Pl(Mo)}function El(){for(;null!==Mo&&!Pa();)Pl(Mo)}function Pl(e){var t=Vo(e.alternate,e,zo);e.memoizedProps=e.pendingProps,null===t?Tl(e):Mo=t,To.current=null}function Tl(e){var t=e;do{var i=t.alternate;if(e=t.return,0==(2048&t.flags)){if(null!==(i=no(i,t,zo)))return void(Mo=i);if(24!==(i=t).tag&&23!==i.tag||null===i.memoizedState||0!=(1073741824&zo)||0==(4&i.mode)){for(var n=0,a=i.child;null!==a;)n|=a.lanes|a.childLanes,a=a.sibling;i.childLanes=n}null!==e&&0==(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=t.firstEffect),e.lastEffect=t.lastEffect),1<t.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=t:e.firstEffect=t,e.lastEffect=t))}else{if(null!==(i=ao(t)))return i.flags&=2047,void(Mo=i);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(t=t.sibling))return void(Mo=t);Mo=t=e}while(null!==t);0===Fo&&(Fo=5)}function Ll(e){var t=Wa();return Va(99,Il.bind(null,e,t)),null}function Il(e,t){do{Ol()}while(null!==Qo);if(0!=(48&Lo))throw Error(s(327));var i=e.finishedWork;if(null===i)return null;if(e.finishedWork=null,e.finishedLanes=0,i===e.current)throw Error(s(177));e.callbackNode=null;var n=i.lanes|i.childLanes,a=n,r=e.pendingLanes&~a;e.pendingLanes=a,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=a,e.mutableReadLanes&=a,e.entangledLanes&=a,a=e.entanglements;for(var o=e.eventTimes,l=e.expirationTimes;0<r;){var c=31-Wt(r),u=1<<c;a[c]=0,o[c]=-1,l[c]=-1,r&=~u}if(null!==tl&&0==(24&n)&&tl.has(e)&&tl.delete(e),e===Io&&(Mo=Io=null,Oo=0),1<i.flags?null!==i.lastEffect?(i.lastEffect.nextEffect=i,n=i.firstEffect):n=i:n=i.firstEffect,null!==n){if(a=Lo,Lo|=32,To.current=null,Hn=qt,mn(o=gn())){if("selectionStart"in o)l={start:o.selectionStart,end:o.selectionEnd};else e:if(l=(l=o.ownerDocument)&&l.defaultView||window,(u=l.getSelection&&l.getSelection())&&0!==u.rangeCount){l=u.anchorNode,r=u.anchorOffset,c=u.focusNode,u=u.focusOffset;try{l.nodeType,c.nodeType}catch(e){l=null;break e}var h=0,d=-1,f=-1,p=0,g=0,m=o,v=null;t:for(;;){for(var x;m!==l||0!==r&&3!==m.nodeType||(d=h+r),m!==c||0!==u&&3!==m.nodeType||(f=h+u),3===m.nodeType&&(h+=m.nodeValue.length),null!==(x=m.firstChild);)v=m,m=x;for(;;){if(m===o)break t;if(v===l&&++p===r&&(d=h),v===c&&++g===u&&(f=h),null!==(x=m.nextSibling))break;v=(m=v).parentNode}m=x}l=-1===d||-1===f?null:{start:d,end:f}}else l=null;l=l||{start:0,end:0}}else l=null;Bn={focusedElem:o,selectionRange:l},qt=!1,ol=null,ll=!1,Go=n;do{try{Ml()}catch(e){if(null===Go)throw Error(s(330));Dl(Go,e),Go=Go.nextEffect}}while(null!==Go);ol=null,Go=n;do{try{for(o=e;null!==Go;){var b=Go.flags;if(16&b&&ve(Go.stateNode,""),128&b){var y=Go.alternate;if(null!==y){var w=y.ref;null!==w&&("function"==typeof w?w(null):w.current=null)}}switch(1038&b){case 2:bo(Go),Go.flags&=-3;break;case 6:bo(Go),Go.flags&=-3,So(Go.alternate,Go);break;case 1024:Go.flags&=-1025;break;case 1028:Go.flags&=-1025,So(Go.alternate,Go);break;case 4:So(Go.alternate,Go);break;case 8:ko(o,l=Go);var k=l.alternate;vo(l),null!==k&&vo(k)}Go=Go.nextEffect}}catch(e){if(null===Go)throw Error(s(330));Dl(Go,e),Go=Go.nextEffect}}while(null!==Go);if(w=Bn,y=gn(),b=w.focusedElem,o=w.selectionRange,y!==b&&b&&b.ownerDocument&&pn(b.ownerDocument.documentElement,b)){null!==o&&mn(b)&&(y=o.start,void 0===(w=o.end)&&(w=y),"selectionStart"in b?(b.selectionStart=y,b.selectionEnd=Math.min(w,b.value.length)):(w=(y=b.ownerDocument||document)&&y.defaultView||window).getSelection&&(w=w.getSelection(),l=b.textContent.length,k=Math.min(o.start,l),o=void 0===o.end?k:Math.min(o.end,l),!w.extend&&k>o&&(l=o,o=k,k=l),l=fn(b,k),r=fn(b,o),l&&r&&(1!==w.rangeCount||w.anchorNode!==l.node||w.anchorOffset!==l.offset||w.focusNode!==r.node||w.focusOffset!==r.offset)&&((y=y.createRange()).setStart(l.node,l.offset),w.removeAllRanges(),k>o?(w.addRange(y),w.extend(r.node,r.offset)):(y.setEnd(r.node,r.offset),w.addRange(y))))),y=[];for(w=b;w=w.parentNode;)1===w.nodeType&&y.push({element:w,left:w.scrollLeft,top:w.scrollTop});for("function"==typeof b.focus&&b.focus(),b=0;b<y.length;b++)(w=y[b]).element.scrollLeft=w.left,w.element.scrollTop=w.top}qt=!!Hn,Bn=Hn=null,e.current=i,Go=n;do{try{for(b=e;null!==Go;){var S=Go.flags;if(36&S&&po(b,Go.alternate,Go),128&S){y=void 0;var A=Go.ref;if(null!==A){var C=Go.stateNode;Go.tag,y=C,"function"==typeof A?A(y):A.current=y}}Go=Go.nextEffect}}catch(e){if(null===Go)throw Error(s(330));Dl(Go,e),Go=Go.nextEffect}}while(null!==Go);Go=null,Da(),Lo=a}else e.current=i;if(Zo)Zo=!1,Qo=e,Ko=t;else for(Go=n;null!==Go;)t=Go.nextEffect,Go.nextEffect=null,8&Go.flags&&((S=Go).sibling=null,S.stateNode=null),Go=t;if(0===(n=e.pendingLanes)&&($o=null),1===n?e===nl?il++:(il=0,nl=e):il=0,i=i.stateNode,Sa&&"function"==typeof Sa.onCommitFiberRoot)try{Sa.onCommitFiberRoot(ka,i,void 0,64==(64&i.current.flags))}catch(e){}if(fl(e,_a()),Uo)throw Uo=!1,e=qo,qo=null,e;return 0!=(8&Lo)||Ua(),null}function Ml(){for(;null!==Go;){var e=Go.alternate;ll||null===ol||(0!=(8&Go.flags)?Je(Go,ol)&&(ll=!0):13===Go.tag&&Co(e,Go)&&Je(Go,ol)&&(ll=!0));var t=Go.flags;0!=(256&t)&&fo(e,Go),0==(512&t)||Zo||(Zo=!0,Ga(97,(function(){return Ol(),null}))),Go=Go.nextEffect}}function Ol(){if(90!==Ko){var e=97<Ko?97:Ko;return Ko=90,Va(e,Fl)}return!1}function zl(e,t){Jo.push(t,e),Zo||(Zo=!0,Ga(97,(function(){return Ol(),null})))}function Rl(e,t){el.push(t,e),Zo||(Zo=!0,Ga(97,(function(){return Ol(),null})))}function Fl(){if(null===Qo)return!1;var e=Qo;if(Qo=null,0!=(48&Lo))throw Error(s(331));var t=Lo;Lo|=32;var i=el;el=[];for(var n=0;n<i.length;n+=2){var a=i[n],r=i[n+1],o=a.destroy;if(a.destroy=void 0,"function"==typeof o)try{o()}catch(e){if(null===r)throw Error(s(330));Dl(r,e)}}for(i=Jo,Jo=[],n=0;n<i.length;n+=2){a=i[n],r=i[n+1];try{var l=a.create;a.destroy=l()}catch(e){if(null===r)throw Error(s(330));Dl(r,e)}}for(l=e.current.firstEffect;null!==l;)e=l.nextEffect,l.nextEffect=null,8&l.flags&&(l.sibling=null,l.stateNode=null),l=e;return Lo=t,Ua(),!0}function Nl(e,t,i){ur(e,t=lo(0,t=ro(i,t),1)),t=cl(),null!==(e=dl(e,1))&&(_t(e,1,t),fl(e,t))}function Dl(e,t){if(3===e.tag)Nl(e,e,t);else for(var i=e.return;null!==i;){if(3===i.tag){Nl(i,e,t);break}if(1===i.tag){var n=i.stateNode;if("function"==typeof i.type.getDerivedStateFromError||"function"==typeof n.componentDidCatch&&(null===$o||!$o.has(n))){var a=co(i,e=ro(t,e),1);if(ur(i,a),a=cl(),null!==(i=dl(i,1)))_t(i,1,a),fl(i,a);else if("function"==typeof n.componentDidCatch&&(null===$o||!$o.has(n)))try{n.componentDidCatch(t,e)}catch(e){}break}}i=i.return}}function Xl(e,t,i){var n=e.pingCache;null!==n&&n.delete(t),t=cl(),e.pingedLanes|=e.suspendedLanes&i,Io===e&&(Oo&i)===i&&(4===Fo||3===Fo&&(62914560&Oo)===Oo&&500>_a()-_o?wl(e,0):Ho|=i),fl(e,t)}function Yl(e,t){var i=e.stateNode;null!==i&&i.delete(t),0==(t=0)&&(0==(2&(t=e.mode))?t=1:0==(4&t)?t=99===Wa()?1:2:(0===rl&&(rl=Do),0===(t=Ht(62914560&~rl))&&(t=4194304))),i=cl(),null!==(e=dl(e,t))&&(_t(e,t,i),fl(e,i))}function Hl(e,t,i,n){this.tag=e,this.key=i,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=n,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function Bl(e,t,i,n){return new Hl(e,t,i,n)}function _l(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Wl(e,t){var i=e.alternate;return null===i?((i=Bl(e.tag,t,e.key,e.mode)).elementType=e.elementType,i.type=e.type,i.stateNode=e.stateNode,i.alternate=e,e.alternate=i):(i.pendingProps=t,i.type=e.type,i.flags=0,i.nextEffect=null,i.firstEffect=null,i.lastEffect=null),i.childLanes=e.childLanes,i.lanes=e.lanes,i.child=e.child,i.memoizedProps=e.memoizedProps,i.memoizedState=e.memoizedState,i.updateQueue=e.updateQueue,t=e.dependencies,i.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},i.sibling=e.sibling,i.index=e.index,i.ref=e.ref,i}function jl(e,t,i,n,a,r){var o=2;if(n=e,"function"==typeof e)_l(e)&&(o=1);else if("string"==typeof e)o=5;else e:switch(e){case A:return Vl(i.children,a,r,t);case N:o=8,a|=16;break;case C:o=8,a|=1;break;case E:return(e=Bl(12,i,t,8|a)).elementType=E,e.type=E,e.lanes=r,e;case I:return(e=Bl(13,i,t,a)).type=I,e.elementType=I,e.lanes=r,e;case M:return(e=Bl(19,i,t,a)).elementType=M,e.lanes=r,e;case D:return Gl(i,a,r,t);case X:return(e=Bl(24,i,t,a)).elementType=X,e.lanes=r,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case P:o=10;break e;case T:o=9;break e;case L:o=11;break e;case O:o=14;break e;case z:o=16,n=null;break e;case R:o=22;break e}throw Error(s(130,null==e?e:typeof e,""))}return(t=Bl(o,i,t,a)).elementType=e,t.type=n,t.lanes=r,t}function Vl(e,t,i,n){return(e=Bl(7,e,n,t)).lanes=i,e}function Gl(e,t,i,n){return(e=Bl(23,e,n,t)).elementType=D,e.lanes=i,e}function Ul(e,t,i){return(e=Bl(6,e,null,t)).lanes=i,e}function ql(e,t,i){return(t=Bl(4,null!==e.children?e.children:[],e.key,t)).lanes=i,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function $l(e,t,i){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=i,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=Bt(0),this.expirationTimes=Bt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Bt(0),this.mutableSourceEagerHydrationData=null}function Zl(e,t,i){var n=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:S,key:null==n?null:""+n,children:e,containerInfo:t,implementation:i}}function Ql(e,t,i,n){var a=t.current,r=cl(),o=ul(a);e:if(i){t:{if($e(i=i._reactInternals)!==i||1!==i.tag)throw Error(s(170));var l=i;do{switch(l.tag){case 3:l=l.stateNode.context;break t;case 1:if(ma(l.type)){l=l.stateNode.__reactInternalMemoizedMergedChildContext;break t}}l=l.return}while(null!==l);throw Error(s(171))}if(1===i.tag){var c=i.type;if(ma(c)){i=ba(i,c,l);break e}}i=l}else i=ha;return null===t.context?t.context=i:t.pendingContext=i,(t=cr(r,o)).payload={element:e},null!==(n=void 0===n?null:n)&&(t.callback=n),ur(a,t),hl(a,o,r),o}function Kl(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Jl(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var i=e.retryLane;e.retryLane=0!==i&&i<t?i:t}}function ec(e,t){Jl(e,t),(e=e.alternate)&&Jl(e,t)}function tc(e,t,i){var n=null!=i&&null!=i.hydrationOptions&&i.hydrationOptions.mutableSources||null;if(i=new $l(e,t,null!=i&&!0===i.hydrate),t=Bl(3,null,null,2===t?7:1===t?3:0),i.current=t,t.stateNode=i,or(t),e[Jn]=i.current,Mn(8===e.nodeType?e.parentNode:e),n)for(e=0;e<n.length;e++){var a=(t=n[e])._getVersion;a=a(t._source),null==i.mutableSourceEagerHydrationData?i.mutableSourceEagerHydrationData=[t,a]:i.mutableSourceEagerHydrationData.push(t,a)}this._internalRoot=i}function ic(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function nc(e,t,i,n,a){var r=i._reactRootContainer;if(r){var s=r._internalRoot;if("function"==typeof a){var o=a;a=function(){var e=Kl(s);o.call(e)}}Ql(t,s,e,a)}else{if(r=i._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var i;i=e.lastChild;)e.removeChild(i);return new tc(e,0,t?{hydrate:!0}:void 0)}(i,n),s=r._internalRoot,"function"==typeof a){var l=a;a=function(){var e=Kl(s);l.call(e)}}xl((function(){Ql(t,s,e,a)}))}return Kl(s)}function ac(e,t){var i=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!ic(t))throw Error(s(200));return Zl(e,t,null,i)}Vo=function(e,t,i){var n=t.lanes;if(null!==e)if(e.memoizedProps!==t.pendingProps||fa.current)Fs=!0;else{if(0==(i&n)){switch(Fs=!1,t.tag){case 3:Vs(t),Gr();break;case 5:Rr(t);break;case 1:ma(t.type)&&ya(t);break;case 4:Or(t,t.stateNode.containerInfo);break;case 10:n=t.memoizedProps.value;var a=t.type._context;ua(Qa,a._currentValue),a._currentValue=n;break;case 13:if(null!==t.memoizedState)return 0!=(i&t.child.childLanes)?Zs(e,t,i):(ua(Nr,1&Nr.current),null!==(t=to(e,t,i))?t.sibling:null);ua(Nr,1&Nr.current);break;case 19:if(n=0!=(i&t.childLanes),0!=(64&e.flags)){if(n)return eo(e,t,i);t.flags|=64}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),ua(Nr,Nr.current),n)break;return null;case 23:case 24:return t.lanes=0,Hs(e,t,i)}return to(e,t,i)}Fs=0!=(16384&e.flags)}else Fs=!1;switch(t.lanes=0,t.tag){case 2:if(n=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,a=ga(t,da.current),ar(t,i),a=rs(null,t,n,e,a,i),t.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,ma(n)){var r=!0;ya(t)}else r=!1;t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,or(t);var o=n.getDerivedStateFromProps;"function"==typeof o&&gr(t,n,o,e),a.updater=mr,t.stateNode=a,a._reactInternals=t,yr(t,n,e,i),t=js(null,t,n,!0,r,i)}else t.tag=0,Ns(null,t,a,i),t=t.child;return t;case 16:a=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,a=(r=a._init)(a._payload),t.type=a,r=t.tag=function(e){if("function"==typeof e)return _l(e)?1:0;if(null!=e){if((e=e.$$typeof)===L)return 11;if(e===O)return 14}return 2}(a),e=Za(a,e),r){case 0:t=_s(null,t,a,e,i);break e;case 1:t=Ws(null,t,a,e,i);break e;case 11:t=Ds(null,t,a,e,i);break e;case 14:t=Xs(null,t,a,Za(a.type,e),n,i);break e}throw Error(s(306,a,""))}return t;case 0:return n=t.type,a=t.pendingProps,_s(e,t,n,a=t.elementType===n?a:Za(n,a),i);case 1:return n=t.type,a=t.pendingProps,Ws(e,t,n,a=t.elementType===n?a:Za(n,a),i);case 3:if(Vs(t),n=t.updateQueue,null===e||null===n)throw Error(s(282));if(n=t.pendingProps,a=null!==(a=t.memoizedState)?a.element:null,lr(e,t),dr(t,n,null,i),(n=t.memoizedState.element)===a)Gr(),t=to(e,t,i);else{if((r=(a=t.stateNode).hydrate)&&(Yr=Un(t.stateNode.containerInfo.firstChild),Xr=t,r=Hr=!0),r){if(null!=(e=a.mutableSourceEagerHydrationData))for(a=0;a<e.length;a+=2)(r=e[a])._workInProgressVersionPrimary=e[a+1],Ur.push(r);for(i=Er(t,null,n,i),t.child=i;i;)i.flags=-3&i.flags|1024,i=i.sibling}else Ns(e,t,n,i),Gr();t=t.child}return t;case 5:return Rr(t),null===e&&Wr(t),n=t.type,a=t.pendingProps,r=null!==e?e.memoizedProps:null,o=a.children,Wn(n,a)?o=null:null!==r&&Wn(n,r)&&(t.flags|=16),Bs(e,t),Ns(e,t,o,i),t.child;case 6:return null===e&&Wr(t),null;case 13:return Zs(e,t,i);case 4:return Or(t,t.stateNode.containerInfo),n=t.pendingProps,null===e?t.child=Cr(t,null,n,i):Ns(e,t,n,i),t.child;case 11:return n=t.type,a=t.pendingProps,Ds(e,t,n,a=t.elementType===n?a:Za(n,a),i);case 7:return Ns(e,t,t.pendingProps,i),t.child;case 8:case 12:return Ns(e,t,t.pendingProps.children,i),t.child;case 10:e:{n=t.type._context,a=t.pendingProps,o=t.memoizedProps,r=a.value;var l=t.type._context;if(ua(Qa,l._currentValue),l._currentValue=r,null!==o)if(l=o.value,0==(r=cn(l,r)?0:0|("function"==typeof n._calculateChangedBits?n._calculateChangedBits(l,r):1073741823))){if(o.children===a.children&&!fa.current){t=to(e,t,i);break e}}else for(null!==(l=t.child)&&(l.return=t);null!==l;){var c=l.dependencies;if(null!==c){o=l.child;for(var u=c.firstContext;null!==u;){if(u.context===n&&0!=(u.observedBits&r)){1===l.tag&&((u=cr(-1,i&-i)).tag=2,ur(l,u)),l.lanes|=i,null!==(u=l.alternate)&&(u.lanes|=i),nr(l.return,i),c.lanes|=i;break}u=u.next}}else o=10===l.tag&&l.type===t.type?null:l.child;if(null!==o)o.return=l;else for(o=l;null!==o;){if(o===t){o=null;break}if(null!==(l=o.sibling)){l.return=o.return,o=l;break}o=o.return}l=o}Ns(e,t,a.children,i),t=t.child}return t;case 9:return a=t.type,n=(r=t.pendingProps).children,ar(t,i),n=n(a=rr(a,r.unstable_observedBits)),t.flags|=1,Ns(e,t,n,i),t.child;case 14:return r=Za(a=t.type,t.pendingProps),Xs(e,t,a,r=Za(a.type,r),n,i);case 15:return Ys(e,t,t.type,t.pendingProps,n,i);case 17:return n=t.type,a=t.pendingProps,a=t.elementType===n?a:Za(n,a),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,ma(n)?(e=!0,ya(t)):e=!1,ar(t,i),xr(t,n,a),yr(t,n,a,i),js(null,t,n,!0,e,i);case 19:return eo(e,t,i);case 23:case 24:return Hs(e,t,i)}throw Error(s(156,t.tag))},tc.prototype.render=function(e){Ql(e,this._internalRoot,null,null)},tc.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Ql(null,e,null,(function(){t[Jn]=null}))},et=function(e){13===e.tag&&(hl(e,4,cl()),ec(e,4))},tt=function(e){13===e.tag&&(hl(e,67108864,cl()),ec(e,67108864))},it=function(e){if(13===e.tag){var t=cl(),i=ul(e);hl(e,i,t),ec(e,i)}},nt=function(e,t){return t()},Ee=function(e,t,i){switch(t){case"input":if(ie(e,i),t=i.name,"radio"===i.type&&null!=t){for(i=e;i.parentNode;)i=i.parentNode;for(i=i.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<i.length;t++){var n=i[t];if(n!==e&&n.form===e.form){var a=aa(n);if(!a)throw Error(s(90));Q(n),ie(n,a)}}}break;case"textarea":ce(e,i);break;case"select":null!=(t=i.value)&&se(e,!!i.multiple,t,!1)}},Oe=vl,ze=function(e,t,i,n,a){var r=Lo;Lo|=4;try{return Va(98,e.bind(null,t,i,n,a))}finally{0===(Lo=r)&&(jo(),Ua())}},Re=function(){0==(49&Lo)&&(function(){if(null!==tl){var e=tl;tl=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,fl(e,_a())}))}Ua()}(),Ol())},Fe=function(e,t){var i=Lo;Lo|=2;try{return e(t)}finally{0===(Lo=i)&&(jo(),Ua())}};var rc={Events:[ia,na,aa,Ie,Me,Ol,{current:!1}]},sc={findFiberByHostInstance:ta,bundleType:0,version:"17.0.2",rendererPackageName:"react-dom"},oc={bundleType:sc.bundleType,version:sc.version,rendererPackageName:sc.rendererPackageName,rendererConfig:sc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:w.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Ke(e))?null:e.stateNode},findFiberByHostInstance:sc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var lc=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!lc.isDisabled&&lc.supportsFiber)try{ka=lc.inject(oc),Sa=lc}catch(ge){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=rc,t.createPortal=ac,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(s(188));throw Error(s(268,Object.keys(e)))}return null===(e=Ke(t))?null:e.stateNode},t.flushSync=function(e,t){var i=Lo;if(0!=(48&i))return e(t);Lo|=1;try{if(e)return Va(99,e.bind(null,t))}finally{Lo=i,Ua()}},t.hydrate=function(e,t,i){if(!ic(t))throw Error(s(200));return nc(null,e,t,!0,i)},t.render=function(e,t,i){if(!ic(t))throw Error(s(200));return nc(null,e,t,!1,i)},t.unmountComponentAtNode=function(e){if(!ic(e))throw Error(s(40));return!!e._reactRootContainer&&(xl((function(){nc(null,null,e,!1,(function(){e._reactRootContainer=null,e[Jn]=null}))})),!0)},t.unstable_batchedUpdates=vl,t.unstable_createPortal=function(e,t){return ac(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,i,n){if(!ic(i))throw Error(s(200));if(null==e||void 0===e._reactInternals)throw Error(s(38));return nc(e,t,i,!1,n)},t.version="17.0.2"},935:(e,t,i)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=i(448)},590:e=>{var t="undefined"!=typeof Element,i="function"==typeof Map,n="function"==typeof Set,a="function"==typeof ArrayBuffer&&!!ArrayBuffer.isView;function r(e,s){if(e===s)return!0;if(e&&s&&"object"==typeof e&&"object"==typeof s){if(e.constructor!==s.constructor)return!1;var o,l,c,u;if(Array.isArray(e)){if((o=e.length)!=s.length)return!1;for(l=o;0!=l--;)if(!r(e[l],s[l]))return!1;return!0}if(i&&e instanceof Map&&s instanceof Map){if(e.size!==s.size)return!1;for(u=e.entries();!(l=u.next()).done;)if(!s.has(l.value[0]))return!1;for(u=e.entries();!(l=u.next()).done;)if(!r(l.value[1],s.get(l.value[0])))return!1;return!0}if(n&&e instanceof Set&&s instanceof Set){if(e.size!==s.size)return!1;for(u=e.entries();!(l=u.next()).done;)if(!s.has(l.value[0]))return!1;return!0}if(a&&ArrayBuffer.isView(e)&&ArrayBuffer.isView(s)){if((o=e.length)!=s.length)return!1;for(l=o;0!=l--;)if(e[l]!==s[l])return!1;return!0}if(e.constructor===RegExp)return e.source===s.source&&e.flags===s.flags;if(e.valueOf!==Object.prototype.valueOf)return e.valueOf()===s.valueOf();if(e.toString!==Object.prototype.toString)return e.toString()===s.toString();if((o=(c=Object.keys(e)).length)!==Object.keys(s).length)return!1;for(l=o;0!=l--;)if(!Object.prototype.hasOwnProperty.call(s,c[l]))return!1;if(t&&e instanceof Element)return!1;for(l=o;0!=l--;)if(("_owner"!==c[l]&&"__v"!==c[l]&&"__o"!==c[l]||!e.$$typeof)&&!r(e[c[l]],s[c[l]]))return!1;return!0}return e!=e&&s!=s}e.exports=function(e,t){try{return r(e,t)}catch(e){if((e.message||"").match(/stack|recursion/i))return console.warn("react-fast-compare cannot handle circular refs"),!1;throw e}}},921:(e,t)=>{"use strict";var i=60103,n=60106,a=60107,r=60108,s=60114,o=60109,l=60110,c=60112,u=60113,h=60120,d=60115,f=60116,p=60121,g=60122,m=60117,v=60129,x=60131;if("function"==typeof Symbol&&Symbol.for){var b=Symbol.for;i=b("react.element"),n=b("react.portal"),a=b("react.fragment"),r=b("react.strict_mode"),s=b("react.profiler"),o=b("react.provider"),l=b("react.context"),c=b("react.forward_ref"),u=b("react.suspense"),h=b("react.suspense_list"),d=b("react.memo"),f=b("react.lazy"),p=b("react.block"),g=b("react.server.block"),m=b("react.fundamental"),v=b("react.debug_trace_mode"),x=b("react.legacy_hidden")}t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===a||e===s||e===v||e===r||e===u||e===h||e===x||"object"==typeof e&&null!==e&&(e.$$typeof===f||e.$$typeof===d||e.$$typeof===o||e.$$typeof===l||e.$$typeof===c||e.$$typeof===m||e.$$typeof===p||e[0]===g)},t.typeOf=function(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case i:switch(e=e.type){case a:case s:case r:case u:case h:return e;default:switch(e=e&&e.$$typeof){case l:case c:case f:case d:case o:return e;default:return t}}case n:return t}}}},864:(e,t,i)=>{"use strict";e.exports=i(921)},938:e=>{e.exports={ReactQueryDevtools:function(){return null},ReactQueryDevtoolsPanel:function(){return null}}},852:(e,t,i)=>{"use strict";i.d(t,{j:()=>s});var n=i(721),a=i(943),r=i(288),s=new(function(e){function t(){var t;return(t=e.call(this)||this).setup=function(e){var t;if(!r.sk&&(null==(t=window)?void 0:t.addEventListener)){var i=function(){return e()};return window.addEventListener("visibilitychange",i,!1),window.addEventListener("focus",i,!1),function(){window.removeEventListener("visibilitychange",i),window.removeEventListener("focus",i)}}},t}(0,n.Z)(t,e);var i=t.prototype;return i.onSubscribe=function(){this.cleanup||this.setEventListener(this.setup)},i.onUnsubscribe=function(){var e;this.hasListeners()||(null==(e=this.cleanup)||e.call(this),this.cleanup=void 0)},i.setEventListener=function(e){var t,i=this;this.setup=e,null==(t=this.cleanup)||t.call(this),this.cleanup=e((function(e){"boolean"==typeof e?i.setFocused(e):i.onFocus()}))},i.setFocused=function(e){this.focused=e,e&&this.onFocus()},i.onFocus=function(){this.listeners.forEach((function(e){e()}))},i.isFocused=function(){return"boolean"==typeof this.focused?this.focused:"undefined"==typeof document||[void 0,"visible","prerender"].includes(document.visibilityState)},t}(a.l))},747:(e,t,i)=>{"use strict";i.d(t,{Su:()=>n.S});var n=i(61),a=i(755);i.o(a,"QueryClientProvider")&&i.d(t,{QueryClientProvider:function(){return a.QueryClientProvider}}),i.o(a,"useQuery")&&i.d(t,{useQuery:function(){return a.useQuery}})},909:(e,t,i)=>{"use strict";i.d(t,{j:()=>a,E:()=>r});var n=console;function a(){return n}function r(e){n=e}},101:(e,t,i)=>{"use strict";i.d(t,{V:()=>a});var n=i(288),a=new(function(){function e(){this.queue=[],this.transactions=0,this.notifyFn=function(e){e()},this.batchNotifyFn=function(e){e()}}var t=e.prototype;return t.batch=function(e){var t;this.transactions++;try{t=e()}finally{this.transactions--,this.transactions||this.flush()}return t},t.schedule=function(e){var t=this;this.transactions?this.queue.push(e):(0,n.A4)((function(){t.notifyFn(e)}))},t.batchCalls=function(e){var t=this;return function(){for(var i=arguments.length,n=new Array(i),a=0;a<i;a++)n[a]=arguments[a];t.schedule((function(){e.apply(void 0,n)}))}},t.flush=function(){var e=this,t=this.queue;this.queue=[],t.length&&(0,n.A4)((function(){e.batchNotifyFn((function(){t.forEach((function(t){e.notifyFn(t)}))}))}))},t.setNotifyFunction=function(e){this.notifyFn=e},t.setBatchNotifyFunction=function(e){this.batchNotifyFn=e},e}())},68:(e,t,i)=>{"use strict";i.d(t,{N:()=>s});var n=i(721),a=i(943),r=i(288),s=new(function(e){function t(){var t;return(t=e.call(this)||this).setup=function(e){var t;if(!r.sk&&(null==(t=window)?void 0:t.addEventListener)){var i=function(){return e()};return window.addEventListener("online",i,!1),window.addEventListener("offline",i,!1),function(){window.removeEventListener("online",i),window.removeEventListener("offline",i)}}},t}(0,n.Z)(t,e);var i=t.prototype;return i.onSubscribe=function(){this.cleanup||this.setEventListener(this.setup)},i.onUnsubscribe=function(){var e;this.hasListeners()||(null==(e=this.cleanup)||e.call(this),this.cleanup=void 0)},i.setEventListener=function(e){var t,i=this;this.setup=e,null==(t=this.cleanup)||t.call(this),this.cleanup=e((function(e){"boolean"==typeof e?i.setOnline(e):i.onOnline()}))},i.setOnline=function(e){this.online=e,e&&this.onOnline()},i.onOnline=function(){this.listeners.forEach((function(e){e()}))},i.isOnline=function(){return"boolean"==typeof this.online?this.online:"undefined"==typeof navigator||void 0===navigator.onLine||navigator.onLine},t}(a.l))},61:(e,t,i)=>{"use strict";i.d(t,{S:()=>v});var n=i(462),a=i(288),r=i(721),s=i(101),o=i(909),l=i(252),c=function(){function e(e){this.abortSignalConsumed=!1,this.hadObservers=!1,this.defaultOptions=e.defaultOptions,this.setOptions(e.options),this.observers=[],this.cache=e.cache,this.queryKey=e.queryKey,this.queryHash=e.queryHash,this.initialState=e.state||this.getDefaultState(this.options),this.state=this.initialState,this.meta=e.meta,this.scheduleGc()}var t=e.prototype;return t.setOptions=function(e){var t;this.options=(0,n.Z)({},this.defaultOptions,e),this.meta=null==e?void 0:e.meta,this.cacheTime=Math.max(this.cacheTime||0,null!=(t=this.options.cacheTime)?t:3e5)},t.setDefaultOptions=function(e){this.defaultOptions=e},t.scheduleGc=function(){var e=this;this.clearGcTimeout(),(0,a.PN)(this.cacheTime)&&(this.gcTimeout=setTimeout((function(){e.optionalRemove()}),this.cacheTime))},t.clearGcTimeout=function(){clearTimeout(this.gcTimeout),this.gcTimeout=void 0},t.optionalRemove=function(){this.observers.length||(this.state.isFetching?this.hadObservers&&this.scheduleGc():this.cache.remove(this))},t.setData=function(e,t){var i,n,r=this.state.data,s=(0,a.SE)(e,r);return(null==(i=(n=this.options).isDataEqual)?void 0:i.call(n,r,s))?s=r:!1!==this.options.structuralSharing&&(s=(0,a.Q$)(r,s)),this.dispatch({data:s,type:"success",dataUpdatedAt:null==t?void 0:t.updatedAt}),s},t.setState=function(e,t){this.dispatch({type:"setState",state:e,setStateOptions:t})},t.cancel=function(e){var t,i=this.promise;return null==(t=this.retryer)||t.cancel(e),i?i.then(a.ZT).catch(a.ZT):Promise.resolve()},t.destroy=function(){this.clearGcTimeout(),this.cancel({silent:!0})},t.reset=function(){this.destroy(),this.setState(this.initialState)},t.isActive=function(){return this.observers.some((function(e){return!1!==e.options.enabled}))},t.isFetching=function(){return this.state.isFetching},t.isStale=function(){return this.state.isInvalidated||!this.state.dataUpdatedAt||this.observers.some((function(e){return e.getCurrentResult().isStale}))},t.isStaleByTime=function(e){return void 0===e&&(e=0),this.state.isInvalidated||!this.state.dataUpdatedAt||!(0,a.Kp)(this.state.dataUpdatedAt,e)},t.onFocus=function(){var e,t=this.observers.find((function(e){return e.shouldFetchOnWindowFocus()}));t&&t.refetch(),null==(e=this.retryer)||e.continue()},t.onOnline=function(){var e,t=this.observers.find((function(e){return e.shouldFetchOnReconnect()}));t&&t.refetch(),null==(e=this.retryer)||e.continue()},t.addObserver=function(e){-1===this.observers.indexOf(e)&&(this.observers.push(e),this.hadObservers=!0,this.clearGcTimeout(),this.cache.notify({type:"observerAdded",query:this,observer:e}))},t.removeObserver=function(e){-1!==this.observers.indexOf(e)&&(this.observers=this.observers.filter((function(t){return t!==e})),this.observers.length||(this.retryer&&(this.retryer.isTransportCancelable||this.abortSignalConsumed?this.retryer.cancel({revert:!0}):this.retryer.cancelRetry()),this.cacheTime?this.scheduleGc():this.cache.remove(this)),this.cache.notify({type:"observerRemoved",query:this,observer:e}))},t.getObserversCount=function(){return this.observers.length},t.invalidate=function(){this.state.isInvalidated||this.dispatch({type:"invalidate"})},t.fetch=function(e,t){var i,n,r,s=this;if(this.state.isFetching)if(this.state.dataUpdatedAt&&(null==t?void 0:t.cancelRefetch))this.cancel({silent:!0});else if(this.promise){var c;return null==(c=this.retryer)||c.continueRetry(),this.promise}if(e&&this.setOptions(e),!this.options.queryFn){var u=this.observers.find((function(e){return e.options.queryFn}));u&&this.setOptions(u.options)}var h=(0,a.mc)(this.queryKey),d=(0,a.G9)(),f={queryKey:h,pageParam:void 0,meta:this.meta};Object.defineProperty(f,"signal",{enumerable:!0,get:function(){if(d)return s.abortSignalConsumed=!0,d.signal}});var p,g,m={fetchOptions:t,options:this.options,queryKey:h,state:this.state,fetchFn:function(){return s.options.queryFn?(s.abortSignalConsumed=!1,s.options.queryFn(f)):Promise.reject("Missing queryFn")},meta:this.meta};return(null==(i=this.options.behavior)?void 0:i.onFetch)&&(null==(p=this.options.behavior)||p.onFetch(m)),this.revertState=this.state,this.state.isFetching&&this.state.fetchMeta===(null==(n=m.fetchOptions)?void 0:n.meta)||this.dispatch({type:"fetch",meta:null==(g=m.fetchOptions)?void 0:g.meta}),this.retryer=new l.m4({fn:m.fetchFn,abort:null==d||null==(r=d.abort)?void 0:r.bind(d),onSuccess:function(e){s.setData(e),null==s.cache.config.onSuccess||s.cache.config.onSuccess(e,s),0===s.cacheTime&&s.optionalRemove()},onError:function(e){(0,l.DV)(e)&&e.silent||s.dispatch({type:"error",error:e}),(0,l.DV)(e)||(null==s.cache.config.onError||s.cache.config.onError(e,s),(0,o.j)().error(e)),0===s.cacheTime&&s.optionalRemove()},onFail:function(){s.dispatch({type:"failed"})},onPause:function(){s.dispatch({type:"pause"})},onContinue:function(){s.dispatch({type:"continue"})},retry:m.options.retry,retryDelay:m.options.retryDelay}),this.promise=this.retryer.promise,this.promise},t.dispatch=function(e){var t=this;this.state=this.reducer(this.state,e),s.V.batch((function(){t.observers.forEach((function(t){t.onQueryUpdate(e)})),t.cache.notify({query:t,type:"queryUpdated",action:e})}))},t.getDefaultState=function(e){var t="function"==typeof e.initialData?e.initialData():e.initialData,i=void 0!==e.initialData?"function"==typeof e.initialDataUpdatedAt?e.initialDataUpdatedAt():e.initialDataUpdatedAt:0,n=void 0!==t;return{data:t,dataUpdateCount:0,dataUpdatedAt:n?null!=i?i:Date.now():0,error:null,errorUpdateCount:0,errorUpdatedAt:0,fetchFailureCount:0,fetchMeta:null,isFetching:!1,isInvalidated:!1,isPaused:!1,status:n?"success":"idle"}},t.reducer=function(e,t){var i,a;switch(t.type){case"failed":return(0,n.Z)({},e,{fetchFailureCount:e.fetchFailureCount+1});case"pause":return(0,n.Z)({},e,{isPaused:!0});case"continue":return(0,n.Z)({},e,{isPaused:!1});case"fetch":return(0,n.Z)({},e,{fetchFailureCount:0,fetchMeta:null!=(i=t.meta)?i:null,isFetching:!0,isPaused:!1},!e.dataUpdatedAt&&{error:null,status:"loading"});case"success":return(0,n.Z)({},e,{data:t.data,dataUpdateCount:e.dataUpdateCount+1,dataUpdatedAt:null!=(a=t.dataUpdatedAt)?a:Date.now(),error:null,fetchFailureCount:0,isFetching:!1,isInvalidated:!1,isPaused:!1,status:"success"});case"error":var r=t.error;return(0,l.DV)(r)&&r.revert&&this.revertState?(0,n.Z)({},this.revertState):(0,n.Z)({},e,{error:r,errorUpdateCount:e.errorUpdateCount+1,errorUpdatedAt:Date.now(),fetchFailureCount:e.fetchFailureCount+1,isFetching:!1,isPaused:!1,status:"error"});case"invalidate":return(0,n.Z)({},e,{isInvalidated:!0});case"setState":return(0,n.Z)({},e,t.state);default:return e}},e}(),u=i(943),h=function(e){function t(t){var i;return(i=e.call(this)||this).config=t||{},i.queries=[],i.queriesMap={},i}(0,r.Z)(t,e);var i=t.prototype;return i.build=function(e,t,i){var n,r=t.queryKey,s=null!=(n=t.queryHash)?n:(0,a.Rm)(r,t),o=this.get(s);return o||(o=new c({cache:this,queryKey:r,queryHash:s,options:e.defaultQueryOptions(t),state:i,defaultOptions:e.getQueryDefaults(r),meta:t.meta}),this.add(o)),o},i.add=function(e){this.queriesMap[e.queryHash]||(this.queriesMap[e.queryHash]=e,this.queries.push(e),this.notify({type:"queryAdded",query:e}))},i.remove=function(e){var t=this.queriesMap[e.queryHash];t&&(e.destroy(),this.queries=this.queries.filter((function(t){return t!==e})),t===e&&delete this.queriesMap[e.queryHash],this.notify({type:"queryRemoved",query:e}))},i.clear=function(){var e=this;s.V.batch((function(){e.queries.forEach((function(t){e.remove(t)}))}))},i.get=function(e){return this.queriesMap[e]},i.getAll=function(){return this.queries},i.find=function(e,t){var i=(0,a.I6)(e,t)[0];return void 0===i.exact&&(i.exact=!0),this.queries.find((function(e){return(0,a._x)(i,e)}))},i.findAll=function(e,t){var i=(0,a.I6)(e,t)[0];return Object.keys(i).length>0?this.queries.filter((function(e){return(0,a._x)(i,e)})):this.queries},i.notify=function(e){var t=this;s.V.batch((function(){t.listeners.forEach((function(t){t(e)}))}))},i.onFocus=function(){var e=this;s.V.batch((function(){e.queries.forEach((function(e){e.onFocus()}))}))},i.onOnline=function(){var e=this;s.V.batch((function(){e.queries.forEach((function(e){e.onOnline()}))}))},t}(u.l),d=function(){function e(e){this.options=(0,n.Z)({},e.defaultOptions,e.options),this.mutationId=e.mutationId,this.mutationCache=e.mutationCache,this.observers=[],this.state=e.state||{context:void 0,data:void 0,error:null,failureCount:0,isPaused:!1,status:"idle",variables:void 0},this.meta=e.meta}var t=e.prototype;return t.setState=function(e){this.dispatch({type:"setState",state:e})},t.addObserver=function(e){-1===this.observers.indexOf(e)&&this.observers.push(e)},t.removeObserver=function(e){this.observers=this.observers.filter((function(t){return t!==e}))},t.cancel=function(){return this.retryer?(this.retryer.cancel(),this.retryer.promise.then(a.ZT).catch(a.ZT)):Promise.resolve()},t.continue=function(){return this.retryer?(this.retryer.continue(),this.retryer.promise):this.execute()},t.execute=function(){var e,t=this,i="loading"===this.state.status,n=Promise.resolve();return i||(this.dispatch({type:"loading",variables:this.options.variables}),n=n.then((function(){null==t.mutationCache.config.onMutate||t.mutationCache.config.onMutate(t.state.variables,t)})).then((function(){return null==t.options.onMutate?void 0:t.options.onMutate(t.state.variables)})).then((function(e){e!==t.state.context&&t.dispatch({type:"loading",context:e,variables:t.state.variables})}))),n.then((function(){return t.executeMutation()})).then((function(i){e=i,null==t.mutationCache.config.onSuccess||t.mutationCache.config.onSuccess(e,t.state.variables,t.state.context,t)})).then((function(){return null==t.options.onSuccess?void 0:t.options.onSuccess(e,t.state.variables,t.state.context)})).then((function(){return null==t.options.onSettled?void 0:t.options.onSettled(e,null,t.state.variables,t.state.context)})).then((function(){return t.dispatch({type:"success",data:e}),e})).catch((function(e){return null==t.mutationCache.config.onError||t.mutationCache.config.onError(e,t.state.variables,t.state.context,t),(0,o.j)().error(e),Promise.resolve().then((function(){return null==t.options.onError?void 0:t.options.onError(e,t.state.variables,t.state.context)})).then((function(){return null==t.options.onSettled?void 0:t.options.onSettled(void 0,e,t.state.variables,t.state.context)})).then((function(){throw t.dispatch({type:"error",error:e}),e}))}))},t.executeMutation=function(){var e,t=this;return this.retryer=new l.m4({fn:function(){return t.options.mutationFn?t.options.mutationFn(t.state.variables):Promise.reject("No mutationFn found")},onFail:function(){t.dispatch({type:"failed"})},onPause:function(){t.dispatch({type:"pause"})},onContinue:function(){t.dispatch({type:"continue"})},retry:null!=(e=this.options.retry)?e:0,retryDelay:this.options.retryDelay}),this.retryer.promise},t.dispatch=function(e){var t=this;this.state=function(e,t){switch(t.type){case"failed":return(0,n.Z)({},e,{failureCount:e.failureCount+1});case"pause":return(0,n.Z)({},e,{isPaused:!0});case"continue":return(0,n.Z)({},e,{isPaused:!1});case"loading":return(0,n.Z)({},e,{context:t.context,data:void 0,error:null,isPaused:!1,status:"loading",variables:t.variables});case"success":return(0,n.Z)({},e,{data:t.data,error:null,status:"success",isPaused:!1});case"error":return(0,n.Z)({},e,{data:void 0,error:t.error,failureCount:e.failureCount+1,isPaused:!1,status:"error"});case"setState":return(0,n.Z)({},e,t.state);default:return e}}(this.state,e),s.V.batch((function(){t.observers.forEach((function(t){t.onMutationUpdate(e)})),t.mutationCache.notify(t)}))},e}(),f=function(e){function t(t){var i;return(i=e.call(this)||this).config=t||{},i.mutations=[],i.mutationId=0,i}(0,r.Z)(t,e);var i=t.prototype;return i.build=function(e,t,i){var n=new d({mutationCache:this,mutationId:++this.mutationId,options:e.defaultMutationOptions(t),state:i,defaultOptions:t.mutationKey?e.getMutationDefaults(t.mutationKey):void 0,meta:t.meta});return this.add(n),n},i.add=function(e){this.mutations.push(e),this.notify(e)},i.remove=function(e){this.mutations=this.mutations.filter((function(t){return t!==e})),e.cancel(),this.notify(e)},i.clear=function(){var e=this;s.V.batch((function(){e.mutations.forEach((function(t){e.remove(t)}))}))},i.getAll=function(){return this.mutations},i.find=function(e){return void 0===e.exact&&(e.exact=!0),this.mutations.find((function(t){return(0,a.X7)(e,t)}))},i.findAll=function(e){return this.mutations.filter((function(t){return(0,a.X7)(e,t)}))},i.notify=function(e){var t=this;s.V.batch((function(){t.listeners.forEach((function(t){t(e)}))}))},i.onFocus=function(){this.resumePausedMutations()},i.onOnline=function(){this.resumePausedMutations()},i.resumePausedMutations=function(){var e=this.mutations.filter((function(e){return e.state.isPaused}));return s.V.batch((function(){return e.reduce((function(e,t){return e.then((function(){return t.continue().catch(a.ZT)}))}),Promise.resolve())}))},t}(u.l),p=i(852),g=i(68);function m(e,t){return null==e.getNextPageParam?void 0:e.getNextPageParam(t[t.length-1],t)}var v=function(){function e(e){void 0===e&&(e={}),this.queryCache=e.queryCache||new h,this.mutationCache=e.mutationCache||new f,this.defaultOptions=e.defaultOptions||{},this.queryDefaults=[],this.mutationDefaults=[]}var t=e.prototype;return t.mount=function(){var e=this;this.unsubscribeFocus=p.j.subscribe((function(){p.j.isFocused()&&g.N.isOnline()&&(e.mutationCache.onFocus(),e.queryCache.onFocus())})),this.unsubscribeOnline=g.N.subscribe((function(){p.j.isFocused()&&g.N.isOnline()&&(e.mutationCache.onOnline(),e.queryCache.onOnline())}))},t.unmount=function(){var e,t;null==(e=this.unsubscribeFocus)||e.call(this),null==(t=this.unsubscribeOnline)||t.call(this)},t.isFetching=function(e,t){var i=(0,a.I6)(e,t)[0];return i.fetching=!0,this.queryCache.findAll(i).length},t.isMutating=function(e){return this.mutationCache.findAll((0,n.Z)({},e,{fetching:!0})).length},t.getQueryData=function(e,t){var i;return null==(i=this.queryCache.find(e,t))?void 0:i.state.data},t.getQueriesData=function(e){return this.getQueryCache().findAll(e).map((function(e){return[e.queryKey,e.state.data]}))},t.setQueryData=function(e,t,i){var n=(0,a._v)(e),r=this.defaultQueryOptions(n);return this.queryCache.build(this,r).setData(t,i)},t.setQueriesData=function(e,t,i){var n=this;return s.V.batch((function(){return n.getQueryCache().findAll(e).map((function(e){var a=e.queryKey;return[a,n.setQueryData(a,t,i)]}))}))},t.getQueryState=function(e,t){var i;return null==(i=this.queryCache.find(e,t))?void 0:i.state},t.removeQueries=function(e,t){var i=(0,a.I6)(e,t)[0],n=this.queryCache;s.V.batch((function(){n.findAll(i).forEach((function(e){n.remove(e)}))}))},t.resetQueries=function(e,t,i){var r=this,o=(0,a.I6)(e,t,i),l=o[0],c=o[1],u=this.queryCache,h=(0,n.Z)({},l,{active:!0});return s.V.batch((function(){return u.findAll(l).forEach((function(e){e.reset()})),r.refetchQueries(h,c)}))},t.cancelQueries=function(e,t,i){var n=this,r=(0,a.I6)(e,t,i),o=r[0],l=r[1],c=void 0===l?{}:l;void 0===c.revert&&(c.revert=!0);var u=s.V.batch((function(){return n.queryCache.findAll(o).map((function(e){return e.cancel(c)}))}));return Promise.all(u).then(a.ZT).catch(a.ZT)},t.invalidateQueries=function(e,t,i){var r,o,l,c=this,u=(0,a.I6)(e,t,i),h=u[0],d=u[1],f=(0,n.Z)({},h,{active:null==(r=null!=(o=h.refetchActive)?o:h.active)||r,inactive:null!=(l=h.refetchInactive)&&l});return s.V.batch((function(){return c.queryCache.findAll(h).forEach((function(e){e.invalidate()})),c.refetchQueries(f,d)}))},t.refetchQueries=function(e,t,i){var r=this,o=(0,a.I6)(e,t,i),l=o[0],c=o[1],u=s.V.batch((function(){return r.queryCache.findAll(l).map((function(e){return e.fetch(void 0,(0,n.Z)({},c,{meta:{refetchPage:null==l?void 0:l.refetchPage}}))}))})),h=Promise.all(u).then(a.ZT);return(null==c?void 0:c.throwOnError)||(h=h.catch(a.ZT)),h},t.fetchQuery=function(e,t,i){var n=(0,a._v)(e,t,i),r=this.defaultQueryOptions(n);void 0===r.retry&&(r.retry=!1);var s=this.queryCache.build(this,r);return s.isStaleByTime(r.staleTime)?s.fetch(r):Promise.resolve(s.state.data)},t.prefetchQuery=function(e,t,i){return this.fetchQuery(e,t,i).then(a.ZT).catch(a.ZT)},t.fetchInfiniteQuery=function(e,t,i){var n=(0,a._v)(e,t,i);return n.behavior={onFetch:function(e){e.fetchFn=function(){var t,i,n,r,s,o,c,u,h,d=null==(t=e.fetchOptions)||null==(i=t.meta)?void 0:i.refetchPage,f=null==(n=e.fetchOptions)||null==(r=n.meta)?void 0:r.fetchMore,p=null==f?void 0:f.pageParam,g="forward"===(null==f?void 0:f.direction),v="backward"===(null==f?void 0:f.direction),x=(null==(s=e.state.data)?void 0:s.pages)||[],b=(null==(o=e.state.data)?void 0:o.pageParams)||[],y=(0,a.G9)(),w=null==y?void 0:y.signal,k=b,S=!1,A=e.options.queryFn||function(){return Promise.reject("Missing queryFn")},C=function(e,t,i,n){return k=n?[t].concat(k):[].concat(k,[t]),n?[i].concat(e):[].concat(e,[i])},E=function(t,i,n,a){if(S)return Promise.reject("Cancelled");if(void 0===n&&!i&&t.length)return Promise.resolve(t);var r={queryKey:e.queryKey,signal:w,pageParam:n,meta:e.meta},s=A(r),o=Promise.resolve(s).then((function(e){return C(t,n,e,a)}));return(0,l.LE)(s)&&(o.cancel=s.cancel),o};if(x.length)if(g){var P=void 0!==p,T=P?p:m(e.options,x);c=E(x,P,T)}else if(v){var L=void 0!==p,I=L?p:(u=e.options,h=x,null==u.getPreviousPageParam?void 0:u.getPreviousPageParam(h[0],h));c=E(x,L,I,!0)}else!function(){k=[];var t=void 0===e.options.getNextPageParam,i=!d||!x[0]||d(x[0],0,x);c=i?E([],t,b[0]):Promise.resolve(C([],b[0],x[0]));for(var n=function(i){c=c.then((function(n){if(!d||!x[i]||d(x[i],i,x)){var a=t?b[i]:m(e.options,n);return E(n,t,a)}return Promise.resolve(C(n,b[i],x[i]))}))},a=1;a<x.length;a++)n(a)}();else c=E([]);var M=c.then((function(e){return{pages:e,pageParams:k}}));return M.cancel=function(){S=!0,null==y||y.abort(),(0,l.LE)(c)&&c.cancel()},M}}},this.fetchQuery(n)},t.prefetchInfiniteQuery=function(e,t,i){return this.fetchInfiniteQuery(e,t,i).then(a.ZT).catch(a.ZT)},t.cancelMutations=function(){var e=this,t=s.V.batch((function(){return e.mutationCache.getAll().map((function(e){return e.cancel()}))}));return Promise.all(t).then(a.ZT).catch(a.ZT)},t.resumePausedMutations=function(){return this.getMutationCache().resumePausedMutations()},t.executeMutation=function(e){return this.mutationCache.build(this,e).execute()},t.getQueryCache=function(){return this.queryCache},t.getMutationCache=function(){return this.mutationCache},t.getDefaultOptions=function(){return this.defaultOptions},t.setDefaultOptions=function(e){this.defaultOptions=e},t.setQueryDefaults=function(e,t){var i=this.queryDefaults.find((function(t){return(0,a.yF)(e)===(0,a.yF)(t.queryKey)}));i?i.defaultOptions=t:this.queryDefaults.push({queryKey:e,defaultOptions:t})},t.getQueryDefaults=function(e){var t;return e?null==(t=this.queryDefaults.find((function(t){return(0,a.to)(e,t.queryKey)})))?void 0:t.defaultOptions:void 0},t.setMutationDefaults=function(e,t){var i=this.mutationDefaults.find((function(t){return(0,a.yF)(e)===(0,a.yF)(t.mutationKey)}));i?i.defaultOptions=t:this.mutationDefaults.push({mutationKey:e,defaultOptions:t})},t.getMutationDefaults=function(e){var t;return e?null==(t=this.mutationDefaults.find((function(t){return(0,a.to)(e,t.mutationKey)})))?void 0:t.defaultOptions:void 0},t.defaultQueryOptions=function(e){if(null==e?void 0:e._defaulted)return e;var t=(0,n.Z)({},this.defaultOptions.queries,this.getQueryDefaults(null==e?void 0:e.queryKey),e,{_defaulted:!0});return!t.queryHash&&t.queryKey&&(t.queryHash=(0,a.Rm)(t.queryKey,t)),t},t.defaultQueryObserverOptions=function(e){return this.defaultQueryOptions(e)},t.defaultMutationOptions=function(e){return(null==e?void 0:e._defaulted)?e:(0,n.Z)({},this.defaultOptions.mutations,this.getMutationDefaults(null==e?void 0:e.mutationKey),e,{_defaulted:!0})},t.clear=function(){this.queryCache.clear(),this.mutationCache.clear()},e}()},252:(e,t,i)=>{"use strict";i.d(t,{LE:()=>o,DV:()=>c,m4:()=>u});var n=i(852),a=i(68),r=i(288);function s(e){return Math.min(1e3*Math.pow(2,e),3e4)}function o(e){return"function"==typeof(null==e?void 0:e.cancel)}var l=function(e){this.revert=null==e?void 0:e.revert,this.silent=null==e?void 0:e.silent};function c(e){return e instanceof l}var u=function(e){var t,i,c,u,h=this,d=!1;this.abort=e.abort,this.cancel=function(e){return null==t?void 0:t(e)},this.cancelRetry=function(){d=!0},this.continueRetry=function(){d=!1},this.continue=function(){return null==i?void 0:i()},this.failureCount=0,this.isPaused=!1,this.isResolved=!1,this.isTransportCancelable=!1,this.promise=new Promise((function(e,t){c=e,u=t}));var f=function(t){h.isResolved||(h.isResolved=!0,null==e.onSuccess||e.onSuccess(t),null==i||i(),c(t))},p=function(t){h.isResolved||(h.isResolved=!0,null==e.onError||e.onError(t),null==i||i(),u(t))};!function c(){if(!h.isResolved){var u;try{u=e.fn()}catch(e){u=Promise.reject(e)}t=function(e){if(!h.isResolved&&(p(new l(e)),null==h.abort||h.abort(),o(u)))try{u.cancel()}catch(e){}},h.isTransportCancelable=o(u),Promise.resolve(u).then(f).catch((function(t){var o,l;if(!h.isResolved){var u=null!=(o=e.retry)?o:3,f=null!=(l=e.retryDelay)?l:s,g="function"==typeof f?f(h.failureCount,t):f,m=!0===u||"number"==typeof u&&h.failureCount<u||"function"==typeof u&&u(h.failureCount,t);!d&&m?(h.failureCount++,null==e.onFail||e.onFail(h.failureCount,t),(0,r.Gh)(g).then((function(){if(!n.j.isFocused()||!a.N.isOnline())return new Promise((function(t){i=t,h.isPaused=!0,null==e.onPause||e.onPause()})).then((function(){i=void 0,h.isPaused=!1,null==e.onContinue||e.onContinue()}))})).then((function(){d?p(t):c()}))):p(t)}}))}}()}},943:(e,t,i)=>{"use strict";i.d(t,{l:()=>n});var n=function(){function e(){this.listeners=[]}var t=e.prototype;return t.subscribe=function(e){var t=this,i=e||function(){};return this.listeners.push(i),this.onSubscribe(),function(){t.listeners=t.listeners.filter((function(e){return e!==i})),t.onUnsubscribe()}},t.hasListeners=function(){return this.listeners.length>0},t.onSubscribe=function(){},t.onUnsubscribe=function(){},e}()},755:()=>{},288:(e,t,i)=>{"use strict";i.d(t,{sk:()=>a,ZT:()=>r,SE:()=>s,PN:()=>o,mc:()=>l,Kp:()=>c,_v:()=>u,I6:()=>h,_x:()=>d,X7:()=>f,Rm:()=>p,yF:()=>g,to:()=>m,Q$:()=>x,VS:()=>b,Gh:()=>S,A4:()=>A,G9:()=>C});var n=i(462),a="undefined"==typeof window;function r(){}function s(e,t){return"function"==typeof e?e(t):e}function o(e){return"number"==typeof e&&e>=0&&e!==1/0}function l(e){return Array.isArray(e)?e:[e]}function c(e,t){return Math.max(e+(t||0)-Date.now(),0)}function u(e,t,i){return k(e)?"function"==typeof t?(0,n.Z)({},i,{queryKey:e,queryFn:t}):(0,n.Z)({},t,{queryKey:e}):e}function h(e,t,i){return k(e)?[(0,n.Z)({},t,{queryKey:e}),i]:[e||{},t]}function d(e,t){var i=e.active,n=e.exact,a=e.fetching,r=e.inactive,s=e.predicate,o=e.queryKey,l=e.stale;if(k(o))if(n){if(t.queryHash!==p(o,t.options))return!1}else if(!m(t.queryKey,o))return!1;var c=function(e,t){return!0===e&&!0===t||null==e&&null==t?"all":!1===e&&!1===t?"none":(null!=e?e:!t)?"active":"inactive"}(i,r);if("none"===c)return!1;if("all"!==c){var u=t.isActive();if("active"===c&&!u)return!1;if("inactive"===c&&u)return!1}return!("boolean"==typeof l&&t.isStale()!==l||"boolean"==typeof a&&t.isFetching()!==a||s&&!s(t))}function f(e,t){var i=e.exact,n=e.fetching,a=e.predicate,r=e.mutationKey;if(k(r)){if(!t.options.mutationKey)return!1;if(i){if(g(t.options.mutationKey)!==g(r))return!1}else if(!m(t.options.mutationKey,r))return!1}return!("boolean"==typeof n&&"loading"===t.state.status!==n||a&&!a(t))}function p(e,t){return((null==t?void 0:t.queryKeyHashFn)||g)(e)}function g(e){var t;return t=l(e),JSON.stringify(t,(function(e,t){return y(t)?Object.keys(t).sort().reduce((function(e,i){return e[i]=t[i],e}),{}):t}))}function m(e,t){return v(l(e),l(t))}function v(e,t){return e===t||typeof e==typeof t&&!(!e||!t||"object"!=typeof e||"object"!=typeof t)&&!Object.keys(t).some((function(i){return!v(e[i],t[i])}))}function x(e,t){if(e===t)return e;var i=Array.isArray(e)&&Array.isArray(t);if(i||y(e)&&y(t)){for(var n=i?e.length:Object.keys(e).length,a=i?t:Object.keys(t),r=a.length,s=i?[]:{},o=0,l=0;l<r;l++){var c=i?l:a[l];s[c]=x(e[c],t[c]),s[c]===e[c]&&o++}return n===r&&o===n?e:s}return t}function b(e,t){if(e&&!t||t&&!e)return!1;for(var i in e)if(e[i]!==t[i])return!1;return!0}function y(e){if(!w(e))return!1;var t=e.constructor;if(void 0===t)return!0;var i=t.prototype;return!!w(i)&&!!i.hasOwnProperty("isPrototypeOf")}function w(e){return"[object Object]"===Object.prototype.toString.call(e)}function k(e){return"string"==typeof e||Array.isArray(e)}function S(e){return new Promise((function(t){setTimeout(t,e)}))}function A(e){Promise.resolve().then(e).catch((function(e){return setTimeout((function(){throw e}))}))}function C(){if("function"==typeof AbortController)return new AbortController}},767:(e,t,i)=>{"use strict";i.d(t,{QueryClient:()=>n.Su,QueryClientProvider:()=>a.aH,useQuery:()=>a.aM});var n=i(747);i.o(n,"QueryClientProvider")&&i.d(t,{QueryClientProvider:function(){return n.QueryClientProvider}}),i.o(n,"useQuery")&&i.d(t,{useQuery:function(){return n.useQuery}});var a=i(66)},66:(e,t,i)=>{"use strict";i.d(t,{aH:()=>h,aM:()=>A});var n=i(101),a=i(935).unstable_batchedUpdates;n.V.setBatchNotifyFunction(a);var r=i(909),s=console;(0,r.E)(s);var o=i(294),l=o.createContext(void 0),c=o.createContext(!1);function u(e){return e&&"undefined"!=typeof window?(window.ReactQueryClientContext||(window.ReactQueryClientContext=l),window.ReactQueryClientContext):l}var h=function(e){var t=e.client,i=e.contextSharing,n=void 0!==i&&i,a=e.children;o.useEffect((function(){return t.mount(),function(){t.unmount()}}),[t]);var r=u(n);return o.createElement(c.Provider,{value:n},o.createElement(r.Provider,{value:t},a))},d=i(462),f=i(721),p=i(288),g=i(852),m=i(943),v=i(252),x=function(e){function t(t,i){var n;return(n=e.call(this)||this).client=t,n.options=i,n.trackedProps=[],n.previousSelectError=null,n.bindMethods(),n.setOptions(i),n}(0,f.Z)(t,e);var i=t.prototype;return i.bindMethods=function(){this.remove=this.remove.bind(this),this.refetch=this.refetch.bind(this)},i.onSubscribe=function(){1===this.listeners.length&&(this.currentQuery.addObserver(this),b(this.currentQuery,this.options)&&this.executeFetch(),this.updateTimers())},i.onUnsubscribe=function(){this.listeners.length||this.destroy()},i.shouldFetchOnReconnect=function(){return e=this.currentQuery,!1!==(t=this.options).enabled&&("always"===t.refetchOnReconnect||!1!==t.refetchOnReconnect&&w(e,t));var e,t},i.shouldFetchOnWindowFocus=function(){return e=this.currentQuery,!1!==(t=this.options).enabled&&("always"===t.refetchOnWindowFocus||!1!==t.refetchOnWindowFocus&&w(e,t));var e,t},i.destroy=function(){this.listeners=[],this.clearTimers(),this.currentQuery.removeObserver(this)},i.setOptions=function(e,t){var i=this.options,n=this.currentQuery;if(this.options=this.client.defaultQueryObserverOptions(e),void 0!==this.options.enabled&&"boolean"!=typeof this.options.enabled)throw new Error("Expected enabled to be a boolean");this.options.queryKey||(this.options.queryKey=i.queryKey),this.updateQuery();var a=this.hasListeners();a&&y(this.currentQuery,n,this.options,i)&&this.executeFetch(),this.updateResult(t),!a||this.currentQuery===n&&this.options.enabled===i.enabled&&this.options.staleTime===i.staleTime||this.updateStaleTimeout();var r=this.computeRefetchInterval();!a||this.currentQuery===n&&this.options.enabled===i.enabled&&r===this.currentRefetchInterval||this.updateRefetchInterval(r)},i.getOptimisticResult=function(e){var t=this.client.defaultQueryObserverOptions(e),i=this.client.getQueryCache().build(this.client,t);return this.createResult(i,t)},i.getCurrentResult=function(){return this.currentResult},i.trackResult=function(e,t){var i=this,n={},a=function(e){i.trackedProps.includes(e)||i.trackedProps.push(e)};return Object.keys(e).forEach((function(t){Object.defineProperty(n,t,{configurable:!1,enumerable:!0,get:function(){return a(t),e[t]}})})),(t.useErrorBoundary||t.suspense)&&a("error"),n},i.getNextResult=function(e){var t=this;return new Promise((function(i,n){var a=t.subscribe((function(t){t.isFetching||(a(),t.isError&&(null==e?void 0:e.throwOnError)?n(t.error):i(t))}))}))},i.getCurrentQuery=function(){return this.currentQuery},i.remove=function(){this.client.getQueryCache().remove(this.currentQuery)},i.refetch=function(e){return this.fetch((0,d.Z)({},e,{meta:{refetchPage:null==e?void 0:e.refetchPage}}))},i.fetchOptimistic=function(e){var t=this,i=this.client.defaultQueryObserverOptions(e),n=this.client.getQueryCache().build(this.client,i);return n.fetch().then((function(){return t.createResult(n,i)}))},i.fetch=function(e){var t=this;return this.executeFetch(e).then((function(){return t.updateResult(),t.currentResult}))},i.executeFetch=function(e){this.updateQuery();var t=this.currentQuery.fetch(this.options,e);return(null==e?void 0:e.throwOnError)||(t=t.catch(p.ZT)),t},i.updateStaleTimeout=function(){var e=this;if(this.clearStaleTimeout(),!p.sk&&!this.currentResult.isStale&&(0,p.PN)(this.options.staleTime)){var t=(0,p.Kp)(this.currentResult.dataUpdatedAt,this.options.staleTime)+1;this.staleTimeoutId=setTimeout((function(){e.currentResult.isStale||e.updateResult()}),t)}},i.computeRefetchInterval=function(){var e;return"function"==typeof this.options.refetchInterval?this.options.refetchInterval(this.currentResult.data,this.currentQuery):null!=(e=this.options.refetchInterval)&&e},i.updateRefetchInterval=function(e){var t=this;this.clearRefetchInterval(),this.currentRefetchInterval=e,!p.sk&&!1!==this.options.enabled&&(0,p.PN)(this.currentRefetchInterval)&&0!==this.currentRefetchInterval&&(this.refetchIntervalId=setInterval((function(){(t.options.refetchIntervalInBackground||g.j.isFocused())&&t.executeFetch()}),this.currentRefetchInterval))},i.updateTimers=function(){this.updateStaleTimeout(),this.updateRefetchInterval(this.computeRefetchInterval())},i.clearTimers=function(){this.clearStaleTimeout(),this.clearRefetchInterval()},i.clearStaleTimeout=function(){clearTimeout(this.staleTimeoutId),this.staleTimeoutId=void 0},i.clearRefetchInterval=function(){clearInterval(this.refetchIntervalId),this.refetchIntervalId=void 0},i.createResult=function(e,t){var i,n=this.currentQuery,a=this.options,s=this.currentResult,o=this.currentResultState,l=this.currentResultOptions,c=e!==n,u=c?e.state:this.currentQueryInitialState,h=c?this.currentResult:this.previousQueryResult,d=e.state,f=d.dataUpdatedAt,g=d.error,m=d.errorUpdatedAt,v=d.isFetching,x=d.status,k=!1,S=!1;if(t.optimisticResults){var A=this.hasListeners(),C=!A&&b(e,t),E=A&&y(e,n,t,a);(C||E)&&(v=!0,f||(x="loading"))}if(t.keepPreviousData&&!d.dataUpdateCount&&(null==h?void 0:h.isSuccess)&&"error"!==x)i=h.data,f=h.dataUpdatedAt,x=h.status,k=!0;else if(t.select&&void 0!==d.data){var P;if(s&&d.data===(null==o?void 0:o.data)&&t.select===(null==(P=this.previousSelect)?void 0:P.fn)&&!this.previousSelectError)i=this.previousSelect.result;else try{i=t.select(d.data),!1!==t.structuralSharing&&(i=(0,p.Q$)(null==s?void 0:s.data,i)),this.previousSelect={fn:t.select,result:i},this.previousSelectError=null}catch(e){(0,r.j)().error(e),g=e,this.previousSelectError=e,m=Date.now(),x="error"}}else i=d.data;if(void 0!==t.placeholderData&&void 0===i&&("loading"===x||"idle"===x)){var T;if((null==s?void 0:s.isPlaceholderData)&&t.placeholderData===(null==l?void 0:l.placeholderData))T=s.data;else if(T="function"==typeof t.placeholderData?t.placeholderData():t.placeholderData,t.select&&void 0!==T)try{T=t.select(T),!1!==t.structuralSharing&&(T=(0,p.Q$)(null==s?void 0:s.data,T)),this.previousSelectError=null}catch(e){(0,r.j)().error(e),g=e,this.previousSelectError=e,m=Date.now(),x="error"}void 0!==T&&(x="success",i=T,S=!0)}return{status:x,isLoading:"loading"===x,isSuccess:"success"===x,isError:"error"===x,isIdle:"idle"===x,data:i,dataUpdatedAt:f,error:g,errorUpdatedAt:m,failureCount:d.fetchFailureCount,isFetched:d.dataUpdateCount>0||d.errorUpdateCount>0,isFetchedAfterMount:d.dataUpdateCount>u.dataUpdateCount||d.errorUpdateCount>u.errorUpdateCount,isFetching:v,isRefetching:v&&"loading"!==x,isLoadingError:"error"===x&&0===d.dataUpdatedAt,isPlaceholderData:S,isPreviousData:k,isRefetchError:"error"===x&&0!==d.dataUpdatedAt,isStale:w(e,t),refetch:this.refetch,remove:this.remove}},i.shouldNotifyListeners=function(e,t){if(!t)return!0;var i=this.options,n=i.notifyOnChangeProps,a=i.notifyOnChangePropsExclusions;if(!n&&!a)return!0;if("tracked"===n&&!this.trackedProps.length)return!0;var r="tracked"===n?this.trackedProps:n;return Object.keys(e).some((function(i){var n=i,s=e[n]!==t[n],o=null==r?void 0:r.some((function(e){return e===i})),l=null==a?void 0:a.some((function(e){return e===i}));return s&&!l&&(!r||o)}))},i.updateResult=function(e){var t=this.currentResult;if(this.currentResult=this.createResult(this.currentQuery,this.options),this.currentResultState=this.currentQuery.state,this.currentResultOptions=this.options,!(0,p.VS)(this.currentResult,t)){var i={cache:!0};!1!==(null==e?void 0:e.listeners)&&this.shouldNotifyListeners(this.currentResult,t)&&(i.listeners=!0),this.notify((0,d.Z)({},i,e))}},i.updateQuery=function(){var e=this.client.getQueryCache().build(this.client,this.options);if(e!==this.currentQuery){var t=this.currentQuery;this.currentQuery=e,this.currentQueryInitialState=e.state,this.previousQueryResult=this.currentResult,this.hasListeners()&&(null==t||t.removeObserver(this),e.addObserver(this))}},i.onQueryUpdate=function(e){var t={};"success"===e.type?t.onSuccess=!0:"error"!==e.type||(0,v.DV)(e.error)||(t.onError=!0),this.updateResult(t),this.hasListeners()&&this.updateTimers()},i.notify=function(e){var t=this;n.V.batch((function(){e.onSuccess?(null==t.options.onSuccess||t.options.onSuccess(t.currentResult.data),null==t.options.onSettled||t.options.onSettled(t.currentResult.data,null)):e.onError&&(null==t.options.onError||t.options.onError(t.currentResult.error),null==t.options.onSettled||t.options.onSettled(void 0,t.currentResult.error)),e.listeners&&t.listeners.forEach((function(e){e(t.currentResult)})),e.cache&&t.client.getQueryCache().notify({query:t.currentQuery,type:"observerResultsUpdated"})}))},t}(m.l);function b(e,t){return function(e,t){return!(!1===t.enabled||e.state.dataUpdatedAt||"error"===e.state.status&&!1===t.retryOnMount)}(e,t)||function(e,t){return!1!==t.enabled&&e.state.dataUpdatedAt>0&&("always"===t.refetchOnMount||!1!==t.refetchOnMount&&w(e,t))}(e,t)}function y(e,t,i,n){return!1!==i.enabled&&(e!==t||!1===n.enabled)&&(!i.suspense||"error"!==e.state.status)&&w(e,i)}function w(e,t){return e.isStaleByTime(t.staleTime)}var k,S=o.createContext((k=!1,{clearReset:function(){k=!1},reset:function(){k=!0},isReset:function(){return k}}));function A(e,t,i){return function(e,t){var i=o.useRef(!1),a=o.useState(0)[1],r=function(){var e=o.useContext(u(o.useContext(c)));if(!e)throw new Error("No QueryClient set, use QueryClientProvider to set one");return e}(),s=o.useContext(S),l=r.defaultQueryObserverOptions(e);l.optimisticResults=!0,l.onError&&(l.onError=n.V.batchCalls(l.onError)),l.onSuccess&&(l.onSuccess=n.V.batchCalls(l.onSuccess)),l.onSettled&&(l.onSettled=n.V.batchCalls(l.onSettled)),l.suspense&&("number"!=typeof l.staleTime&&(l.staleTime=1e3),0===l.cacheTime&&(l.cacheTime=1)),(l.suspense||l.useErrorBoundary)&&(s.isReset()||(l.retryOnMount=!1));var h,d,f,p=o.useState((function(){return new t(r,l)}))[0],g=p.getOptimisticResult(l);if(o.useEffect((function(){i.current=!0,s.clearReset();var e=p.subscribe(n.V.batchCalls((function(){i.current&&a((function(e){return e+1}))})));return p.updateResult(),function(){i.current=!1,e()}}),[s,p]),o.useEffect((function(){p.setOptions(l,{listeners:!1})}),[l,p]),l.suspense&&g.isLoading)throw p.fetchOptimistic(l).then((function(e){var t=e.data;null==l.onSuccess||l.onSuccess(t),null==l.onSettled||l.onSettled(t,null)})).catch((function(e){s.clearReset(),null==l.onError||l.onError(e),null==l.onSettled||l.onSettled(void 0,e)}));if(g.isError&&!s.isReset()&&!g.isFetching&&(h=l.suspense,d=l.useErrorBoundary,f=g.error,"function"==typeof d?d(f):"boolean"==typeof d?d:h))throw g.error;return"tracked"===l.notifyOnChangeProps&&(g=p.trackResult(g,l)),g}((0,p._v)(e,t,i),x)}},524:(e,t,i)=>{"use strict";var n,a=i(294),r=(n=a)&&"object"==typeof n&&"default"in n?n.default:n;function s(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}var o=!("undefined"==typeof window||!window.document||!window.document.createElement);e.exports=function(e,t,i){if("function"!=typeof e)throw new Error("Expected reducePropsToState to be a function.");if("function"!=typeof t)throw new Error("Expected handleStateChangeOnClient to be a function.");if(void 0!==i&&"function"!=typeof i)throw new Error("Expected mapStateOnServer to either be undefined or a function.");return function(n){if("function"!=typeof n)throw new Error("Expected WrappedComponent to be a React component.");var l,c=[];function u(){l=e(c.map((function(e){return e.props}))),h.canUseDOM?t(l):i&&(l=i(l))}var h=function(e){var t,i;function a(){return e.apply(this,arguments)||this}i=e,(t=a).prototype=Object.create(i.prototype),t.prototype.constructor=t,t.__proto__=i,a.peek=function(){return l},a.rewind=function(){if(a.canUseDOM)throw new Error("You may only call rewind() on the server. Call peek() to read the current state.");var e=l;return l=void 0,c=[],e};var s=a.prototype;return s.UNSAFE_componentWillMount=function(){c.push(this),u()},s.componentDidUpdate=function(){u()},s.componentWillUnmount=function(){var e=c.indexOf(this);c.splice(e,1),u()},s.render=function(){return r.createElement(n,this.props)},a}(a.PureComponent);return s(h,"displayName","SideEffect("+function(e){return e.displayName||e.name||"Component"}(n)+")"),s(h,"canUseDOM",o),h}}},408:(e,t,i)=>{"use strict";var n=i(418),a=60103,r=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var s=60109,o=60110,l=60112;t.Suspense=60113;var c=60115,u=60116;if("function"==typeof Symbol&&Symbol.for){var h=Symbol.for;a=h("react.element"),r=h("react.portal"),t.Fragment=h("react.fragment"),t.StrictMode=h("react.strict_mode"),t.Profiler=h("react.profiler"),s=h("react.provider"),o=h("react.context"),l=h("react.forward_ref"),t.Suspense=h("react.suspense"),c=h("react.memo"),u=h("react.lazy")}var d="function"==typeof Symbol&&Symbol.iterator;function f(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,i=1;i<arguments.length;i++)t+="&args[]="+encodeURIComponent(arguments[i]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var p={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},g={};function m(e,t,i){this.props=e,this.context=t,this.refs=g,this.updater=i||p}function v(){}function x(e,t,i){this.props=e,this.context=t,this.refs=g,this.updater=i||p}m.prototype.isReactComponent={},m.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(f(85));this.updater.enqueueSetState(this,e,t,"setState")},m.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},v.prototype=m.prototype;var b=x.prototype=new v;b.constructor=x,n(b,m.prototype),b.isPureReactComponent=!0;var y={current:null},w=Object.prototype.hasOwnProperty,k={key:!0,ref:!0,__self:!0,__source:!0};function S(e,t,i){var n,r={},s=null,o=null;if(null!=t)for(n in void 0!==t.ref&&(o=t.ref),void 0!==t.key&&(s=""+t.key),t)w.call(t,n)&&!k.hasOwnProperty(n)&&(r[n]=t[n]);var l=arguments.length-2;if(1===l)r.children=i;else if(1<l){for(var c=Array(l),u=0;u<l;u++)c[u]=arguments[u+2];r.children=c}if(e&&e.defaultProps)for(n in l=e.defaultProps)void 0===r[n]&&(r[n]=l[n]);return{$$typeof:a,type:e,key:s,ref:o,props:r,_owner:y.current}}function A(e){return"object"==typeof e&&null!==e&&e.$$typeof===a}var C=/\/+/g;function E(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function P(e,t,i,n,s){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var l=!1;if(null===e)l=!0;else switch(o){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case a:case r:l=!0}}if(l)return s=s(l=e),e=""===n?"."+E(l,0):n,Array.isArray(s)?(i="",null!=e&&(i=e.replace(C,"$&/")+"/"),P(s,t,i,"",(function(e){return e}))):null!=s&&(A(s)&&(s=function(e,t){return{$$typeof:a,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(s,i+(!s.key||l&&l.key===s.key?"":(""+s.key).replace(C,"$&/")+"/")+e)),t.push(s)),1;if(l=0,n=""===n?".":n+":",Array.isArray(e))for(var c=0;c<e.length;c++){var u=n+E(o=e[c],c);l+=P(o,t,i,u,s)}else if(u=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e),"function"==typeof u)for(e=u.call(e),c=0;!(o=e.next()).done;)l+=P(o=o.value,t,i,u=n+E(o,c++),s);else if("object"===o)throw t=""+e,Error(f(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return l}function T(e,t,i){if(null==e)return e;var n=[],a=0;return P(e,n,"","",(function(e){return t.call(i,e,a++)})),n}function L(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var I={current:null};function M(){var e=I.current;if(null===e)throw Error(f(321));return e}var O={ReactCurrentDispatcher:I,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:y,IsSomeRendererActing:{current:!1},assign:n};t.Children={map:T,forEach:function(e,t,i){T(e,(function(){t.apply(this,arguments)}),i)},count:function(e){var t=0;return T(e,(function(){t++})),t},toArray:function(e){return T(e,(function(e){return e}))||[]},only:function(e){if(!A(e))throw Error(f(143));return e}},t.Component=m,t.PureComponent=x,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=O,t.cloneElement=function(e,t,i){if(null==e)throw Error(f(267,e));var r=n({},e.props),s=e.key,o=e.ref,l=e._owner;if(null!=t){if(void 0!==t.ref&&(o=t.ref,l=y.current),void 0!==t.key&&(s=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(u in t)w.call(t,u)&&!k.hasOwnProperty(u)&&(r[u]=void 0===t[u]&&void 0!==c?c[u]:t[u])}var u=arguments.length-2;if(1===u)r.children=i;else if(1<u){c=Array(u);for(var h=0;h<u;h++)c[h]=arguments[h+2];r.children=c}return{$$typeof:a,type:e.type,key:s,ref:o,props:r,_owner:l}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:o,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},t.createElement=S,t.createFactory=function(e){var t=S.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:l,render:e}},t.isValidElement=A,t.lazy=function(e){return{$$typeof:u,_payload:{_status:-1,_result:e},_init:L}},t.memo=function(e,t){return{$$typeof:c,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return M().useCallback(e,t)},t.useContext=function(e,t){return M().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return M().useEffect(e,t)},t.useImperativeHandle=function(e,t,i){return M().useImperativeHandle(e,t,i)},t.useLayoutEffect=function(e,t){return M().useLayoutEffect(e,t)},t.useMemo=function(e,t){return M().useMemo(e,t)},t.useReducer=function(e,t,i){return M().useReducer(e,t,i)},t.useRef=function(e){return M().useRef(e)},t.useState=function(e){return M().useState(e)},t.version="17.0.2"},294:(e,t,i)=>{"use strict";e.exports=i(408)},53:(e,t)=>{"use strict";var i,n,a,r;if("object"==typeof performance&&"function"==typeof performance.now){var s=performance;t.unstable_now=function(){return s.now()}}else{var o=Date,l=o.now();t.unstable_now=function(){return o.now()-l}}if("undefined"==typeof window||"function"!=typeof MessageChannel){var c=null,u=null,h=function(){if(null!==c)try{var e=t.unstable_now();c(!0,e),c=null}catch(e){throw setTimeout(h,0),e}};i=function(e){null!==c?setTimeout(i,0,e):(c=e,setTimeout(h,0))},n=function(e,t){u=setTimeout(e,t)},a=function(){clearTimeout(u)},t.unstable_shouldYield=function(){return!1},r=t.unstable_forceFrameRate=function(){}}else{var d=window.setTimeout,f=window.clearTimeout;if("undefined"!=typeof console){var p=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!=typeof p&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var g=!1,m=null,v=-1,x=5,b=0;t.unstable_shouldYield=function(){return t.unstable_now()>=b},r=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):x=0<e?Math.floor(1e3/e):5};var y=new MessageChannel,w=y.port2;y.port1.onmessage=function(){if(null!==m){var e=t.unstable_now();b=e+x;try{m(!0,e)?w.postMessage(null):(g=!1,m=null)}catch(e){throw w.postMessage(null),e}}else g=!1},i=function(e){m=e,g||(g=!0,w.postMessage(null))},n=function(e,i){v=d((function(){e(t.unstable_now())}),i)},a=function(){f(v),v=-1}}function k(e,t){var i=e.length;e.push(t);e:for(;;){var n=i-1>>>1,a=e[n];if(!(void 0!==a&&0<C(a,t)))break e;e[n]=t,e[i]=a,i=n}}function S(e){return void 0===(e=e[0])?null:e}function A(e){var t=e[0];if(void 0!==t){var i=e.pop();if(i!==t){e[0]=i;e:for(var n=0,a=e.length;n<a;){var r=2*(n+1)-1,s=e[r],o=r+1,l=e[o];if(void 0!==s&&0>C(s,i))void 0!==l&&0>C(l,s)?(e[n]=l,e[o]=i,n=o):(e[n]=s,e[r]=i,n=r);else{if(!(void 0!==l&&0>C(l,i)))break e;e[n]=l,e[o]=i,n=o}}}return t}return null}function C(e,t){var i=e.sortIndex-t.sortIndex;return 0!==i?i:e.id-t.id}var E=[],P=[],T=1,L=null,I=3,M=!1,O=!1,z=!1;function R(e){for(var t=S(P);null!==t;){if(null===t.callback)A(P);else{if(!(t.startTime<=e))break;A(P),t.sortIndex=t.expirationTime,k(E,t)}t=S(P)}}function F(e){if(z=!1,R(e),!O)if(null!==S(E))O=!0,i(N);else{var t=S(P);null!==t&&n(F,t.startTime-e)}}function N(e,i){O=!1,z&&(z=!1,a()),M=!0;var r=I;try{for(R(i),L=S(E);null!==L&&(!(L.expirationTime>i)||e&&!t.unstable_shouldYield());){var s=L.callback;if("function"==typeof s){L.callback=null,I=L.priorityLevel;var o=s(L.expirationTime<=i);i=t.unstable_now(),"function"==typeof o?L.callback=o:L===S(E)&&A(E),R(i)}else A(E);L=S(E)}if(null!==L)var l=!0;else{var c=S(P);null!==c&&n(F,c.startTime-i),l=!1}return l}finally{L=null,I=r,M=!1}}var D=r;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){O||M||(O=!0,i(N))},t.unstable_getCurrentPriorityLevel=function(){return I},t.unstable_getFirstCallbackNode=function(){return S(E)},t.unstable_next=function(e){switch(I){case 1:case 2:case 3:var t=3;break;default:t=I}var i=I;I=t;try{return e()}finally{I=i}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=D,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var i=I;I=e;try{return t()}finally{I=i}},t.unstable_scheduleCallback=function(e,r,s){var o=t.unstable_now();switch(s="object"==typeof s&&null!==s&&"number"==typeof(s=s.delay)&&0<s?o+s:o,e){case 1:var l=-1;break;case 2:l=250;break;case 5:l=1073741823;break;case 4:l=1e4;break;default:l=5e3}return e={id:T++,callback:r,priorityLevel:e,startTime:s,expirationTime:l=s+l,sortIndex:-1},s>o?(e.sortIndex=s,k(P,e),null===S(E)&&e===S(P)&&(z?a():z=!0,n(F,s-o))):(e.sortIndex=l,k(E,e),O||M||(O=!0,i(N))),e},t.unstable_wrapCallback=function(e){var t=I;return function(){var i=I;I=t;try{return e.apply(this,arguments)}finally{I=i}}}},840:(e,t,i)=>{"use strict";e.exports=i(53)},774:e=>{e.exports=function(e,t,i,n){var a=i?i.call(n,e,t):void 0;if(void 0!==a)return!!a;if(e===t)return!0;if("object"!=typeof e||!e||"object"!=typeof t||!t)return!1;var r=Object.keys(e),s=Object.keys(t);if(r.length!==s.length)return!1;for(var o=Object.prototype.hasOwnProperty.bind(t),l=0;l<r.length;l++){var c=r[l];if(!o(c))return!1;var u=e[c],h=t[c];if(!1===(a=i?i.call(n,u,h,c):void 0)||void 0===a&&u!==h)return!1}return!0}},379:e=>{"use strict";var t=[];function i(e){for(var i=-1,n=0;n<t.length;n++)if(t[n].identifier===e){i=n;break}return i}function n(e,n){for(var r={},s=[],o=0;o<e.length;o++){var l=e[o],c=n.base?l[0]+n.base:l[0],u=r[c]||0,h="".concat(c," ").concat(u);r[c]=u+1;var d=i(h),f={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==d)t[d].references++,t[d].updater(f);else{var p=a(f,n);n.byIndex=o,t.splice(o,0,{identifier:h,updater:p,references:1})}s.push(h)}return s}function a(e,t){var i=t.domAPI(t);return i.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;i.update(e=t)}else i.remove()}}e.exports=function(e,a){var r=n(e=e||[],a=a||{});return function(e){e=e||[];for(var s=0;s<r.length;s++){var o=i(r[s]);t[o].references--}for(var l=n(e,a),c=0;c<r.length;c++){var u=i(r[c]);0===t[u].references&&(t[u].updater(),t.splice(u,1))}r=l}}},569:e=>{"use strict";var t={};e.exports=function(e,i){var n=function(e){if(void 0===t[e]){var i=document.querySelector(e);if(window.HTMLIFrameElement&&i instanceof window.HTMLIFrameElement)try{i=i.contentDocument.head}catch(e){i=null}t[e]=i}return t[e]}(e);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");n.appendChild(i)}},216:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,i)=>{"use strict";e.exports=function(e){var t=i.nc;t&&e.setAttribute("nonce",t)}},795:e=>{"use strict";e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(i){!function(e,t,i){var n="";i.supports&&(n+="@supports (".concat(i.supports,") {")),i.media&&(n+="@media ".concat(i.media," {"));var a=void 0!==i.layer;a&&(n+="@layer".concat(i.layer.length>0?" ".concat(i.layer):""," {")),n+=i.css,a&&(n+="}"),i.media&&(n+="}"),i.supports&&(n+="}");var r=i.sourceMap;r&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(n,e,t.options)}(t,e,i)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},462:(e,t,i)=>{"use strict";function n(){return n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var i=arguments[t];for(var n in i)Object.prototype.hasOwnProperty.call(i,n)&&(e[n]=i[n])}return e},n.apply(this,arguments)}i.d(t,{Z:()=>n})},721:(e,t,i)=>{"use strict";function n(e,t){return n=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},n(e,t)}function a(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,n(e,t)}i.d(t,{Z:()=>a})}},t={};function i(n){var a=t[n];if(void 0!==a)return a.exports;var r=t[n]={id:n,exports:{}};return e[n](r,r.exports,i),r.exports}i.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return i.d(t,{a:t}),t},i.d=(e,t)=>{for(var n in t)i.o(t,n)&&!i.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},i.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";var e=i(294),t=i(935),n=i(379),a=i.n(n),r=i(795),s=i.n(r),o=i(569),l=i.n(o),c=i(565),u=i.n(c),h=i(216),d=i.n(h),f=i(589),p=i.n(f),g=i(538),m={};m.styleTagTransform=p(),m.setAttributes=u(),m.insert=l().bind(null,"head"),m.domAPI=s(),m.insertStyleElement=d(),a()(g.Z,m),g.Z&&g.Z.locals&&g.Z.locals;var v=i(282),x={};x.styleTagTransform=p(),x.setAttributes=u(),x.insert=l().bind(null,"head"),x.domAPI=s(),x.insertStyleElement=d(),a()(v.Z,x),v.Z&&v.Z.locals&&v.Z.locals;var b=i(421),y={};y.styleTagTransform=p(),y.setAttributes=u(),y.insert=l().bind(null,"head"),y.domAPI=s(),y.insertStyleElement=d(),a()(b.Z,y),b.Z&&b.Z.locals&&b.Z.locals;var w,k=i(462),S=w||(w={});S.Pop="POP",S.Push="PUSH",S.Replace="REPLACE";function A(e){e.preventDefault(),e.returnValue=""}function C(){var e=[];return{get length(){return e.length},push:function(t){return e.push(t),function(){e=e.filter((function(e){return e!==t}))}},call:function(t){e.forEach((function(e){return e&&e(t)}))}}}function E(e){var t=e.pathname;t=void 0===t?"/":t;var i=e.search;return i=void 0===i?"":i,e=void 0===(e=e.hash)?"":e,i&&"?"!==i&&(t+="?"===i.charAt(0)?i:"?"+i),e&&"#"!==e&&(t+="#"===e.charAt(0)?e:"#"+e),t}function P(e){var t={};if(e){var i=e.indexOf("#");0<=i&&(t.hash=e.substr(i),e=e.substr(0,i)),0<=(i=e.indexOf("?"))&&(t.search=e.substr(i),e=e.substr(0,i)),e&&(t.pathname=e)}return t}function T(e,t){if(!e)throw new Error(t)}const L=(0,e.createContext)(null),I=(0,e.createContext)(null),M=(0,e.createContext)({outlet:null,matches:[]});function O(t){return function(t){let i=(0,e.useContext)(M).outlet;return i?(0,e.createElement)(X.Provider,{value:t},i):i}(t.context)}function z(e){T(!1)}function R(t){let{basename:i="/",children:n=null,location:a,navigationType:r=w.Pop,navigator:s,static:o=!1}=t;N()&&T(!1);let l=Z(i),c=(0,e.useMemo)((()=>({basename:l,navigator:s,static:o})),[l,s,o]);"string"==typeof a&&(a=P(a));let{pathname:u="/",search:h="",hash:d="",state:f=null,key:p="default"}=a,g=(0,e.useMemo)((()=>{let e=q(u,l);return null==e?null:{pathname:e,search:h,hash:d,state:f,key:p}}),[l,u,h,d,f,p]);return null==g?null:(0,e.createElement)(L.Provider,{value:c},(0,e.createElement)(I.Provider,{children:n,value:{location:g,navigationType:r}}))}function F(t){let{children:i,location:n}=t;return function(t,i){N()||T(!1);let{matches:n}=(0,e.useContext)(M),a=n[n.length-1],r=a?a.params:{},s=(a&&a.pathname,a?a.pathnameBase:"/");a&&a.route;let o,l=D();if(i){var c;let e="string"==typeof i?P(i):i;"/"===s||(null==(c=e.pathname)?void 0:c.startsWith(s))||T(!1),o=e}else o=l;let u=o.pathname||"/",h=function(e,t,i){void 0===i&&(i="/");let n=q(("string"==typeof t?P(t):t).pathname||"/",i);if(null==n)return null;let a=B(e);!function(e){e.sort(((e,t)=>e.score!==t.score?t.score-e.score:function(e,t){return e.length===t.length&&e.slice(0,-1).every(((e,i)=>e===t[i]))?e[e.length-1]-t[t.length-1]:0}(e.routesMeta.map((e=>e.childrenIndex)),t.routesMeta.map((e=>e.childrenIndex)))))}(a);let r=null;for(let e=0;null==r&&e<a.length;++e)r=V(a[e],n);return r}(t,{pathname:"/"===s?u:u.slice(s.length)||"/"});return function(t,i){return void 0===i&&(i=[]),null==t?null:t.reduceRight(((n,a,r)=>(0,e.createElement)(M.Provider,{children:void 0!==a.route.element?a.route.element:(0,e.createElement)(O,null),value:{outlet:n,matches:i.concat(t.slice(0,r+1))}})),null)}(h&&h.map((e=>Object.assign({},e,{params:Object.assign({},r,e.params),pathname:$([s,e.pathname]),pathnameBase:"/"===e.pathnameBase?s:$([s,e.pathnameBase])}))),n)}(H(i),n)}function N(){return null!=(0,e.useContext)(I)}function D(){return N()||T(!1),(0,e.useContext)(I).location}const X=(0,e.createContext)(null);function Y(t){let{matches:i}=(0,e.useContext)(M),{pathname:n}=D(),a=JSON.stringify(i.map((e=>e.pathnameBase)));return(0,e.useMemo)((()=>U(t,JSON.parse(a),n)),[t,a,n])}function H(t){let i=[];return e.Children.forEach(t,(t=>{if(!(0,e.isValidElement)(t))return;if(t.type===e.Fragment)return void i.push.apply(i,H(t.props.children));t.type!==z&&T(!1);let n={caseSensitive:t.props.caseSensitive,element:t.props.element,index:t.props.index,path:t.props.path};t.props.children&&(n.children=H(t.props.children)),i.push(n)})),i}function B(e,t,i,n){return void 0===t&&(t=[]),void 0===i&&(i=[]),void 0===n&&(n=""),e.forEach(((e,a)=>{let r={relativePath:e.path||"",caseSensitive:!0===e.caseSensitive,childrenIndex:a,route:e};r.relativePath.startsWith("/")&&(r.relativePath.startsWith(n)||T(!1),r.relativePath=r.relativePath.slice(n.length));let s=$([n,r.relativePath]),o=i.concat(r);e.children&&e.children.length>0&&(!0===e.index&&T(!1),B(e.children,t,o,s)),(null!=e.path||e.index)&&t.push({path:s,score:j(s,e.index),routesMeta:o})})),t}const _=/^:\w+$/,W=e=>"*"===e;function j(e,t){let i=e.split("/"),n=i.length;return i.some(W)&&(n+=-2),t&&(n+=2),i.filter((e=>!W(e))).reduce(((e,t)=>e+(_.test(t)?3:""===t?1:10)),n)}function V(e,t){let{routesMeta:i}=e,n={},a="/",r=[];for(let e=0;e<i.length;++e){let s=i[e],o=e===i.length-1,l="/"===a?t:t.slice(a.length)||"/",c=G({path:s.relativePath,caseSensitive:s.caseSensitive,end:o},l);if(!c)return null;Object.assign(n,c.params);let u=s.route;r.push({params:n,pathname:$([a,c.pathname]),pathnameBase:$([a,c.pathnameBase]),route:u}),"/"!==c.pathnameBase&&(a=$([a,c.pathnameBase]))}return r}function G(e,t){"string"==typeof e&&(e={path:e,caseSensitive:!1,end:!0});let[i,n]=function(e,t,i){void 0===t&&(t=!1),void 0===i&&(i=!0);let n=[],a="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^$?{}|()[\]]/g,"\\$&").replace(/:(\w+)/g,((e,t)=>(n.push(t),"([^\\/]+)")));return e.endsWith("*")?(n.push("*"),a+="*"===e||"/*"===e?"(.*)$":"(?:\\/(.+)|\\/*)$"):a+=i?"\\/*$":"(?:\\b|\\/|$)",[new RegExp(a,t?void 0:"i"),n]}(e.path,e.caseSensitive,e.end),a=t.match(i);if(!a)return null;let r=a[0],s=r.replace(/(.)\/+$/,"$1"),o=a.slice(1);return{params:n.reduce(((e,t,i)=>{if("*"===t){let e=o[i]||"";s=r.slice(0,r.length-e.length).replace(/(.)\/+$/,"$1")}return e[t]=function(e,t){try{return decodeURIComponent(e)}catch(t){return e}}(o[i]||""),e}),{}),pathname:r,pathnameBase:s,pattern:e}}function U(e,t,i){let n,a="string"==typeof e?P(e):e,r=""===e||""===a.pathname?"/":a.pathname;if(null==r)n=i;else{let e=t.length-1;if(r.startsWith("..")){let t=r.split("/");for(;".."===t[0];)t.shift(),e-=1;a.pathname=t.join("/")}n=e>=0?t[e]:"/"}let s=function(e,t){void 0===t&&(t="/");let{pathname:i,search:n="",hash:a=""}="string"==typeof e?P(e):e,r=i?i.startsWith("/")?i:function(e,t){let i=t.replace(/\/+$/,"").split("/");return e.split("/").forEach((e=>{".."===e?i.length>1&&i.pop():"."!==e&&i.push(e)})),i.length>1?i.join("/"):"/"}(i,t):t;return{pathname:r,search:Q(n),hash:K(a)}}(a,n);return r&&"/"!==r&&r.endsWith("/")&&!s.pathname.endsWith("/")&&(s.pathname+="/"),s}function q(e,t){if("/"===t)return e;if(!e.toLowerCase().startsWith(t.toLowerCase()))return null;let i=e.charAt(t.length);return i&&"/"!==i?null:e.slice(t.length)||"/"}const $=e=>e.join("/").replace(/\/\/+/g,"/"),Z=e=>e.replace(/\/+$/,"").replace(/^\/*/,"/"),Q=e=>e&&"?"!==e?e.startsWith("?")?e:"?"+e:"",K=e=>e&&"#"!==e?e.startsWith("#")?e:"#"+e:"";function J(){return J=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var i=arguments[t];for(var n in i)Object.prototype.hasOwnProperty.call(i,n)&&(e[n]=i[n])}return e},J.apply(this,arguments)}const ee=["onClick","reloadDocument","replace","state","target","to"];function te(t){let{basename:i,children:n,window:a}=t,r=(0,e.useRef)();null==r.current&&(r.current=function(e){function t(){var e=s.location,t=o.state||{};return[t.idx,{pathname:e.pathname,search:e.search,hash:e.hash,state:t.usr||null,key:t.key||"default"}]}function i(e){return"string"==typeof e?e:E(e)}function n(e,t){return void 0===t&&(t=null),(0,k.Z)({pathname:h.pathname,hash:"",search:""},"string"==typeof e?P(e):e,{state:t,key:Math.random().toString(36).substr(2,8)})}function a(e){c=e,e=t(),u=e[0],h=e[1],d.call({action:c,location:h})}function r(e){o.go(e)}void 0===e&&(e={});var s=void 0===(e=e.window)?document.defaultView:e,o=s.history,l=null;s.addEventListener("popstate",(function(){if(l)f.call(l),l=null;else{var e=w.Pop,i=t(),n=i[0];if(i=i[1],f.length){if(null!=n){var s=u-n;s&&(l={action:e,location:i,retry:function(){r(-1*s)}},r(s))}}else a(e)}}));var c=w.Pop,u=(e=t())[0],h=e[1],d=C(),f=C();return null==u&&(u=0,o.replaceState((0,k.Z)({},o.state,{idx:u}),"")),{get action(){return c},get location(){return h},createHref:i,push:function e(t,r){var l=w.Push,c=n(t,r);if(!f.length||(f.call({action:l,location:c,retry:function(){e(t,r)}}),0)){var h=[{usr:c.state,key:c.key,idx:u+1},i(c)];c=h[0],h=h[1];try{o.pushState(c,"",h)}catch(e){s.location.assign(h)}a(l)}},replace:function e(t,r){var s=w.Replace,l=n(t,r);f.length&&(f.call({action:s,location:l,retry:function(){e(t,r)}}),1)||(l=[{usr:l.state,key:l.key,idx:u},i(l)],o.replaceState(l[0],"",l[1]),a(s))},go:r,back:function(){r(-1)},forward:function(){r(1)},listen:function(e){return d.push(e)},block:function(e){var t=f.push(e);return 1===f.length&&s.addEventListener("beforeunload",A),function(){t(),f.length||s.removeEventListener("beforeunload",A)}}}}({window:a}));let s=r.current,[o,l]=(0,e.useState)({action:s.action,location:s.location});return(0,e.useLayoutEffect)((()=>s.listen(l)),[s]),(0,e.createElement)(R,{basename:i,children:n,location:o.location,navigationType:o.action,navigator:s})}const ie=(0,e.forwardRef)((function(t,i){let{onClick:n,reloadDocument:a,replace:r=!1,state:s,target:o,to:l}=t,c=function(e,t){if(null==e)return{};var i,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)i=r[n],t.indexOf(i)>=0||(a[i]=e[i]);return a}(t,ee),u=function(t){N()||T(!1);let{basename:i,navigator:n}=(0,e.useContext)(L),{hash:a,pathname:r,search:s}=Y(t),o=r;if("/"!==i){let e=function(e){return""===e||""===e.pathname?"/":"string"==typeof e?P(e).pathname:e.pathname}(t),n=null!=e&&e.endsWith("/");o="/"===r?i+(n?"/":""):$([i,r])}return n.createHref({pathname:o,search:s,hash:a})}(l),h=function(t,i){let{target:n,replace:a,state:r}=void 0===i?{}:i,s=function(){N()||T(!1);let{basename:t,navigator:i}=(0,e.useContext)(L),{matches:n}=(0,e.useContext)(M),{pathname:a}=D(),r=JSON.stringify(n.map((e=>e.pathnameBase))),s=(0,e.useRef)(!1);(0,e.useEffect)((()=>{s.current=!0}));let o=(0,e.useCallback)((function(e,n){if(void 0===n&&(n={}),!s.current)return;if("number"==typeof e)return void i.go(e);let o=U(e,JSON.parse(r),a);"/"!==t&&(o.pathname=$([t,o.pathname])),(n.replace?i.replace:i.push)(o,n.state)}),[t,i,r,a]);return o}(),o=D(),l=Y(t);return(0,e.useCallback)((e=>{if(!(0!==e.button||n&&"_self"!==n||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e))){e.preventDefault();let i=!!a||E(o)===E(l);s(t,{replace:i,state:r})}}),[o,s,l,a,r,n,t])}(l,{replace:r,state:s,target:o});return(0,e.createElement)("a",J({},c,{href:u,onClick:function(e){n&&n(e),e.defaultPrevented||a||h(e)},ref:i,target:o}))}));var ne=i(864),ae=i(774),re=i.n(ae);const se=function(e){function t(e,n,l,c,d){for(var f,p,g,m,y,k=0,S=0,A=0,C=0,E=0,O=0,R=g=f=0,N=0,D=0,X=0,Y=0,H=l.length,B=H-1,_="",W="",j="",V="";N<H;){if(p=l.charCodeAt(N),N===B&&0!==S+C+A+k&&(0!==S&&(p=47===S?10:47),C=A=k=0,H++,B++),0===S+C+A+k){if(N===B&&(0<D&&(_=_.replace(h,"")),0<_.trim().length)){switch(p){case 32:case 9:case 59:case 13:case 10:break;default:_+=l.charAt(N)}p=59}switch(p){case 123:for(f=(_=_.trim()).charCodeAt(0),g=1,Y=++N;N<H;){switch(p=l.charCodeAt(N)){case 123:g++;break;case 125:g--;break;case 47:switch(p=l.charCodeAt(N+1)){case 42:case 47:e:{for(R=N+1;R<B;++R)switch(l.charCodeAt(R)){case 47:if(42===p&&42===l.charCodeAt(R-1)&&N+2!==R){N=R+1;break e}break;case 10:if(47===p){N=R+1;break e}}N=R}}break;case 91:p++;case 40:p++;case 34:case 39:for(;N++<B&&l.charCodeAt(N)!==p;);}if(0===g)break;N++}if(g=l.substring(Y,N),0===f&&(f=(_=_.replace(u,"").trim()).charCodeAt(0)),64===f){switch(0<D&&(_=_.replace(h,"")),p=_.charCodeAt(1)){case 100:case 109:case 115:case 45:D=n;break;default:D=M}if(Y=(g=t(n,D,g,p,d+1)).length,0<z&&(y=o(3,g,D=i(M,_,X),n,T,P,Y,p,d,c),_=D.join(""),void 0!==y&&0===(Y=(g=y.trim()).length)&&(p=0,g="")),0<Y)switch(p){case 115:_=_.replace(w,s);case 100:case 109:case 45:g=_+"{"+g+"}";break;case 107:g=(_=_.replace(v,"$1 $2"))+"{"+g+"}",g=1===I||2===I&&r("@"+g,3)?"@-webkit-"+g+"@"+g:"@"+g;break;default:g=_+g,112===c&&(W+=g,g="")}else g=""}else g=t(n,i(n,_,X),g,c,d+1);j+=g,g=X=D=R=f=0,_="",p=l.charCodeAt(++N);break;case 125:case 59:if(1<(Y=(_=(0<D?_.replace(h,""):_).trim()).length))switch(0===R&&(f=_.charCodeAt(0),45===f||96<f&&123>f)&&(Y=(_=_.replace(" ",":")).length),0<z&&void 0!==(y=o(1,_,n,e,T,P,W.length,c,d,c))&&0===(Y=(_=y.trim()).length)&&(_="\0\0"),f=_.charCodeAt(0),p=_.charCodeAt(1),f){case 0:break;case 64:if(105===p||99===p){V+=_+l.charAt(N);break}default:58!==_.charCodeAt(Y-1)&&(W+=a(_,f,p,_.charCodeAt(2)))}X=D=R=f=0,_="",p=l.charCodeAt(++N)}}switch(p){case 13:case 10:47===S?S=0:0===1+f&&107!==c&&0<_.length&&(D=1,_+="\0"),0<z*F&&o(0,_,n,e,T,P,W.length,c,d,c),P=1,T++;break;case 59:case 125:if(0===S+C+A+k){P++;break}default:switch(P++,m=l.charAt(N),p){case 9:case 32:if(0===C+k+S)switch(E){case 44:case 58:case 9:case 32:m="";break;default:32!==p&&(m=" ")}break;case 0:m="\\0";break;case 12:m="\\f";break;case 11:m="\\v";break;case 38:0===C+S+k&&(D=X=1,m="\f"+m);break;case 108:if(0===C+S+k+L&&0<R)switch(N-R){case 2:112===E&&58===l.charCodeAt(N-3)&&(L=E);case 8:111===O&&(L=O)}break;case 58:0===C+S+k&&(R=N);break;case 44:0===S+A+C+k&&(D=1,m+="\r");break;case 34:case 39:0===S&&(C=C===p?0:0===C?p:C);break;case 91:0===C+S+A&&k++;break;case 93:0===C+S+A&&k--;break;case 41:0===C+S+k&&A--;break;case 40:0===C+S+k&&(0===f&&(2*E+3*O==533||(f=1)),A++);break;case 64:0===S+A+C+k+R+g&&(g=1);break;case 42:case 47:if(!(0<C+k+A))switch(S){case 0:switch(2*p+3*l.charCodeAt(N+1)){case 235:S=47;break;case 220:Y=N,S=42}break;case 42:47===p&&42===E&&Y+2!==N&&(33===l.charCodeAt(Y+2)&&(W+=l.substring(Y,N+1)),m="",S=0)}}0===S&&(_+=m)}O=E,E=p,N++}if(0<(Y=W.length)){if(D=n,0<z&&void 0!==(y=o(2,W,D,e,T,P,Y,c,d,c))&&0===(W=y).length)return V+W+j;if(W=D.join(",")+"{"+W+"}",0!=I*L){switch(2!==I||r(W,2)||(L=0),L){case 111:W=W.replace(b,":-moz-$1")+W;break;case 112:W=W.replace(x,"::-webkit-input-$1")+W.replace(x,"::-moz-$1")+W.replace(x,":-ms-input-$1")+W}L=0}}return V+W+j}function i(e,t,i){var a=t.trim().split(g);t=a;var r=a.length,s=e.length;switch(s){case 0:case 1:var o=0;for(e=0===s?"":e[0]+" ";o<r;++o)t[o]=n(e,t[o],i).trim();break;default:var l=o=0;for(t=[];o<r;++o)for(var c=0;c<s;++c)t[l++]=n(e[c]+" ",a[o],i).trim()}return t}function n(e,t,i){var n=t.charCodeAt(0);switch(33>n&&(n=(t=t.trim()).charCodeAt(0)),n){case 38:return t.replace(m,"$1"+e.trim());case 58:return e.trim()+t.replace(m,"$1"+e.trim());default:if(0<1*i&&0<t.indexOf("\f"))return t.replace(m,(58===e.charCodeAt(0)?"":"$1")+e.trim())}return e+t}function a(e,t,i,n){var s=e+";",o=2*t+3*i+4*n;if(944===o){e=s.indexOf(":",9)+1;var l=s.substring(e,s.length-1).trim();return l=s.substring(0,e).trim()+l+";",1===I||2===I&&r(l,1)?"-webkit-"+l+l:l}if(0===I||2===I&&!r(s,1))return s;switch(o){case 1015:return 97===s.charCodeAt(10)?"-webkit-"+s+s:s;case 951:return 116===s.charCodeAt(3)?"-webkit-"+s+s:s;case 963:return 110===s.charCodeAt(5)?"-webkit-"+s+s:s;case 1009:if(100!==s.charCodeAt(4))break;case 969:case 942:return"-webkit-"+s+s;case 978:return"-webkit-"+s+"-moz-"+s+s;case 1019:case 983:return"-webkit-"+s+"-moz-"+s+"-ms-"+s+s;case 883:if(45===s.charCodeAt(8))return"-webkit-"+s+s;if(0<s.indexOf("image-set(",11))return s.replace(E,"$1-webkit-$2")+s;break;case 932:if(45===s.charCodeAt(4))switch(s.charCodeAt(5)){case 103:return"-webkit-box-"+s.replace("-grow","")+"-webkit-"+s+"-ms-"+s.replace("grow","positive")+s;case 115:return"-webkit-"+s+"-ms-"+s.replace("shrink","negative")+s;case 98:return"-webkit-"+s+"-ms-"+s.replace("basis","preferred-size")+s}return"-webkit-"+s+"-ms-"+s+s;case 964:return"-webkit-"+s+"-ms-flex-"+s+s;case 1023:if(99!==s.charCodeAt(8))break;return"-webkit-box-pack"+(l=s.substring(s.indexOf(":",15)).replace("flex-","").replace("space-between","justify"))+"-webkit-"+s+"-ms-flex-pack"+l+s;case 1005:return f.test(s)?s.replace(d,":-webkit-")+s.replace(d,":-moz-")+s:s;case 1e3:switch(t=(l=s.substring(13).trim()).indexOf("-")+1,l.charCodeAt(0)+l.charCodeAt(t)){case 226:l=s.replace(y,"tb");break;case 232:l=s.replace(y,"tb-rl");break;case 220:l=s.replace(y,"lr");break;default:return s}return"-webkit-"+s+"-ms-"+l+s;case 1017:if(-1===s.indexOf("sticky",9))break;case 975:switch(t=(s=e).length-10,o=(l=(33===s.charCodeAt(t)?s.substring(0,t):s).substring(e.indexOf(":",7)+1).trim()).charCodeAt(0)+(0|l.charCodeAt(7))){case 203:if(111>l.charCodeAt(8))break;case 115:s=s.replace(l,"-webkit-"+l)+";"+s;break;case 207:case 102:s=s.replace(l,"-webkit-"+(102<o?"inline-":"")+"box")+";"+s.replace(l,"-webkit-"+l)+";"+s.replace(l,"-ms-"+l+"box")+";"+s}return s+";";case 938:if(45===s.charCodeAt(5))switch(s.charCodeAt(6)){case 105:return l=s.replace("-items",""),"-webkit-"+s+"-webkit-box-"+l+"-ms-flex-"+l+s;case 115:return"-webkit-"+s+"-ms-flex-item-"+s.replace(S,"")+s;default:return"-webkit-"+s+"-ms-flex-line-pack"+s.replace("align-content","").replace(S,"")+s}break;case 973:case 989:if(45!==s.charCodeAt(3)||122===s.charCodeAt(4))break;case 931:case 953:if(!0===C.test(e))return 115===(l=e.substring(e.indexOf(":")+1)).charCodeAt(0)?a(e.replace("stretch","fill-available"),t,i,n).replace(":fill-available",":stretch"):s.replace(l,"-webkit-"+l)+s.replace(l,"-moz-"+l.replace("fill-",""))+s;break;case 962:if(s="-webkit-"+s+(102===s.charCodeAt(5)?"-ms-"+s:"")+s,211===i+n&&105===s.charCodeAt(13)&&0<s.indexOf("transform",10))return s.substring(0,s.indexOf(";",27)+1).replace(p,"$1-webkit-$2")+s}return s}function r(e,t){var i=e.indexOf(1===t?":":"{"),n=e.substring(0,3!==t?i:10);return i=e.substring(i+1,e.length-1),R(2!==t?n:n.replace(A,"$1"),i,t)}function s(e,t){var i=a(t,t.charCodeAt(0),t.charCodeAt(1),t.charCodeAt(2));return i!==t+";"?i.replace(k," or ($1)").substring(4):"("+t+")"}function o(e,t,i,n,a,r,s,o,l,u){for(var h,d=0,f=t;d<z;++d)switch(h=O[d].call(c,e,f,i,n,a,r,s,o,l,u)){case void 0:case!1:case!0:case null:break;default:f=h}if(f!==t)return f}function l(e){return void 0!==(e=e.prefix)&&(R=null,e?"function"!=typeof e?I=1:(I=2,R=e):I=0),l}function c(e,i){var n=e;if(33>n.charCodeAt(0)&&(n=n.trim()),n=[n],0<z){var a=o(-1,i,n,n,T,P,0,0,0,0);void 0!==a&&"string"==typeof a&&(i=a)}var r=t(M,n,i,0,0);return 0<z&&void 0!==(a=o(-2,r,n,n,T,P,r.length,0,0,0))&&(r=a),L=0,P=T=1,r}var u=/^\0+/g,h=/[\0\r\f]/g,d=/: */g,f=/zoo|gra/,p=/([,: ])(transform)/g,g=/,\r+?/g,m=/([\t\r\n ])*\f?&/g,v=/@(k\w+)\s*(\S*)\s*/,x=/::(place)/g,b=/:(read-only)/g,y=/[svh]\w+-[tblr]{2}/,w=/\(\s*(.*)\s*\)/g,k=/([\s\S]*?);/g,S=/-self|flex-/g,A=/[^]*?(:[rp][el]a[\w-]+)[^]*/,C=/stretch|:\s*\w+\-(?:conte|avail)/,E=/([^-])(image-set\()/,P=1,T=1,L=0,I=1,M=[],O=[],z=0,R=null,F=0;return c.use=function e(t){switch(t){case void 0:case null:z=O.length=0;break;default:if("function"==typeof t)O[z++]=t;else if("object"==typeof t)for(var i=0,n=t.length;i<n;++i)e(t[i]);else F=0|!!t}return e},c.set=l,void 0!==e&&l(e),c},oe={animationIterationCount:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1};var le=/^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/;const ce=(ue={},function(e){return void 0===ue[e]&&(ue[e]=(t=e,le.test(t)||111===t.charCodeAt(0)&&110===t.charCodeAt(1)&&t.charCodeAt(2)<91)),ue[e];var t});var ue,he=i(679),de=i.n(he);function fe(){return(fe=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var i=arguments[t];for(var n in i)Object.prototype.hasOwnProperty.call(i,n)&&(e[n]=i[n])}return e}).apply(this,arguments)}var pe=function(e,t){for(var i=[e[0]],n=0,a=t.length;n<a;n+=1)i.push(t[n],e[n+1]);return i},ge=function(e){return null!==e&&"object"==typeof e&&"[object Object]"===(e.toString?e.toString():Object.prototype.toString.call(e))&&!(0,ne.typeOf)(e)},me=Object.freeze([]),ve=Object.freeze({});function xe(e){return"function"==typeof e}function be(e){return e.displayName||e.name||"Component"}function ye(e){return e&&"string"==typeof e.styledComponentId}var we="undefined"!=typeof process&&(process.env.REACT_APP_SC_ATTR||process.env.SC_ATTR)||"data-styled",ke="undefined"!=typeof window&&"HTMLElement"in window,Se=Boolean("boolean"==typeof SC_DISABLE_SPEEDY?SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!==process.env.REACT_APP_SC_DISABLE_SPEEDY&&""!==process.env.REACT_APP_SC_DISABLE_SPEEDY?"false"!==process.env.REACT_APP_SC_DISABLE_SPEEDY&&process.env.REACT_APP_SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!==process.env.SC_DISABLE_SPEEDY&&""!==process.env.SC_DISABLE_SPEEDY&&"false"!==process.env.SC_DISABLE_SPEEDY&&process.env.SC_DISABLE_SPEEDY),Ae={};function Ce(e){for(var t=arguments.length,i=new Array(t>1?t-1:0),n=1;n<t;n++)i[n-1]=arguments[n];throw new Error("An error occurred. See https://git.io/JUIaE#"+e+" for more information."+(i.length>0?" Args: "+i.join(", "):""))}var Ee=function(){function e(e){this.groupSizes=new Uint32Array(512),this.length=512,this.tag=e}var t=e.prototype;return t.indexOfGroup=function(e){for(var t=0,i=0;i<e;i++)t+=this.groupSizes[i];return t},t.insertRules=function(e,t){if(e>=this.groupSizes.length){for(var i=this.groupSizes,n=i.length,a=n;e>=a;)(a<<=1)<0&&Ce(16,""+e);this.groupSizes=new Uint32Array(a),this.groupSizes.set(i),this.length=a;for(var r=n;r<a;r++)this.groupSizes[r]=0}for(var s=this.indexOfGroup(e+1),o=0,l=t.length;o<l;o++)this.tag.insertRule(s,t[o])&&(this.groupSizes[e]++,s++)},t.clearGroup=function(e){if(e<this.length){var t=this.groupSizes[e],i=this.indexOfGroup(e),n=i+t;this.groupSizes[e]=0;for(var a=i;a<n;a++)this.tag.deleteRule(i)}},t.getGroup=function(e){var t="";if(e>=this.length||0===this.groupSizes[e])return t;for(var i=this.groupSizes[e],n=this.indexOfGroup(e),a=n+i,r=n;r<a;r++)t+=this.tag.getRule(r)+"/*!sc*/\n";return t},e}(),Pe=new Map,Te=new Map,Le=1,Ie=function(e){if(Pe.has(e))return Pe.get(e);for(;Te.has(Le);)Le++;var t=Le++;return Pe.set(e,t),Te.set(t,e),t},Me=function(e){return Te.get(e)},Oe=function(e,t){t>=Le&&(Le=t+1),Pe.set(e,t),Te.set(t,e)},ze="style["+we+'][data-styled-version="5.3.3"]',Re=new RegExp("^"+we+'\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)'),Fe=function(e,t,i){for(var n,a=i.split(","),r=0,s=a.length;r<s;r++)(n=a[r])&&e.registerName(t,n)},Ne=function(e,t){for(var i=(t.textContent||"").split("/*!sc*/\n"),n=[],a=0,r=i.length;a<r;a++){var s=i[a].trim();if(s){var o=s.match(Re);if(o){var l=0|parseInt(o[1],10),c=o[2];0!==l&&(Oe(c,l),Fe(e,c,o[3]),e.getTag().insertRules(l,n)),n.length=0}else n.push(s)}}},De=function(){return"undefined"!=typeof window&&void 0!==window.__webpack_nonce__?window.__webpack_nonce__:null},Xe=function(e){var t=document.head,i=e||t,n=document.createElement("style"),a=function(e){for(var t=e.childNodes,i=t.length;i>=0;i--){var n=t[i];if(n&&1===n.nodeType&&n.hasAttribute(we))return n}}(i),r=void 0!==a?a.nextSibling:null;n.setAttribute(we,"active"),n.setAttribute("data-styled-version","5.3.3");var s=De();return s&&n.setAttribute("nonce",s),i.insertBefore(n,r),n},Ye=function(){function e(e){var t=this.element=Xe(e);t.appendChild(document.createTextNode("")),this.sheet=function(e){if(e.sheet)return e.sheet;for(var t=document.styleSheets,i=0,n=t.length;i<n;i++){var a=t[i];if(a.ownerNode===e)return a}Ce(17)}(t),this.length=0}var t=e.prototype;return t.insertRule=function(e,t){try{return this.sheet.insertRule(t,e),this.length++,!0}catch(e){return!1}},t.deleteRule=function(e){this.sheet.deleteRule(e),this.length--},t.getRule=function(e){var t=this.sheet.cssRules[e];return void 0!==t&&"string"==typeof t.cssText?t.cssText:""},e}(),He=function(){function e(e){var t=this.element=Xe(e);this.nodes=t.childNodes,this.length=0}var t=e.prototype;return t.insertRule=function(e,t){if(e<=this.length&&e>=0){var i=document.createTextNode(t),n=this.nodes[e];return this.element.insertBefore(i,n||null),this.length++,!0}return!1},t.deleteRule=function(e){this.element.removeChild(this.nodes[e]),this.length--},t.getRule=function(e){return e<this.length?this.nodes[e].textContent:""},e}(),Be=function(){function e(e){this.rules=[],this.length=0}var t=e.prototype;return t.insertRule=function(e,t){return e<=this.length&&(this.rules.splice(e,0,t),this.length++,!0)},t.deleteRule=function(e){this.rules.splice(e,1),this.length--},t.getRule=function(e){return e<this.length?this.rules[e]:""},e}(),_e=ke,We={isServer:!ke,useCSSOMInjection:!Se},je=function(){function e(e,t,i){void 0===e&&(e=ve),void 0===t&&(t={}),this.options=fe({},We,{},e),this.gs=t,this.names=new Map(i),this.server=!!e.isServer,!this.server&&ke&&_e&&(_e=!1,function(e){for(var t=document.querySelectorAll(ze),i=0,n=t.length;i<n;i++){var a=t[i];a&&"active"!==a.getAttribute(we)&&(Ne(e,a),a.parentNode&&a.parentNode.removeChild(a))}}(this))}e.registerId=function(e){return Ie(e)};var t=e.prototype;return t.reconstructWithOptions=function(t,i){return void 0===i&&(i=!0),new e(fe({},this.options,{},t),this.gs,i&&this.names||void 0)},t.allocateGSInstance=function(e){return this.gs[e]=(this.gs[e]||0)+1},t.getTag=function(){return this.tag||(this.tag=(i=(t=this.options).isServer,n=t.useCSSOMInjection,a=t.target,e=i?new Be(a):n?new Ye(a):new He(a),new Ee(e)));var e,t,i,n,a},t.hasNameForId=function(e,t){return this.names.has(e)&&this.names.get(e).has(t)},t.registerName=function(e,t){if(Ie(e),this.names.has(e))this.names.get(e).add(t);else{var i=new Set;i.add(t),this.names.set(e,i)}},t.insertRules=function(e,t,i){this.registerName(e,t),this.getTag().insertRules(Ie(e),i)},t.clearNames=function(e){this.names.has(e)&&this.names.get(e).clear()},t.clearRules=function(e){this.getTag().clearGroup(Ie(e)),this.clearNames(e)},t.clearTag=function(){this.tag=void 0},t.toString=function(){return function(e){for(var t=e.getTag(),i=t.length,n="",a=0;a<i;a++){var r=Me(a);if(void 0!==r){var s=e.names.get(r),o=t.getGroup(a);if(s&&o&&s.size){var l=we+".g"+a+'[id="'+r+'"]',c="";void 0!==s&&s.forEach((function(e){e.length>0&&(c+=e+",")})),n+=""+o+l+'{content:"'+c+'"}/*!sc*/\n'}}}return n}(this)},e}(),Ve=/(a)(d)/gi,Ge=function(e){return String.fromCharCode(e+(e>25?39:97))};function Ue(e){var t,i="";for(t=Math.abs(e);t>52;t=t/52|0)i=Ge(t%52)+i;return(Ge(t%52)+i).replace(Ve,"$1-$2")}var qe=function(e,t){for(var i=t.length;i;)e=33*e^t.charCodeAt(--i);return e},$e=function(e){return qe(5381,e)};function Ze(e){for(var t=0;t<e.length;t+=1){var i=e[t];if(xe(i)&&!ye(i))return!1}return!0}var Qe=$e("5.3.3"),Ke=function(){function e(e,t,i){this.rules=e,this.staticRulesId="",this.isStatic=(void 0===i||i.isStatic)&&Ze(e),this.componentId=t,this.baseHash=qe(Qe,t),this.baseStyle=i,je.registerId(t)}return e.prototype.generateAndInjectStyles=function(e,t,i){var n=this.componentId,a=[];if(this.baseStyle&&a.push(this.baseStyle.generateAndInjectStyles(e,t,i)),this.isStatic&&!i.hash)if(this.staticRulesId&&t.hasNameForId(n,this.staticRulesId))a.push(this.staticRulesId);else{var r=mt(this.rules,e,t,i).join(""),s=Ue(qe(this.baseHash,r)>>>0);if(!t.hasNameForId(n,s)){var o=i(r,"."+s,void 0,n);t.insertRules(n,s,o)}a.push(s),this.staticRulesId=s}else{for(var l=this.rules.length,c=qe(this.baseHash,i.hash),u="",h=0;h<l;h++){var d=this.rules[h];if("string"==typeof d)u+=d;else if(d){var f=mt(d,e,t,i),p=Array.isArray(f)?f.join(""):f;c=qe(c,p+h),u+=p}}if(u){var g=Ue(c>>>0);if(!t.hasNameForId(n,g)){var m=i(u,"."+g,void 0,n);t.insertRules(n,g,m)}a.push(g)}}return a.join(" ")},e}(),Je=/^\s*\/\/.*$/gm,et=[":","[",".","#"];function tt(e){var t,i,n,a,r=void 0===e?ve:e,s=r.options,o=void 0===s?ve:s,l=r.plugins,c=void 0===l?me:l,u=new se(o),h=[],d=function(e){function t(t){if(t)try{e(t+"}")}catch(e){}}return function(i,n,a,r,s,o,l,c,u,h){switch(i){case 1:if(0===u&&64===n.charCodeAt(0))return e(n+";"),"";break;case 2:if(0===c)return n+"/*|*/";break;case 3:switch(c){case 102:case 112:return e(a[0]+n),"";default:return n+(0===h?"/*|*/":"")}case-2:n.split("/*|*/}").forEach(t)}}}((function(e){h.push(e)})),f=function(e,n,r){return 0===n&&-1!==et.indexOf(r[i.length])||r.match(a)?e:"."+t};function p(e,r,s,o){void 0===o&&(o="&");var l=e.replace(Je,""),c=r&&s?s+" "+r+" { "+l+" }":l;return t=o,i=r,n=new RegExp("\\"+i+"\\b","g"),a=new RegExp("(\\"+i+"\\b){2,}"),u(s||!r?"":r,c)}return u.use([].concat(c,[function(e,t,a){2===e&&a.length&&a[0].lastIndexOf(i)>0&&(a[0]=a[0].replace(n,f))},d,function(e){if(-2===e){var t=h;return h=[],t}}])),p.hash=c.length?c.reduce((function(e,t){return t.name||Ce(15),qe(e,t.name)}),5381).toString():"",p}var it=e.createContext(),nt=(it.Consumer,e.createContext()),at=(nt.Consumer,new je),rt=tt();function st(){return(0,e.useContext)(it)||at}function ot(){return(0,e.useContext)(nt)||rt}function lt(t){var i=(0,e.useState)(t.stylisPlugins),n=i[0],a=i[1],r=st(),s=(0,e.useMemo)((function(){var e=r;return t.sheet?e=t.sheet:t.target&&(e=e.reconstructWithOptions({target:t.target},!1)),t.disableCSSOMInjection&&(e=e.reconstructWithOptions({useCSSOMInjection:!1})),e}),[t.disableCSSOMInjection,t.sheet,t.target]),o=(0,e.useMemo)((function(){return tt({options:{prefix:!t.disableVendorPrefixes},plugins:n})}),[t.disableVendorPrefixes,n]);return(0,e.useEffect)((function(){re()(n,t.stylisPlugins)||a(t.stylisPlugins)}),[t.stylisPlugins]),e.createElement(it.Provider,{value:s},e.createElement(nt.Provider,{value:o},t.children))}var ct=function(){function e(e,t){var i=this;this.inject=function(e,t){void 0===t&&(t=rt);var n=i.name+t.hash;e.hasNameForId(i.id,n)||e.insertRules(i.id,n,t(i.rules,n,"@keyframes"))},this.toString=function(){return Ce(12,String(i.name))},this.name=e,this.id="sc-keyframes-"+e,this.rules=t}return e.prototype.getName=function(e){return void 0===e&&(e=rt),this.name+e.hash},e}(),ut=/([A-Z])/,ht=/([A-Z])/g,dt=/^ms-/,ft=function(e){return"-"+e.toLowerCase()};function pt(e){return ut.test(e)?e.replace(ht,ft).replace(dt,"-ms-"):e}var gt=function(e){return null==e||!1===e||""===e};function mt(e,t,i,n){if(Array.isArray(e)){for(var a,r=[],s=0,o=e.length;s<o;s+=1)""!==(a=mt(e[s],t,i,n))&&(Array.isArray(a)?r.push.apply(r,a):r.push(a));return r}return gt(e)?"":ye(e)?"."+e.styledComponentId:xe(e)?"function"!=typeof(l=e)||l.prototype&&l.prototype.isReactComponent||!t?e:mt(e(t),t,i,n):e instanceof ct?i?(e.inject(i,n),e.getName(n)):e:ge(e)?function e(t,i){var n,a,r=[];for(var s in t)t.hasOwnProperty(s)&&!gt(t[s])&&(Array.isArray(t[s])&&t[s].isCss||xe(t[s])?r.push(pt(s)+":",t[s],";"):ge(t[s])?r.push.apply(r,e(t[s],s)):r.push(pt(s)+": "+(n=s,(null==(a=t[s])||"boolean"==typeof a||""===a?"":"number"!=typeof a||0===a||n in oe?String(a).trim():a+"px")+";")));return i?[i+" {"].concat(r,["}"]):r}(e):e.toString();var l}var vt=function(e){return Array.isArray(e)&&(e.isCss=!0),e};function xt(e){for(var t=arguments.length,i=new Array(t>1?t-1:0),n=1;n<t;n++)i[n-1]=arguments[n];return xe(e)||ge(e)?vt(mt(pe(me,[e].concat(i)))):0===i.length&&1===e.length&&"string"==typeof e[0]?e:vt(mt(pe(e,i)))}new Set;var bt=function(e,t,i){return void 0===i&&(i=ve),e.theme!==i.theme&&e.theme||t||i.theme},yt=/[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g,wt=/(^-|-$)/g;function kt(e){return e.replace(yt,"-").replace(wt,"")}var St=function(e){return Ue($e(e)>>>0)};function At(e){return"string"==typeof e&&!0}var Ct=function(e){return"function"==typeof e||"object"==typeof e&&null!==e&&!Array.isArray(e)},Et=function(e){return"__proto__"!==e&&"constructor"!==e&&"prototype"!==e};function Pt(e,t,i){var n=e[i];Ct(t)&&Ct(n)?Tt(n,t):e[i]=t}function Tt(e){for(var t=arguments.length,i=new Array(t>1?t-1:0),n=1;n<t;n++)i[n-1]=arguments[n];for(var a=0,r=i;a<r.length;a++){var s=r[a];if(Ct(s))for(var o in s)Et(o)&&Pt(e,s[o],o)}return e}var Lt=e.createContext();function It(t){var i=(0,e.useContext)(Lt),n=(0,e.useMemo)((function(){return function(e,t){return e?xe(e)?e(t):Array.isArray(e)||"object"!=typeof e?Ce(8):t?fe({},t,{},e):e:Ce(14)}(t.theme,i)}),[t.theme,i]);return t.children?e.createElement(Lt.Provider,{value:n},t.children):null}Lt.Consumer;var Mt={};function Ot(t,i,n){var a=ye(t),r=!At(t),s=i.attrs,o=void 0===s?me:s,l=i.componentId,c=void 0===l?function(e,t){var i="string"!=typeof e?"sc":kt(e);Mt[i]=(Mt[i]||0)+1;var n=i+"-"+St("5.3.3"+i+Mt[i]);return t?t+"-"+n:n}(i.displayName,i.parentComponentId):l,u=i.displayName,h=void 0===u?function(e){return At(e)?"styled."+e:"Styled("+be(e)+")"}(t):u,d=i.displayName&&i.componentId?kt(i.displayName)+"-"+i.componentId:i.componentId||c,f=a&&t.attrs?Array.prototype.concat(t.attrs,o).filter(Boolean):o,p=i.shouldForwardProp;a&&t.shouldForwardProp&&(p=i.shouldForwardProp?function(e,n,a){return t.shouldForwardProp(e,n,a)&&i.shouldForwardProp(e,n,a)}:t.shouldForwardProp);var g,m=new Ke(n,d,a?t.componentStyle:void 0),v=m.isStatic&&0===o.length,x=function(t,i){return function(t,i,n,a){var r=t.attrs,s=t.componentStyle,o=t.defaultProps,l=t.foldedComponentIds,c=t.shouldForwardProp,u=t.styledComponentId,h=t.target,d=function(e,t,i){void 0===e&&(e=ve);var n=fe({},t,{theme:e}),a={};return i.forEach((function(e){var t,i,r,s=e;for(t in xe(s)&&(s=s(n)),s)n[t]=a[t]="className"===t?(i=a[t],r=s[t],i&&r?i+" "+r:i||r):s[t]})),[n,a]}(bt(i,(0,e.useContext)(Lt),o)||ve,i,r),f=d[0],p=d[1],g=function(e,t,i,n){var a=st(),r=ot();return t?e.generateAndInjectStyles(ve,a,r):e.generateAndInjectStyles(i,a,r)}(s,a,f),m=n,v=p.$as||i.$as||p.as||i.as||h,x=At(v),b=p!==i?fe({},i,{},p):i,y={};for(var w in b)"$"!==w[0]&&"as"!==w&&("forwardedAs"===w?y.as=b[w]:(c?c(w,ce,v):!x||ce(w))&&(y[w]=b[w]));return i.style&&p.style!==i.style&&(y.style=fe({},i.style,{},p.style)),y.className=Array.prototype.concat(l,u,g!==u?g:null,i.className,p.className).filter(Boolean).join(" "),y.ref=m,(0,e.createElement)(v,y)}(g,t,i,v)};return x.displayName=h,(g=e.forwardRef(x)).attrs=f,g.componentStyle=m,g.displayName=h,g.shouldForwardProp=p,g.foldedComponentIds=a?Array.prototype.concat(t.foldedComponentIds,t.styledComponentId):me,g.styledComponentId=d,g.target=a?t.target:t,g.withComponent=function(e){var t=i.componentId,a=function(e,t){if(null==e)return{};var i,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)i=r[n],t.indexOf(i)>=0||(a[i]=e[i]);return a}(i,["componentId"]),r=t&&t+"-"+(At(e)?e:kt(be(e)));return Ot(e,fe({},a,{attrs:f,componentId:r}),n)},Object.defineProperty(g,"defaultProps",{get:function(){return this._foldedDefaultProps},set:function(e){this._foldedDefaultProps=a?Tt({},t.defaultProps,e):e}}),g.toString=function(){return"."+g.styledComponentId},r&&de()(g,t,{attrs:!0,componentStyle:!0,displayName:!0,foldedComponentIds:!0,shouldForwardProp:!0,styledComponentId:!0,target:!0,withComponent:!0}),g}var zt=function(e){return function e(t,i,n){if(void 0===n&&(n=ve),!(0,ne.isValidElementType)(i))return Ce(1,String(i));var a=function(){return t(i,n,xt.apply(void 0,arguments))};return a.withConfig=function(a){return e(t,i,fe({},n,{},a))},a.attrs=function(a){return e(t,i,fe({},n,{attrs:Array.prototype.concat(n.attrs,a).filter(Boolean)}))},a}(Ot,e)};["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","marquee","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","marker","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","textPath","tspan"].forEach((function(e){zt[e]=zt(e)}));var Rt,Ft=function(){function e(e,t){this.rules=e,this.componentId=t,this.isStatic=Ze(e),je.registerId(this.componentId+1)}var t=e.prototype;return t.createStyles=function(e,t,i,n){var a=n(mt(this.rules,t,i,n).join(""),""),r=this.componentId+e;i.insertRules(r,r,a)},t.removeStyles=function(e,t){t.clearRules(this.componentId+e)},t.renderStyles=function(e,t,i,n){e>2&&je.registerId(this.componentId+e),this.removeStyles(e,i),this.createStyles(e,t,i,n)},e}();Rt=function(){var t=this;this._emitSheetCSS=function(){var e=t.instance.toString();if(!e)return"";var i=De();return"<style "+[i&&'nonce="'+i+'"',we+'="true"','data-styled-version="5.3.3"'].filter(Boolean).join(" ")+">"+e+"</style>"},this.getStyleTags=function(){return t.sealed?Ce(2):t._emitSheetCSS()},this.getStyleElement=function(){var i;if(t.sealed)return Ce(2);var n=((i={})[we]="",i["data-styled-version"]="5.3.3",i.dangerouslySetInnerHTML={__html:t.instance.toString()},i),a=De();return a&&(n.nonce=a),[e.createElement("style",fe({},n,{key:"sc-0-0"}))]},this.seal=function(){t.sealed=!0},this.instance=new je({isServer:!0}),this.sealed=!1}.prototype,Rt.collectStyles=function(t){return this.sealed?Ce(2):e.createElement(lt,{sheet:this.instance},t)},Rt.interleaveWithNodeStream=function(e){return Ce(3)};const Nt=zt;var Dt;i(938);var Xt,Yt,Ht=Nt.aside(Dt||(Xt=["\n  position: fixed;\n  right: 2%;\n  bottom: 2%;\n\n  & .side-button {\n    font-size: 1.8rem;\n    background-color: ",";\n    border-radius: 100%;\n    padding: 0.4em;\n    box-shadow: 2px 2px 20px ",";\n\n    &:first-child {\n      margin-right: 0.6em;\n    }\n  }\n\n  & .move-top-button {\n    animation-name: appear;\n    animation-duration: 0.6s;\n    animation-fill-mode: forwards;\n  }\n"],Yt||(Yt=Xt.slice(0)),Dt=Object.freeze(Object.defineProperties(Xt,{raw:{value:Object.freeze(Yt)}}))),(function(e){return e.theme.textColor}),(function(e){return e.theme.textColor}));function Bt(e,t){(null==t||t>e.length)&&(t=e.length);for(var i=0,n=new Array(t);i<t;i++)n[i]=e[i];return n}const _t=function(){var t,i,n=(t=(0,e.useState)(!0),i=2,function(e){if(Array.isArray(e))return e}(t)||function(e,t){var i=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=i){var n,a,r=[],s=!0,o=!1;try{for(i=i.call(e);!(s=(n=i.next()).done)&&(r.push(n.value),!t||r.length!==t);s=!0);}catch(e){o=!0,a=e}finally{try{s||null==i.return||i.return()}finally{if(o)throw a}}return r}}(t,i)||function(e,t){if(e){if("string"==typeof e)return Bt(e,t);var i=Object.prototype.toString.call(e).slice(8,-1);return"Object"===i&&e.constructor&&(i=e.constructor.name),"Map"===i||"Set"===i?Array.from(e):"Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)?Bt(e,t):void 0}}(t,i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=n[0],r=n[1],s=(0,e.useCallback)((function(){return window.scrollTo({top:0,left:0,behavior:"smooth"})}),[]),o=(0,e.useCallback)((function(){return r(0===document.documentElement.scrollTop)}),[]);return(0,e.useEffect)((function(){return window.addEventListener("scroll",o),function(){return window.removeEventListener("scroll",o)}}),[]),e.createElement(Ht,null,a||e.createElement("button",{type:"button",className:"side-button move-top-button",onClick:s},"👆"),e.createElement("button",{type:"button",className:"side-button"},"☀️"))};var Wt,jt=Nt.main(Wt||(Wt=function(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n  @media (min-width: 486px) {\n    width: 486px;\n    margin: auto;\n  }\n"])));const Vt=function(t){var i=t.children;return e.createElement(jt,null,i,e.createElement(_t,null))};var Gt,Ut,qt,$t,Zt=i(767),Qt="https://api.coinpaprika.com/v1",Kt=function(){return fetch("".concat(Qt,"/coins")).then((function(e){return e.json()}))},Jt=i(697),ei=i.n(Jt),ti=i(524),ii=i.n(ti),ni=i(590),ai=i.n(ni),ri=i(418),si=i.n(ri),oi="bodyAttributes",li="htmlAttributes",ci={BASE:"base",BODY:"body",HEAD:"head",HTML:"html",LINK:"link",META:"meta",NOSCRIPT:"noscript",SCRIPT:"script",STYLE:"style",TITLE:"title"},ui=(Object.keys(ci).map((function(e){return ci[e]})),"charset"),hi="cssText",di="href",fi="innerHTML",pi="itemprop",gi="rel",mi={accesskey:"accessKey",charset:"charSet",class:"className",contenteditable:"contentEditable",contextmenu:"contextMenu","http-equiv":"httpEquiv",itemprop:"itemProp",tabindex:"tabIndex"},vi=Object.keys(mi).reduce((function(e,t){return e[mi[t]]=t,e}),{}),xi=[ci.NOSCRIPT,ci.SCRIPT,ci.STYLE],bi="data-react-helmet",yi="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},wi=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},ki=function(){function e(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,i,n){return i&&e(t.prototype,i),n&&e(t,n),t}}(),Si=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var i=arguments[t];for(var n in i)Object.prototype.hasOwnProperty.call(i,n)&&(e[n]=i[n])}return e},Ai=function(e,t){var i={};for(var n in e)t.indexOf(n)>=0||Object.prototype.hasOwnProperty.call(e,n)&&(i[n]=e[n]);return i},Ci=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t},Ei=function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return!1===t?String(e):String(e).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#x27;")},Pi=function(e){var t=Oi(e,ci.TITLE),i=Oi(e,"titleTemplate");if(i&&t)return i.replace(/%s/g,(function(){return Array.isArray(t)?t.join(""):t}));var n=Oi(e,"defaultTitle");return t||n||void 0},Ti=function(e){return Oi(e,"onChangeClientState")||function(){}},Li=function(e,t){return t.filter((function(t){return void 0!==t[e]})).map((function(t){return t[e]})).reduce((function(e,t){return Si({},e,t)}),{})},Ii=function(e,t){return t.filter((function(e){return void 0!==e[ci.BASE]})).map((function(e){return e[ci.BASE]})).reverse().reduce((function(t,i){if(!t.length)for(var n=Object.keys(i),a=0;a<n.length;a++){var r=n[a].toLowerCase();if(-1!==e.indexOf(r)&&i[r])return t.concat(i)}return t}),[])},Mi=function(e,t,i){var n={};return i.filter((function(t){return!!Array.isArray(t[e])||(void 0!==t[e]&&Di("Helmet: "+e+' should be of type "Array". Instead found type "'+yi(t[e])+'"'),!1)})).map((function(t){return t[e]})).reverse().reduce((function(e,i){var a={};i.filter((function(e){for(var i=void 0,r=Object.keys(e),s=0;s<r.length;s++){var o=r[s],l=o.toLowerCase();-1===t.indexOf(l)||i===gi&&"canonical"===e[i].toLowerCase()||l===gi&&"stylesheet"===e[l].toLowerCase()||(i=l),-1===t.indexOf(o)||o!==fi&&o!==hi&&o!==pi||(i=o)}if(!i||!e[i])return!1;var c=e[i].toLowerCase();return n[i]||(n[i]={}),a[i]||(a[i]={}),!n[i][c]&&(a[i][c]=!0,!0)})).reverse().forEach((function(t){return e.push(t)}));for(var r=Object.keys(a),s=0;s<r.length;s++){var o=r[s],l=si()({},n[o],a[o]);n[o]=l}return e}),[]).reverse()},Oi=function(e,t){for(var i=e.length-1;i>=0;i--){var n=e[i];if(n.hasOwnProperty(t))return n[t]}return null},zi=(Gt=Date.now(),function(e){var t=Date.now();t-Gt>16?(Gt=t,e(t)):setTimeout((function(){zi(e)}),0)}),Ri=function(e){return clearTimeout(e)},Fi="undefined"!=typeof window?window.requestAnimationFrame&&window.requestAnimationFrame.bind(window)||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||zi:i.g.requestAnimationFrame||zi,Ni="undefined"!=typeof window?window.cancelAnimationFrame||window.webkitCancelAnimationFrame||window.mozCancelAnimationFrame||Ri:i.g.cancelAnimationFrame||Ri,Di=function(e){return console&&"function"==typeof console.warn&&console.warn(e)},Xi=null,Yi=function(e,t){var i=e.baseTag,n=e.bodyAttributes,a=e.htmlAttributes,r=e.linkTags,s=e.metaTags,o=e.noscriptTags,l=e.onChangeClientState,c=e.scriptTags,u=e.styleTags,h=e.title,d=e.titleAttributes;_i(ci.BODY,n),_i(ci.HTML,a),Bi(h,d);var f={baseTag:Wi(ci.BASE,i),linkTags:Wi(ci.LINK,r),metaTags:Wi(ci.META,s),noscriptTags:Wi(ci.NOSCRIPT,o),scriptTags:Wi(ci.SCRIPT,c),styleTags:Wi(ci.STYLE,u)},p={},g={};Object.keys(f).forEach((function(e){var t=f[e],i=t.newTags,n=t.oldTags;i.length&&(p[e]=i),n.length&&(g[e]=f[e].oldTags)})),t&&t(),l(e,p,g)},Hi=function(e){return Array.isArray(e)?e.join(""):e},Bi=function(e,t){void 0!==e&&document.title!==e&&(document.title=Hi(e)),_i(ci.TITLE,t)},_i=function(e,t){var i=document.getElementsByTagName(e)[0];if(i){for(var n=i.getAttribute(bi),a=n?n.split(","):[],r=[].concat(a),s=Object.keys(t),o=0;o<s.length;o++){var l=s[o],c=t[l]||"";i.getAttribute(l)!==c&&i.setAttribute(l,c),-1===a.indexOf(l)&&a.push(l);var u=r.indexOf(l);-1!==u&&r.splice(u,1)}for(var h=r.length-1;h>=0;h--)i.removeAttribute(r[h]);a.length===r.length?i.removeAttribute(bi):i.getAttribute(bi)!==s.join(",")&&i.setAttribute(bi,s.join(","))}},Wi=function(e,t){var i=document.head||document.querySelector(ci.HEAD),n=i.querySelectorAll(e+"[data-react-helmet]"),a=Array.prototype.slice.call(n),r=[],s=void 0;return t&&t.length&&t.forEach((function(t){var i=document.createElement(e);for(var n in t)if(t.hasOwnProperty(n))if(n===fi)i.innerHTML=t.innerHTML;else if(n===hi)i.styleSheet?i.styleSheet.cssText=t.cssText:i.appendChild(document.createTextNode(t.cssText));else{var o=void 0===t[n]?"":t[n];i.setAttribute(n,o)}i.setAttribute(bi,"true"),a.some((function(e,t){return s=t,i.isEqualNode(e)}))?a.splice(s,1):r.push(i)})),a.forEach((function(e){return e.parentNode.removeChild(e)})),r.forEach((function(e){return i.appendChild(e)})),{oldTags:a,newTags:r}},ji=function(e){return Object.keys(e).reduce((function(t,i){var n=void 0!==e[i]?i+'="'+e[i]+'"':""+i;return t?t+" "+n:n}),"")},Vi=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Object.keys(e).reduce((function(t,i){return t[mi[i]||i]=e[i],t}),t)},Gi=function(t,i,n){switch(t){case ci.TITLE:return{toComponent:function(){return t=i.title,n=i.titleAttributes,(a={key:t})[bi]=!0,r=Vi(n,a),[e.createElement(ci.TITLE,r,t)];var t,n,a,r},toString:function(){return function(e,t,i,n){var a=ji(i),r=Hi(t);return a?"<"+e+' data-react-helmet="true" '+a+">"+Ei(r,n)+"</"+e+">":"<"+e+' data-react-helmet="true">'+Ei(r,n)+"</"+e+">"}(t,i.title,i.titleAttributes,n)}};case oi:case li:return{toComponent:function(){return Vi(i)},toString:function(){return ji(i)}};default:return{toComponent:function(){return function(t,i){return i.map((function(i,n){var a,r=((a={key:n})[bi]=!0,a);return Object.keys(i).forEach((function(e){var t=mi[e]||e;if(t===fi||t===hi){var n=i.innerHTML||i.cssText;r.dangerouslySetInnerHTML={__html:n}}else r[t]=i[e]})),e.createElement(t,r)}))}(t,i)},toString:function(){return function(e,t,i){return t.reduce((function(t,n){var a=Object.keys(n).filter((function(e){return!(e===fi||e===hi)})).reduce((function(e,t){var a=void 0===n[t]?t:t+'="'+Ei(n[t],i)+'"';return e?e+" "+a:a}),""),r=n.innerHTML||n.cssText||"",s=-1===xi.indexOf(e);return t+"<"+e+' data-react-helmet="true" '+a+(s?"/>":">"+r+"</"+e+">")}),"")}(t,i,n)}}}},Ui=function(e){var t=e.baseTag,i=e.bodyAttributes,n=e.encode,a=e.htmlAttributes,r=e.linkTags,s=e.metaTags,o=e.noscriptTags,l=e.scriptTags,c=e.styleTags,u=e.title,h=void 0===u?"":u,d=e.titleAttributes;return{base:Gi(ci.BASE,t,n),bodyAttributes:Gi(oi,i,n),htmlAttributes:Gi(li,a,n),link:Gi(ci.LINK,r,n),meta:Gi(ci.META,s,n),noscript:Gi(ci.NOSCRIPT,o,n),script:Gi(ci.SCRIPT,l,n),style:Gi(ci.STYLE,c,n),title:Gi(ci.TITLE,{title:h,titleAttributes:d},n)}},qi=ii()((function(e){return{baseTag:Ii([di,"target"],e),bodyAttributes:Li(oi,e),defer:Oi(e,"defer"),encode:Oi(e,"encodeSpecialCharacters"),htmlAttributes:Li(li,e),linkTags:Mi(ci.LINK,[gi,di],e),metaTags:Mi(ci.META,["name",ui,"http-equiv","property",pi],e),noscriptTags:Mi(ci.NOSCRIPT,[fi],e),onChangeClientState:Ti(e),scriptTags:Mi(ci.SCRIPT,["src",fi],e),styleTags:Mi(ci.STYLE,[hi],e),title:Pi(e),titleAttributes:Li("titleAttributes",e)}}),(function(e){Xi&&Ni(Xi),e.defer?Xi=Fi((function(){Yi(e,(function(){Xi=null}))})):(Yi(e),Xi=null)}),Ui)((function(){return null})),$i=(Ut=qi,$t=qt=function(t){function i(){return wi(this,i),Ci(this,t.apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(i,t),i.prototype.shouldComponentUpdate=function(e){return!ai()(this.props,e)},i.prototype.mapNestedChildrenToProps=function(e,t){if(!t)return null;switch(e.type){case ci.SCRIPT:case ci.NOSCRIPT:return{innerHTML:t};case ci.STYLE:return{cssText:t}}throw new Error("<"+e.type+" /> elements are self-closing and can not contain children. Refer to our API for more information.")},i.prototype.flattenArrayTypeChildren=function(e){var t,i=e.child,n=e.arrayTypeChildren,a=e.newChildProps,r=e.nestedChildren;return Si({},n,((t={})[i.type]=[].concat(n[i.type]||[],[Si({},a,this.mapNestedChildrenToProps(i,r))]),t))},i.prototype.mapObjectTypeChildren=function(e){var t,i,n=e.child,a=e.newProps,r=e.newChildProps,s=e.nestedChildren;switch(n.type){case ci.TITLE:return Si({},a,((t={})[n.type]=s,t.titleAttributes=Si({},r),t));case ci.BODY:return Si({},a,{bodyAttributes:Si({},r)});case ci.HTML:return Si({},a,{htmlAttributes:Si({},r)})}return Si({},a,((i={})[n.type]=Si({},r),i))},i.prototype.mapArrayTypeChildrenToProps=function(e,t){var i=Si({},t);return Object.keys(e).forEach((function(t){var n;i=Si({},i,((n={})[t]=e[t],n))})),i},i.prototype.warnOnInvalidChildren=function(e,t){return!0},i.prototype.mapChildrenToProps=function(t,i){var n=this,a={};return e.Children.forEach(t,(function(e){if(e&&e.props){var t=e.props,r=t.children,s=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Object.keys(e).reduce((function(t,i){return t[vi[i]||i]=e[i],t}),t)}(Ai(t,["children"]));switch(n.warnOnInvalidChildren(e,r),e.type){case ci.LINK:case ci.META:case ci.NOSCRIPT:case ci.SCRIPT:case ci.STYLE:a=n.flattenArrayTypeChildren({child:e,arrayTypeChildren:a,newChildProps:s,nestedChildren:r});break;default:i=n.mapObjectTypeChildren({child:e,newProps:i,newChildProps:s,nestedChildren:r})}}})),i=this.mapArrayTypeChildrenToProps(a,i)},i.prototype.render=function(){var t=this.props,i=t.children,n=Ai(t,["children"]),a=Si({},n);return i&&(a=this.mapChildrenToProps(i,a)),e.createElement(Ut,a)},ki(i,null,[{key:"canUseDOM",set:function(e){Ut.canUseDOM=e}}]),i}(e.Component),qt.propTypes={base:ei().object,bodyAttributes:ei().object,children:ei().oneOfType([ei().arrayOf(ei().node),ei().node]),defaultTitle:ei().string,defer:ei().bool,encodeSpecialCharacters:ei().bool,htmlAttributes:ei().object,link:ei().arrayOf(ei().object),meta:ei().arrayOf(ei().object),noscript:ei().arrayOf(ei().object),onChangeClientState:ei().func,script:ei().arrayOf(ei().object),style:ei().arrayOf(ei().object),title:ei().string,titleAttributes:ei().object,titleTemplate:ei().string},qt.defaultProps={defer:!0,encodeSpecialCharacters:!0},qt.peek=Ut.peek,qt.rewind=function(){var e=Ut.rewind();return e||(e=Ui({baseTag:[],bodyAttributes:{},encodeSpecialCharacters:!0,htmlAttributes:{},linkTags:[],metaTags:[],noscriptTags:[],scriptTags:[],styleTags:[],title:"",titleAttributes:{}})),e},$t);$i.renderStatic=$i.rewind;var Zi=function(t){var i=t.title,n=t.description,a=t.image,r=D().pathname;return e.createElement($i,null,e.createElement("title",null,i),e.createElement("meta",{name:"keyword",content:"blecoin, React.js, 코인클론사이트"}),e.createElement("meta",{name:"description",content:n}),e.createElement("meta",{name:"author",content:"1-blue"}),e.createElement("meta",{property:"og:url",content:"https://1-blue.github.io/react-clone-project".concat(r)}),e.createElement("meta",{property:"og:title",content:"blecoin"}),e.createElement("meta",{property:"og:description",content:n}),e.createElement("meta",{property:"og:image",content:a}),e.createElement("meta",{property:"og:type",content:"website"}),e.createElement("meta",{property:"og:site_name",content:"blecoin"}),e.createElement("meta",{property:"og:locale",content:"ko_KR"}),e.createElement("meta",{property:"og:image:width",content:"486"}),e.createElement("meta",{property:"og:image:height",content:"600"}))};Zi.defaultProps={title:"Blecoin",description:"코인클론사이트 by 노마드코더, React.js",image:"https://cryptoicon-api.vercel.app/api/icon/btc"};const Qi=Zi;var Ki,Ji=Nt.h2(Ki||(Ki=function(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n  display: flex;\n  justify-content: center;\n\n  font-size: 2rem;\n  font-weight: bold;\n  color: ",";\n  text-align: center;\n  margin: 1em 0;\n"])),(function(e){return e.theme.mainColor}));const en=function(t){var i=t.children;return e.createElement(Ji,null,i)};var tn,nn=Nt(ie)(tn||(tn=function(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n  display: flex;\n  align-items: center;\n\n  padding: 0.6em 1.2em;\n  margin-bottom: 1em;\n\n  background-color: ",";\n  color: ",";\n  border-radius: 0.6em;\n\n  transition: all 0.4s;\n\n  &:hover {\n    transform: translateY(-10px);\n    background-color: ",";\n    color: ",";\n  }\n\n  /* 코인의 대표 이미지 */\n  & .coin-image {\n    width: 40px;\n    height: 40px;\n    margin-right: 0.6em;\n  }\n\n  /* 코인 데이터들 */\n  & .coin-data {\n    flex: 1;\n    display: flex;\n    justify-content: space-between;\n    align-items: baseline;\n\n    /* 코인 이름 */\n    & .coin-name {\n      font-size: 1.2rem;\n      font-weight: 600;\n    }\n\n    /* 코인 가격 */\n    /* 코인 가격 변동률 ( 하루기준 ) */\n    & .coin-price,\n    .coin-change-rate {\n      color: ",";\n    }\n  }\n"])),(function(e){return e.theme.textColor}),(function(e){return e.theme.bgColor}),(function(e){return e.theme.accentColor}),(function(e){return e.theme.textColor}),(function(e){var t=e.$upperLimit,i=e.theme;return t?i.upperColor:i.lowerColor}));const an=function(t){var i=t.id,n=t.symbol,a=t.name,r=t.price,s=t.market_cap_change_24h;return e.createElement("li",null,e.createElement(nn,{to:"/".concat(i),state:{symbol:n,name:a},$upperLimit:s>0},e.createElement("img",{src:"https://cryptoicon-api.vercel.app/api/icon/".concat(n.toLocaleLowerCase()),alt:"coin-image",className:"coin-image"}),e.createElement("div",{className:"coin-data"},e.createElement("span",{className:"coin-name"},a),e.createElement("span",{className:"coin-price"},"$ ",r.toFixed(6)),e.createElement("span",{className:"coin-change-rate"},s,"%"))))};var rn,sn=Nt.section(rn||(rn=function(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.4);\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  & .coin-spinner-image {\n    animation-name: spinner;\n    animation-duration: 1.4s;\n    animation-iteration-count: infinite;\n  }\n"])));const on=function(){return e.createElement(sn,null,e.createElement("img",{src:"https://cryptoicon-api.vercel.app/api/icon/btc",alt:"coin-spinner-image",className:"coin-spinner-image"}))},ln=function(){var t=(0,Zt.useQuery)("all-coins",Kt),i=t.isLoading,n=t.data,a=(0,Zt.useQuery)("all-tickers",(function(){return fetch("".concat(Qt,"/tickers")).then((function(e){return e.json()}))})),r=a.isLoading,s=a.data;return e.createElement(e.Fragment,null,e.createElement(Qi,{title:"Blecoin | HOME"}),e.createElement(en,null,"🪙Coin🪙"),i||r?e.createElement(on,null):e.createElement("ul",null,null==n?void 0:n.slice(0,100).map((function(t,i){return e.createElement(an,{key:t.id,id:t.id,symbol:t.symbol,name:t.name,price:null==s?void 0:s[i].quotes.USD.price,market_cap_change_24h:null==s?void 0:s[i].quotes.USD.market_cap_change_24h})}))))};var cn=i(229);const un=function(t){var i=t.coinId,n=(0,Zt.useQuery)([i,"ohlcv"],(function(){return function(e){var t=Math.floor(Date.now()/1e3),i=t-2592e3;return fetch("".concat(Qt,"/coins/").concat(e,"/ohlcv/historical?start=").concat(i,"&end=").concat(t)).then((function(e){return e.json()}))}(i)})),a=n.isLoading,r=n.data;return a?e.createElement(on,null):e.createElement(e.Fragment,null,e.createElement(cn.Z,{type:"candlestick",series:[{data:null==r?void 0:r.map((function(e){return{x:e.time_open,y:[Math.round(e.open),Math.round(e.high),Math.round(e.low),Math.round(e.close)]}}))}],options:{chart:{width:486,height:486,toolbar:{show:!1}},theme:{mode:"dark"},plotOptions:{candlestick:{colors:{upward:"#1C6DD0",downward:"#DA1212"}}},title:{text:"한달 최고가, 최저가, 시작가, 종가",align:"center",offsetY:26,style:{fontSize:"1.5rem",fontWeight:"bold",color:"#FDEBF7",fontFamily:"Yeon Sung, cursive"}},xaxis:{type:"datetime"},yaxis:{labels:{formatter:function(e){return"$ "+e}}}}}))};var hn,dn,fn;function pn(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}var gn=Nt.p(hn||(hn=pn(["\n  padding: 0.4em 1em;\n  margin-bottom: 1.4em;\n"]))),mn=Nt.ul(dn||(dn=pn(["\n  display: flex;\n  justify-content: space-around;\n  padding: 0.8em 0;\n  background-color: rgba(20, 20, 20, 0.6);\n  border-radius: 1em;\n  margin-bottom: 1.4em;\n"]))),vn=Nt.li(fn||(fn=pn(["\n  text-align: center;\n\n  & .overview-title {\n    font-size: 0.8rem;\n    margin-bottom: 0.4em;\n  }\n  & .overview-contents {\n    font-size: 1rem;\n    font-weight: bold;\n  }\n"])));const xn=function(){var t,i,n,a,r,s,o,l=function(){let{matches:t}=(0,e.useContext)(M),i=t[t.length-1];return i?i.params:{}}().coinId,c=D().state,u=(0,e.useMemo)((function(){return{width:"40px",height:"40px",marginRight:"0.4em"}}),[]),h=(0,Zt.useQuery)([l,"coin"],(function(){return function(e){return fetch("".concat(Qt,"/coins/").concat(e)).then((function(e){return e.json()}))}(l)})),d=h.isLoading,f=h.data,p=(0,Zt.useQuery)([l,"ticker"],(function(){return function(e){return fetch("".concat(Qt,"/tickers/").concat(e)).then((function(e){return e.json()}))}(l)})),g=p.isLoading,m=p.data;return d||g||!c?e.createElement(on,null):e.createElement(e.Fragment,null,e.createElement(Qi,{title:"Blecoin | ".concat(null==f?void 0:f.name.toLocaleLowerCase()),description:"코인 클론 사이트 | ".concat(null==f?void 0:f.description),image:"https://cryptoicon-api.vercel.app/api/icon/".concat(c.symbol.toLocaleLowerCase())}),e.createElement(en,null,e.createElement("img",{src:"https://cryptoicon-api.vercel.app/api/icon/".concat(c.symbol.toLocaleLowerCase()),alt:"coin-image",style:u}),e.createElement("span",null,c.name)),e.createElement(un,{coinId:l}),e.createElement(mn,null,e.createElement(vn,null,e.createElement("h6",{className:"overview-title"},"Rank"),e.createElement("span",{className:"overview-contents"},null==f?void 0:f.rank)),e.createElement(vn,null,e.createElement("h6",{className:"overview-title"},"Symbol"),e.createElement("span",{className:"overview-contents"},null==f?void 0:f.symbol)),e.createElement(vn,null,e.createElement("h6",{className:"overview-title"},"start date"),e.createElement("span",{className:"overview-contents"},(t=new Date(null==f?void 0:f.started_at),i="YYYY-MM-DD",n=new Date(t),a=[],r="",s=i.match(/[^YMDhms]/g),o=0,a.push(function(e,t){var i=t.match(/YY{2}/g);switch(null==i?void 0:i.length){case 1:return e.getFullYear();case 2:return+String(e.getFullYear()).slice(2);default:return}}(n,i)),a.push(function(e,t){var i=null,n=t.match(/M/g);if(n)return i=e.getMonth()+1,2===(null==n?void 0:n.length)&&i<10&&(i="0".concat(i)),i}(n,i)),a.push(function(e,t){var i=null,n=t.match(/D/g);if(n)return i=e.getDate(),2===(null==n?void 0:n.length)&&i<10&&(i="0".concat(i)),i}(n,i)),a.push(function(e,t){var i=null,n=t.match(/h/g);if(n)return i=e.getHours(),2===(null==n?void 0:n.length)&&i<10&&(i="0".concat(i)),i}(n,i)),a.push(function(e,t){var i=null,n=t.match(/m/g);if(n)return i=e.getMinutes(),2===(null==n?void 0:n.length)&&i<10&&(i="0".concat(i)),i}(n,i)),a.push(function(e,t){var i=null,n=t.match(/m/g);if(n)return i=e.getSeconds(),2===(null==n?void 0:n.length)&&i<10&&(i="0".concat(i)),i}(n,i)),a.forEach((function(e){if(e){var t=s[o]?s[o]:"";o+=1,r+="".concat(e).concat(t)}})),r)," "))),e.createElement(gn,null,null==f?void 0:f.description),e.createElement(mn,null,e.createElement(vn,null,e.createElement("h6",{className:"overview-title"},"유통량"),e.createElement("span",{className:"overview-contents"},null==m?void 0:m.circulating_supply)),e.createElement(vn,null,e.createElement("h6",{className:"overview-title"},"전체공급량"),e.createElement("span",{className:"overview-contents"},null==m?void 0:m.total_supply," ")),e.createElement(vn,null,e.createElement("h6",{className:"overview-title"},"최대공급량"),e.createElement("span",{className:"overview-contents"},null==m?void 0:m.max_supply))))},bn=function(){return e.createElement(e.Fragment,null,e.createElement("h1",null,"404 - Not Found"))};var yn,wn=function(t){for(var i=arguments.length,n=new Array(i>1?i-1:0),a=1;a<i;a++)n[a-1]=arguments[a];var r=xt.apply(void 0,[t].concat(n)),s="sc-global-"+St(JSON.stringify(r)),o=new Ft(r,s);function l(t){var i=st(),n=ot(),a=(0,e.useContext)(Lt),r=(0,e.useRef)(i.allocateGSInstance(s)).current;return i.server&&c(r,t,i,a,n),(0,e.useLayoutEffect)((function(){if(!i.server)return c(r,t,i,a,n),function(){return o.removeStyles(r,i)}}),[r,t,i,a,n]),null}function c(e,t,i,n,a){if(o.isStatic)o.renderStyles(e,Ae,i,a);else{var r=fe({},t,{theme:bt(t,n,l.defaultProps)});o.renderStyles(e,r,i,a)}}return e.memo(l)}(yn||(yn=function(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n  body {\n    background-color: ",";\n    color: ",";\n    font-family: 'Noto Sans', sans-serif;\n  }\n"])),(function(e){return e.theme.bgColor}),(function(e){return e.theme.textColor}));const kn=function(){return e.createElement(te,{basename:"/react-clone-project"},e.createElement(Vt,null,e.createElement(wn,null),null,e.createElement(F,null,e.createElement(z,{path:"/",element:e.createElement(ln,null)}),e.createElement(z,{path:"/:coinId",element:e.createElement(xn,null)}),e.createElement(z,{path:"/*",element:e.createElement(bn,null)}))))};var Sn={bgColor:"#f5f6fa",textColor:"#2f3640",accentColor:"#516BEB",mainColor:"#8A39E1",upperColor:"#43aa05",lowerColor:"#e15241"},An={bgColor:"#2f3640",textColor:"#f5f6fa",accentColor:"#516BEB",mainColor:"#8A39E1",upperColor:"#43aa05",lowerColor:"#e15241"};const Cn=function(t){var i=t.children,n=(0,Zt.useQuery)("theme",(function(){return{theme:"dark"}})).data;return e.createElement(It,{theme:"dark"===(null==n?void 0:n.theme)?An:Sn},i)};var En=new Zt.QueryClient;t.render(e.createElement(e.StrictMode,null,e.createElement(Zt.QueryClientProvider,{client:En},e.createElement(Cn,null,e.createElement(kn,null)))),document.querySelector("#root"))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,